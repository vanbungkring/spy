var Ptero = Ptero || {};
Ptero.bezier = function(b, c, a, d, h) {
  var g = function(c) {
      var d = 1 - c;
      return 3 * d * d * c * b + 3 * d * c * c * a + c * c * c
    },
    k = function(a) {
      var b = 1 - a;
      return 3 * b * b * a * c + 3 * b * a * a * d + a * a * a
    };
  return function(c) {
    var d, l, e, p;
    e = c;
    for (d = 0; 8 > d; d++) {
      p = g(e) - c;
      if (Math.abs(p) < h) return k(e);
      l = 1 - e;
      l = 3 * (2 * (e - 1) * e + l * l) * b + 3 * (-e * e * e + 2 * l * e) * a;
      if (1E-6 > Math.abs(l)) break;
      e -= p / l
    }
    d = 0;
    l = 1;
    e = c;
    if (e < d) return k(d);
    if (e > l) return k(l);
    for (; d < l;) {
      p = g(e);
      if (Math.abs(p - c) < h) break;
      c > p ? d = e : l = e;
      e = 0.5 * (l - d) + d
    }
    return k(e)
  }
};
(function() {
  function b(a) {
    var b, c = a.length,
      k = 0;
    for (b = 0; b < c; b++) k += a[b];
    return k
  }

  function c(a, b) {
    if (a < b[0]) return null;
    a -= b[0];
    var c, k = b.length;
    for (c = 1; c < k; c++) {
      if (a <= b[c]) return {
        index: c - 1,
        time: a,
        timeFrac: 0 == b[c] ? 0 : a / b[c]
      };
      a -= b[c]
    }
    return null
  }
  var a = {
    linear: function(a) {
      return a
    },
    "<": function(a) {
      return Math.pow(a, 1.7)
    },
    ">": function(a) {
      return Math.pow(a, 0.48)
    }
  };
  Ptero.makeInterp = function(d, h, g) {
    function k(a) {
      a = c(a, g);
      if (!a) return null;
      var b = a.index,
        e = h[b];
      return e + (h[b + 1] - e) * d(a.timeFrac)
    }
    var s = b(g);
    if ("function" !=
      typeof d)
      if ("string" == typeof d) d = a[d];
      else return null;
    k.startTime = g[0];
    k.totalTime = s;
    return k
  };
  Ptero.makeInterpForObjs = function(d, h, g, k) {
    function s(a) {
      a = c(a, k);
      if (!a) return null;
      var b = a.index,
        d = {},
        l, s;
      for (l = 0; l < q; l++) {
        s = g[l];
        var v = h[b][s];
        d[s] = v + (h[b + 1][s] - v) * e(a.timeFrac)
      }
      return d
    }
    var q = g.length,
      l = b(k),
      e = a[d];
    s.startTime = k[0];
    s.totalTime = l;
    return s
  };
  (function() {
    function a(b, c, d, l, e, h) {
      return function(a) {
        var g = h - d;
        a = (a - d) / g;
        var m = a * a,
          u = m * a;
        return (2 * u - 3 * m + 1) * b + (u - 2 * m + a) * g * c + (-2 * u + 3 * m) * l + (u - m) * g * e
      }
    }

    function h(a, b) {
      var c = a.length,
        d = [],
        e;
      for (i = 0; i < c; i++) e = 0 == i ? (a[i + 1] - a[i]) / (b[i + 1] - 0) : i == c - 1 ? (a[i] - a[i - 1]) / (b[i] - 0) : (a[i + 1] - a[i - 1]) / (b[i] + b[i + 1] - 0), d[i] = e;
      return d
    }

    function g(b, c, h) {
      var l, e = b.length,
        g = [];
      for (l = 0; l < e - 1; l++) g[l] = a(b[l], h[l], 0, b[l + 1], h[l + 1], c[l + 1]);
      return g
    }
    Ptero.makeHermiteInterp = function(a, d) {
      function q(a) {
        return (a = c(a, d)) ? p[a.index](a.time) : null
      }
      var l = b(d),
        e = h(a, d),
        p = g(a, d, e);
      q.startTime = d[0];
      q.totalTime = l;
      return q
    };
    Ptero.makeHermiteInterpForObjs = function(a, d, q) {
      function l(a) {
        a = c(a,
          q);
        if (!a) return null;
        var b = {},
          h, l;
        for (h = 0; h < e; h++) l = d[h], b[l] = u[l][a.index](a.time);
        return b
      }
      var e = d.length,
        p = a.length,
        t = b(q),
        r, m, u = {},
        v, w;
      for (v = 0; v < e; v++) {
        w = d[v];
        r = [];
        for (m = 0; m < p; m++) r[m] = a[m][w];
        m = h(r, q);
        u[w] = g(r, q, m)
      }
      l.startTime = q[0];
      l.totalTime = t;
      return l
    }
  })()
})();
Ptero.vectorPathData = {};

function make_adult_0(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11087);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-19505, -4212);
      a.quadraticCurveTo(-19980, -4212, -20865, -4141);
      a.quadraticCurveTo(-20106, -3761, -19273, -3592);
      a.quadraticCurveTo(-19299, -3945, -19096, -4207);
      a.lineTo(-19479, -4212);
      a.quadraticCurveTo(-19492, -4212, -19505, -4212);
      a.closePath();
      a.moveTo(-17968, -4183);
      a.quadraticCurveTo(-18148, -4147, -18361, -4070);
      a.quadraticCurveTo(-18575, -3994, -18865, -3555);
      a.lineTo(-18872, -3523);
      a.lineTo(-18793, -3508);
      a.quadraticCurveTo(-18619, -3480, -18444, -3480);
      a.quadraticCurveTo(-18303, -3480, -18162, -3498);
      a.quadraticCurveTo(-18146, -3823, -17968, -4183);
      a.closePath();
      a.moveTo(-15363, -4599);
      a.quadraticCurveTo(-15646, -4599, -15883, -4566);
      a.quadraticCurveTo(-17268, -4375, -17275, -4149);
      a.quadraticCurveTo(-17593, -3892, -17702, -3550);
      a.quadraticCurveTo(-17166, -3632, -16626, -3680);
      a.quadraticCurveTo(-16095, -3735, -15562, -3735);
      a.quadraticCurveTo(-15177, -3735, -14791, -3706);
      a.lineTo(-12890, -3531);
      a.quadraticCurveTo(-12559, -3481, -12247, -3361);
      a.quadraticCurveTo(-11492, -3074, -10751, -2744);
      a.quadraticCurveTo(-9688, -2458, -8772, -1946);
      a.quadraticCurveTo(-8191, -1621, -7740, -1131);
      a.quadraticCurveTo(-7182, -526, -6692, 133);
      a.quadraticCurveTo(-6510, 378, -6268, 503);
      a.quadraticCurveTo(-5971, 316, -5669, 145);
      a.quadraticCurveTo(-4862, -308, -3989, -619);
      a.quadraticCurveTo(-3115, -932, -2196, -1097);
      a.quadraticCurveTo(-3157, -1190, -4087, -1396);
      a.quadraticCurveTo(-4952, -1583, -5801, -1845);
      a.quadraticCurveTo(-6702, -2127, -7571, -2497);
      a.quadraticCurveTo(-8366, -2837, -9197, -3069);
      a.lineTo(-9404, -3125);
      a.lineTo(-9404, -3125);
      a.quadraticCurveTo(-9404, -3125, -9404, -3125);
      a.quadraticCurveTo(-10299, -3377, -10783, -3546);
      a.lineTo(-10800, -3552);
      a.lineTo(-11001, -3626);
      a.lineTo(-11574, -3850);
      a.quadraticCurveTo(-14006, -4599, -15363, -4599);
      a.closePath();
      a.moveTo(-14657, -1584);
      a.quadraticCurveTo(-14683, -1584, -14710, -1584);
      a.quadraticCurveTo(-14423, -1109, -13884, -972);
      a.quadraticCurveTo(-12707, -667, -11582, -207);
      a.quadraticCurveTo(-10929,
        60, -10244, 223);
      a.lineTo(-9918, 375);
      a.lineTo(-9678, 488);
      a.quadraticCurveTo(-9179, 686, -8720, 962);
      a.lineTo(-8607, 1031);
      a.lineTo(-8540, 1067);
      a.quadraticCurveTo(-8032, 1202, -7650, 1567);
      a.lineTo(-7604, 1611);
      a.lineTo(-7547, 1647);
      a.quadraticCurveTo(-7313, 1796, -7105, 1942);
      a.lineTo(-7067, 1941);
      a.quadraticCurveTo(-6820, 1974, -6591, 2081);
      a.quadraticCurveTo(-6285, 1948, -5981, 1835);
      a.quadraticCurveTo(-5927, 1857, -5874, 1862);
      a.quadraticCurveTo(-5828, 1836, -5645, 1785);
      a.quadraticCurveTo(-5390, 1713, -5373, 1691);
      a.lineTo(-5343,
        1654);
      a.lineTo(-5308, 1608);
      a.quadraticCurveTo(-4985, 1510, -4666, 1436);
      a.lineTo(-4538, 1430);
      a.lineTo(-4423, 1409);
      a.lineTo(-4231, 1367);
      a.quadraticCurveTo(-4097, 1341, -4072, 1320);
      a.quadraticCurveTo(-4065, 1321, -4059, 1321);
      a.quadraticCurveTo(-4044, 1321, -4035, 1313);
      a.lineTo(-4034, 1313);
      a.quadraticCurveTo(-3718, 1262, -3404, 1235);
      a.lineTo(-3374, 1254);
      a.lineTo(-3306, 1258);
      a.lineTo(-3302, 1226);
      a.quadraticCurveTo(-3300, 1204, -3221, 1204);
      a.quadraticCurveTo(-3171, 1204, -3089, 1213);
      a.quadraticCurveTo(-3723, 1079, -4225,
        1079);
      a.quadraticCurveTo(-4547, 1079, -4816, 1134);
      a.quadraticCurveTo(-5635, 1306, -6339, 1765);
      a.quadraticCurveTo(-6606, 1529, -6895, 1328);
      a.quadraticCurveTo(-6975, 1271, -7056, 1217);
      a.lineTo(-7056, 1217);
      a.lineTo(-7056, 1217);
      a.lineTo(-7068, 1199);
      a.lineTo(-7112, 1132);
      a.lineTo(-7234, 956);
      a.lineTo(-7416, 710);
      a.quadraticCurveTo(-7607, 460, -7816, 215);
      a.quadraticCurveTo(-8012, 55, -8159, -155);
      a.lineTo(-8195, -208);
      a.lineTo(-8349, -371);
      a.lineTo(-8385, -408);
      a.quadraticCurveTo(-8542, -624, -8754, -784);
      a.lineTo(-8809, -824);
      a.lineTo(-8825, -840);
      a.lineTo(-8867, -879);
      a.lineTo(-9061, -1056);
      a.quadraticCurveTo(-9182, -1165, -9304, -1270);
      a.lineTo(-9424, -1372);
      a.quadraticCurveTo(-9592, -1460, -9777, -1512);
      a.lineTo(-9961, -1565);
      a.lineTo(-9961, -1565);
      a.quadraticCurveTo(-9162, -810, -8593, 129);
      a.quadraticCurveTo(-8512, 264, -8438, 403);
      a.quadraticCurveTo(-9470, -283, -10646, -698);
      a.quadraticCurveTo(-11866, -1129, -13125, -1413);
      a.quadraticCurveTo(-13881, -1584, -14657, -1584);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11087);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-19505, -4212);
      a.quadraticCurveTo(-19492, -4212, -19479, -4212);
      a.lineTo(-19096, -4207);
      a.quadraticCurveTo(-19299, -3945, -19273, -3592);
      a.quadraticCurveTo(-20106, -3761, -20865, -4141);
      a.quadraticCurveTo(-19980, -4212, -19505, -4212);
      a.closePath();
      a.moveTo(-17968, -4183);
      a.quadraticCurveTo(-18146, -3823, -18162, -3498);
      a.quadraticCurveTo(-18162, -3498, -18162, -3498);
      a.lineTo(-18162, -3498);
      a.quadraticCurveTo(-18304, -3480, -18444, -3480);
      a.quadraticCurveTo(-18619, -3480, -18793, -3508);
      a.lineTo(-18872, -3523);
      a.lineTo(-18865, -3555);
      a.quadraticCurveTo(-18575, -3994, -18361, -4070);
      a.quadraticCurveTo(-18148, -4147, -17968, -4183);
      a.closePath();
      a.moveTo(-833, -1756);
      a.quadraticCurveTo(-836, -1756, -811, -1740);
      a.lineTo(-827, -1754);
      a.quadraticCurveTo(-832, -1756, -833, -1756);
      a.closePath();
      a.moveTo(-15364, -4599);
      a.quadraticCurveTo(-14007, -4599, -11575, -3850);
      a.lineTo(-11002, -3626);
      a.lineTo(-10801, -3552);
      a.lineTo(-10784, -3546);
      a.quadraticCurveTo(-10300, -3377, -9405, -3125);
      a.lineTo(-9198, -3069);
      a.quadraticCurveTo(-8367, -2837, -7572, -2497);
      a.quadraticCurveTo(-6703, -2127, -5802, -1845);
      a.quadraticCurveTo(-4953, -1583, -4088, -1396);
      a.quadraticCurveTo(-3158, -1190, -2197, -1097);
      a.quadraticCurveTo(-3116, -932, -3990, -619);
      a.quadraticCurveTo(-4863, -308, -5670, 145);
      a.quadraticCurveTo(-5972, 316, -6269, 503);
      a.quadraticCurveTo(-6511, 378, -6693, 133);
      a.quadraticCurveTo(-7183, -526, -7741, -1131);
      a.quadraticCurveTo(-8192, -1621, -8773, -1946);
      a.quadraticCurveTo(-9689, -2458, -10752, -2744);
      a.quadraticCurveTo(-11493, -3074, -12248, -3361);
      a.quadraticCurveTo(-12560, -3481, -12891, -3531);
      a.lineTo(-14792, -3706);
      a.quadraticCurveTo(-15178, -3735, -15563, -3735);
      a.quadraticCurveTo(-16096, -3735, -16627, -3680);
      a.quadraticCurveTo(-17167, -3632, -17703, -3550);
      a.quadraticCurveTo(-17594, -3892, -17276, -4149);
      a.quadraticCurveTo(-17269, -4375, -15884, -4566);
      a.quadraticCurveTo(-15647, -4599, -15364, -4599);
      a.closePath();
      a.moveTo(-14658, -1584);
      a.quadraticCurveTo(-13882, -1584, -13126, -1413);
      a.quadraticCurveTo(-11867, -1129, -10647, -698);
      a.quadraticCurveTo(-9471, -283, -8439, 403);
      a.quadraticCurveTo(-8513,
        264, -8594, 129);
      a.quadraticCurveTo(-9163, -810, -9962, -1565);
      a.lineTo(-9962, -1565);
      a.lineTo(-9778, -1512);
      a.quadraticCurveTo(-9593, -1460, -9425, -1372);
      a.lineTo(-9305, -1270);
      a.quadraticCurveTo(-9183, -1165, -9062, -1056);
      a.lineTo(-8868, -879);
      a.lineTo(-8826, -840);
      a.lineTo(-8810, -824);
      a.lineTo(-8755, -784);
      a.quadraticCurveTo(-8543, -624, -8386, -408);
      a.lineTo(-8350, -371);
      a.lineTo(-8196, -208);
      a.lineTo(-8160, -155);
      a.quadraticCurveTo(-8013, 55, -7817, 215);
      a.quadraticCurveTo(-7608, 460, -7417, 710);
      a.lineTo(-7235, 956);
      a.lineTo(-7113,
        1132);
      a.lineTo(-7069, 1199);
      a.lineTo(-7057, 1217);
      a.quadraticCurveTo(-6976, 1271, -6896, 1328);
      a.quadraticCurveTo(-6607, 1529, -6340, 1765);
      a.quadraticCurveTo(-5636, 1306, -4817, 1134);
      a.quadraticCurveTo(-4549, 1079, -4226, 1079);
      a.quadraticCurveTo(-3723, 1079, -3090, 1213);
      a.quadraticCurveTo(-3172, 1204, -3222, 1204);
      a.quadraticCurveTo(-3301, 1204, -3303, 1226);
      a.lineTo(-3307, 1258);
      a.lineTo(-3375, 1254);
      a.lineTo(-3405, 1235);
      a.quadraticCurveTo(-3719, 1262, -4035, 1313);
      a.lineTo(-4036, 1313);
      a.quadraticCurveTo(-4045, 1321, -4060,
        1321);
      a.quadraticCurveTo(-4066, 1321, -4073, 1320);
      a.quadraticCurveTo(-4098, 1341, -4232, 1367);
      a.lineTo(-4424, 1409);
      a.lineTo(-4539, 1430);
      a.lineTo(-4667, 1436);
      a.quadraticCurveTo(-4986, 1510, -5309, 1608);
      a.lineTo(-5344, 1654);
      a.lineTo(-5374, 1691);
      a.quadraticCurveTo(-5391, 1713, -5646, 1785);
      a.quadraticCurveTo(-5829, 1836, -5875, 1862);
      a.quadraticCurveTo(-5928, 1857, -5982, 1835);
      a.quadraticCurveTo(-6286, 1948, -6592, 2081);
      a.quadraticCurveTo(-6821, 1974, -7068, 1941);
      a.lineTo(-7106, 1942);
      a.quadraticCurveTo(-7314, 1796, -7548,
        1647);
      a.lineTo(-7605, 1611);
      a.lineTo(-7651, 1567);
      a.quadraticCurveTo(-8033, 1202, -8541, 1067);
      a.lineTo(-8608, 1031);
      a.lineTo(-8721, 962);
      a.quadraticCurveTo(-9180, 686, -9679, 488);
      a.lineTo(-9919, 375);
      a.lineTo(-10245, 223);
      a.quadraticCurveTo(-10930, 60, -11583, -207);
      a.quadraticCurveTo(-12708, -667, -13885, -972);
      a.quadraticCurveTo(-14424, -1109, -14711, -1584);
      a.quadraticCurveTo(-14685, -1584, -14658, -1584);
      a.closePath();
      a.moveTo(-15168, -5256);
      a.quadraticCurveTo(-15301, -5256, -15430, -5251);
      a.lineTo(-17302, -5192);
      a.quadraticCurveTo(-17309, -5192, -17316, -5192);
      a.quadraticCurveTo(-17708, -5192, -18676, -5032);
      a.quadraticCurveTo(-18676, -5032, -18676, -5032);
      a.lineTo(-18676, -5032);
      a.quadraticCurveTo(-19496, -4889, -20176, -4782);
      a.quadraticCurveTo(-20857, -4675, -21980, -4083);
      a.lineTo(-22080, -4031);
      a.quadraticCurveTo(-20528, -3842, -19679, -3206);
      a.quadraticCurveTo(-18830, -2571, -17222, -1843);
      a.quadraticCurveTo(-15615, -1115, -14621, -749);
      a.quadraticCurveTo(-13081, -182, -11365, 379);
      a.quadraticCurveTo(-9036, 1141, -7949, 1832);
      a.quadraticCurveTo(-7701, 1990, -7309, 2306);
      a.quadraticCurveTo(-7007, 2549, -6776, 2656);
      a.quadraticCurveTo(-6680, 2605, -6269, 2358);
      a.quadraticCurveTo(-5943, 2163, -5688, 2048);
      a.quadraticCurveTo(-4910, 1700, -3801, 1638);
      a.lineTo(-3386, 1624);
      a.quadraticCurveTo(-3335, 1623, -3285, 1623);
      a.quadraticCurveTo(-3184, 1623, -3082, 1626);
      a.quadraticCurveTo(-2337, 1640, -1570, 1771);
      a.quadraticCurveTo(-1001, 1868, -650, 1977);
      a.lineTo(-350, 1356);
      a.quadraticCurveTo(-147, 922, -64, 489);
      a.quadraticCurveTo(52, -117, -86, -635);
      a.quadraticCurveTo(-205, -1079, -509, -1440);
      a.lineTo(-836, -1451);
      a.lineTo(-1696, -1492);
      a.quadraticCurveTo(-2292, -1524, -3815, -1664);
      a.quadraticCurveTo(-5338, -1805, -7682, -3016);
      a.lineTo(-7879, -3117);
      a.lineTo(-7880, -3117);
      a.lineTo(-7968, -3112);
      a.quadraticCurveTo(-8028, -3109, -8065, -3109);
      a.quadraticCurveTo(-8087, -3109, -8101, -3110);
      a.quadraticCurveTo(-8382, -3137, -8684, -3300);
      a.quadraticCurveTo(-9957, -4013, -11951, -4663);
      a.quadraticCurveTo(-13772, -5256, -15168, -5256);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11087);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-11574, -3850);
      a.quadraticCurveTo(-14514, -4755, -15883, -4566);
      a.quadraticCurveTo(-17268, -4375, -17275, -4149);
      a.quadraticCurveTo(-17593, -3892, -17702, -3550);
      a.moveTo(-18676, -5031);
      a.quadraticCurveTo(-19496, -4888, -20176, -4781);
      a.quadraticCurveTo(-20857, -4674, -21980, -4082);
      a.lineTo(-22080, -4030);
      a.quadraticCurveTo(-20528, -3841, -19679, -3205);
      a.quadraticCurveTo(-18830, -2570, -17222, -1842);
      a.quadraticCurveTo(-15615, -1114, -14621, -748);
      a.quadraticCurveTo(-13081, -181, -11365, 380);
      a.quadraticCurveTo(-9036, 1142, -7949, 1833);
      a.quadraticCurveTo(-7701, 1991, -7309, 2307);
      a.quadraticCurveTo(-7007, 2550, -6776, 2657);
      a.quadraticCurveTo(-6680, 2606, -6269, 2359);
      a.quadraticCurveTo(-5943, 2164, -5688, 2049);
      a.quadraticCurveTo(-4910, 1701, -3801, 1639);
      a.lineTo(-3386, 1625);
      a.quadraticCurveTo(-3234, 1623, -3082, 1627);
      a.quadraticCurveTo(-2337, 1641, -1570, 1772);
      a.quadraticCurveTo(-1001, 1869, -650, 1978);
      a.lineTo(-350,
        1357);
      a.quadraticCurveTo(-147, 923, -64, 490);
      a.quadraticCurveTo(52, -116, -86, -634);
      a.quadraticCurveTo(-205, -1078, -509, -1439);
      a.lineTo(-836, -1450);
      a.lineTo(-1696, -1491);
      a.quadraticCurveTo(-2292, -1523, -3815, -1663);
      a.quadraticCurveTo(-5338, -1804, -7682, -3015);
      a.lineTo(-7879, -3116);
      a.lineTo(-7880, -3116);
      a.lineTo(-7968, -3111);
      a.quadraticCurveTo(-8064, -3106, -8101, -3109);
      a.quadraticCurveTo(-8382, -3136, -8684, -3299);
      a.quadraticCurveTo(-9957, -4012, -11951, -4662);
      a.quadraticCurveTo(-13946, -5312, -15430, -5250);
      a.lineTo(-17302, -5191);
      a.quadraticCurveTo(-17690, -5194, -18676, -5031);
      a.closePath();
      a.moveTo(-18676, -5031);
      a.quadraticCurveTo(-18970, -4370, -19096, -4207);
      a.quadraticCurveTo(-19299, -3945, -19273, -3592);
      a.quadraticCurveTo(-19260, -3416, -19190, -3217);
      a.quadraticCurveTo(-19081, -2910, -18784, -2747);
      a.quadraticCurveTo(-18824, -2880, -18891, -3015);
      a.quadraticCurveTo(-18955, -3144, -18872, -3523);
      a.lineTo(-18865, -3555);
      a.quadraticCurveTo(-18575, -3994, -18361, -4070);
      a.quadraticCurveTo(-18148, -4147, -17968, -4183);
      a.quadraticCurveTo(-18146, -3823, -18162, -3498);
      a.quadraticCurveTo(-18188, -2971, -17787, -2535);
      a.quadraticCurveTo(-17692, -2432, -17572, -2359);
      a.quadraticCurveTo(-17864, -3047, -17702, -3550)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11087);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-10783, -3546);
      a.lineTo(-10800, -3552);
      a.moveTo(-12890, -3531);
      a.lineTo(-13129, -3635);
      a.moveTo(-10248, -2197);
      a.quadraticCurveTo(-10316, -2150, -10358, -2091);
      a.lineTo(-9963, -1801);
      a.moveTo(-10358, -2091);
      a.lineTo(-10359, -2091);
      a.lineTo(-10410, -2019);
      a.moveTo(-10358, -2091);
      a.quadraticCurveTo(-10585, -2252, -10818, -2404);
      a.moveTo(-9808, -3271);
      a.quadraticCurveTo(-10313, -3442, -10783, -3546);
      a.moveTo(-2196, -1097);
      a.lineTo(-2187, -1098);
      a.lineTo(-2098, -1111);
      a.moveTo(-2041, -1118);
      a.lineTo(-1813, -1156);
      a.moveTo(-12890, -3531);
      a.lineTo(-12804, -3492);
      a.moveTo(-11396, -2844);
      a.lineTo(-11453, -2796);
      a.lineTo(-11402, -2766);
      a.lineTo(-11163, -2622);
      a.moveTo(-11453, -2796);
      a.lineTo(-11489, -2760);
      a.lineTo(-11509, -2731);
      a.moveTo(-12079, -3140);
      a.quadraticCurveTo(-12286, -3248, -12495, -3348);
      a.moveTo(-11453, -2796);
      a.lineTo(-11776, -2978);
      a.moveTo(-11442, -292);
      a.quadraticCurveTo(-11837, -453, -12272, -619);
      a.moveTo(-10244, 224);
      a.lineTo(-10472, 121);
      a.quadraticCurveTo(-10765, -10, -11087, -145);
      a.moveTo(-7293, -2111);
      a.lineTo(-7591, -2281);
      a.quadraticCurveTo(-7846, -2422, -8112, -2555);
      a.moveTo(-8598, -2787);
      a.quadraticCurveTo(-9011, -2976, -9404, -3125);
      a.moveTo(-9304, -1269);
      a.lineTo(-9344, -1244);
      a.lineTo(-9375, -1227);
      a.moveTo(-9230, -1324);
      a.quadraticCurveTo(-9266, -1295, -9304, -1269);
      a.quadraticCurveTo(-9182, -1164, -9061, -1055);
      a.quadraticCurveTo(-9002, -1090, -8955, -1130);
      a.moveTo(-9061, -1055);
      a.quadraticCurveTo(-9089, -1039, -9119, -1024);
      a.quadraticCurveTo(-9148, -1009, -9181, -1001);
      a.moveTo(-9424, -1371);
      a.lineTo(-9601, -1517);
      a.moveTo(-9304, -1269);
      a.lineTo(-9424, -1371);
      a.moveTo(-8809, -823);
      a.lineTo(-8825, -839);
      a.lineTo(-8867, -878);
      a.lineTo(-9061, -1055);
      a.moveTo(-8349, -370);
      a.lineTo(-8385, -407);
      a.lineTo(-8517, -541);
      a.moveTo(-8349, -370);
      a.lineTo(-8372, -353);
      a.lineTo(-8389, -338);
      a.moveTo(-8276, -419);
      a.lineTo(-8349, -370);
      a.lineTo(-8195, -207);
      a.moveTo(-7816, 216);
      a.lineTo(-7954, 56);
      a.moveTo(-4008, -1111);
      a.lineTo(-3536, -1074);
      a.lineTo(-3225, -1069);
      a.moveTo(-5436, -1446);
      a.quadraticCurveTo(-4892, -1271, -4420, -1178);
      a.moveTo(-2684, -1074);
      a.lineTo(-2196, -1097);
      a.moveTo(-6648, -1901);
      a.quadraticCurveTo(-6203, -1714, -5796, -1568);
      a.moveTo(-4540, 1409);
      a.lineTo(-4666, 1437);
      a.moveTo(-4034, 1314);
      a.lineTo(-4171,
        1337);
      a.moveTo(-3302, 1227);
      a.lineTo(-3404, 1236);
      a.moveTo(-7056, 1218);
      a.lineTo(-6954, 1380);
      a.moveTo(-3404, 1236);
      a.quadraticCurveTo(-3718, 1263, -4034, 1314);
      a.moveTo(-5903, 1807);
      a.lineTo(-5981, 1836);
      a.moveTo(-5308, 1609);
      a.lineTo(-5480, 1662);
      a.moveTo(-4666, 1437);
      a.quadraticCurveTo(-4985, 1511, -5308, 1609);
      a.moveTo(-3089, 1214);
      a.lineTo(-3302, 1227);
      a.moveTo(-7128, 954);
      a.lineTo(-7234, 957);
      a.lineTo(-7112, 1133);
      a.lineTo(-7047, 1132);
      a.moveTo(-7234, 957);
      a.lineTo(-7307, 967);
      a.lineTo(-7338, 970);
      a.moveTo(-7234, 957);
      a.lineTo(-7416, 711);
      a.quadraticCurveTo(-7607, 461, -7816, 216);
      a.moveTo(-7547, 1648);
      a.quadraticCurveTo(-7313, 1797, -7105, 1943);
      a.moveTo(-6591, 2082);
      a.quadraticCurveTo(-6285, 1949, -5981, 1836);
      a.moveTo(-7604, 1612);
      a.lineTo(-7784, 1501);
      a.moveTo(-7112, 1133);
      a.lineTo(-7208, 1139);
      a.quadraticCurveTo(-7217, 1140, -7225, 1148);
      a.moveTo(-7056, 1218);
      a.lineTo(-7068, 1200);
      a.lineTo(-7112, 1133);
      a.moveTo(-9156, 746);
      a.quadraticCurveTo(-9409, 618, -9678, 489);
      a.lineTo(-9918, 376);
      a.moveTo(-8178, 1269);
      a.quadraticCurveTo(-8354,
        1169, -8540, 1068);
      a.moveTo(-8607, 1032);
      a.lineTo(-8872, 891);
      a.moveTo(-6591, 2082);
      a.lineTo(-6645, 2106);
      a.moveTo(-7105, 1943);
      a.lineTo(-6979, 2033);
      a.moveTo(-14558, -4160);
      a.quadraticCurveTo(-14836, -4248, -15119, -4325);
      a.moveTo(-16824, -2168);
      a.lineTo(-17268, -2305);
      a.moveTo(-14885, -1546);
      a.lineTo(-15605, -1782);
      a.moveTo(-13753, -1160);
      a.lineTo(-14471, -1407);
      a.moveTo(-15963, -1897);
      a.lineTo(-16524, -2074);
      a.moveTo(-13478, -3778);
      a.quadraticCurveTo(-13854, -3927, -14241, -4057);
      a.moveTo(-12619, -750);
      a.lineTo(-13325, -1008)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11087);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2098, -1111);
      a.lineTo(-2041, -1118)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11087);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-19505, -4212);
      a.quadraticCurveTo(-19980, -4212, -20865, -4141);
      a.quadraticCurveTo(-20106, -3761, -19273, -3592);
      a.quadraticCurveTo(-19299, -3945, -19096, -4207);
      a.lineTo(-19479, -4212);
      a.quadraticCurveTo(-19492, -4212, -19505, -4212);
      a.closePath();
      a.moveTo(-17968, -4183);
      a.quadraticCurveTo(-18148, -4147, -18361, -4070);
      a.quadraticCurveTo(-18575, -3994, -18865, -3555);
      a.lineTo(-18872, -3523);
      a.lineTo(-18793, -3508);
      a.quadraticCurveTo(-18619, -3480, -18444, -3480);
      a.quadraticCurveTo(-18303, -3480, -18162, -3498);
      a.quadraticCurveTo(-18146, -3823, -17968, -4183);
      a.closePath();
      a.moveTo(-15363, -4599);
      a.quadraticCurveTo(-15646, -4599, -15883, -4566);
      a.quadraticCurveTo(-17268, -4375, -17275, -4149);
      a.quadraticCurveTo(-17593, -3892, -17702, -3550);
      a.quadraticCurveTo(-17166, -3632, -16626, -3680);
      a.quadraticCurveTo(-16095, -3735, -15562, -3735);
      a.quadraticCurveTo(-15177, -3735, -14791, -3706);
      a.lineTo(-12890, -3531);
      a.quadraticCurveTo(-12559, -3481, -12247, -3361);
      a.quadraticCurveTo(-11492, -3074, -10751, -2744);
      a.quadraticCurveTo(-9688, -2458, -8772, -1946);
      a.quadraticCurveTo(-8191, -1621, -7740, -1131);
      a.quadraticCurveTo(-7182, -526, -6692, 133);
      a.quadraticCurveTo(-6510, 378, -6268, 503);
      a.quadraticCurveTo(-5971, 316, -5669, 145);
      a.quadraticCurveTo(-4862, -308, -3989, -619);
      a.quadraticCurveTo(-3115, -932, -2196, -1097);
      a.quadraticCurveTo(-3157, -1190, -4087, -1396);
      a.quadraticCurveTo(-4952, -1583, -5801, -1845);
      a.quadraticCurveTo(-6702, -2127, -7571, -2497);
      a.quadraticCurveTo(-8366, -2837, -9197, -3069);
      a.lineTo(-9404, -3125);
      a.lineTo(-9404, -3125);
      a.quadraticCurveTo(-9404, -3125, -9404, -3125);
      a.quadraticCurveTo(-10299, -3377, -10783, -3546);
      a.lineTo(-10800, -3552);
      a.lineTo(-11001, -3626);
      a.lineTo(-11574, -3850);
      a.quadraticCurveTo(-14006, -4599, -15363, -4599);
      a.closePath();
      a.moveTo(-14657, -1584);
      a.quadraticCurveTo(-14683, -1584, -14710, -1584);
      a.quadraticCurveTo(-14423, -1109, -13884, -972);
      a.quadraticCurveTo(-12707, -667, -11582, -207);
      a.quadraticCurveTo(-10929, 60, -10244, 223);
      a.lineTo(-9918, 375);
      a.lineTo(-9678, 488);
      a.quadraticCurveTo(-9179, 686, -8720, 962);
      a.lineTo(-8607, 1031);
      a.lineTo(-8540, 1067);
      a.quadraticCurveTo(-8032, 1202, -7650, 1567);
      a.lineTo(-7604, 1611);
      a.lineTo(-7547, 1647);
      a.quadraticCurveTo(-7313, 1796, -7105, 1942);
      a.lineTo(-7067, 1941);
      a.quadraticCurveTo(-6820, 1974, -6591, 2081);
      a.quadraticCurveTo(-6285, 1948, -5981, 1835);
      a.quadraticCurveTo(-5927, 1857, -5874, 1862);
      a.quadraticCurveTo(-5828, 1836, -5645, 1785);
      a.quadraticCurveTo(-5390, 1713, -5373, 1691);
      a.lineTo(-5343, 1654);
      a.lineTo(-5308, 1608);
      a.quadraticCurveTo(-4985, 1510, -4666, 1436);
      a.lineTo(-4538, 1430);
      a.lineTo(-4423, 1409);
      a.lineTo(-4231, 1367);
      a.quadraticCurveTo(-4097, 1341, -4072, 1320);
      a.quadraticCurveTo(-4065, 1321, -4059, 1321);
      a.quadraticCurveTo(-4044, 1321, -4035, 1313);
      a.lineTo(-4034, 1313);
      a.quadraticCurveTo(-3718, 1262, -3404, 1235);
      a.lineTo(-3374, 1254);
      a.lineTo(-3306, 1258);
      a.lineTo(-3302, 1226);
      a.quadraticCurveTo(-3300, 1204, -3221, 1204);
      a.quadraticCurveTo(-3171, 1204, -3089, 1213);
      a.quadraticCurveTo(-3723, 1079, -4225, 1079);
      a.quadraticCurveTo(-4547, 1079, -4816, 1134);
      a.quadraticCurveTo(-5635, 1306, -6339, 1765);
      a.quadraticCurveTo(-6606, 1529, -6895, 1328);
      a.quadraticCurveTo(-6975, 1271, -7056, 1217);
      a.lineTo(-7056, 1217);
      a.lineTo(-7056, 1217);
      a.lineTo(-7068, 1199);
      a.lineTo(-7112, 1132);
      a.lineTo(-7234, 956);
      a.lineTo(-7416, 710);
      a.quadraticCurveTo(-7607, 460, -7816, 215);
      a.quadraticCurveTo(-8012, 55, -8159, -155);
      a.lineTo(-8195, -208);
      a.lineTo(-8349, -371);
      a.lineTo(-8385, -408);
      a.quadraticCurveTo(-8542, -624, -8754, -784);
      a.lineTo(-8809, -824);
      a.lineTo(-8825, -840);
      a.lineTo(-8867, -879);
      a.lineTo(-9061, -1056);
      a.quadraticCurveTo(-9182, -1165, -9304, -1270);
      a.lineTo(-9424, -1372);
      a.quadraticCurveTo(-9592, -1460, -9777, -1512);
      a.lineTo(-9961, -1565);
      a.lineTo(-9961, -1565);
      a.quadraticCurveTo(-9162, -810, -8593, 129);
      a.quadraticCurveTo(-8512,
        264, -8438, 403);
      a.quadraticCurveTo(-9470, -283, -10646, -698);
      a.quadraticCurveTo(-11866, -1129, -13125, -1413);
      a.quadraticCurveTo(-13881, -1584, -14657, -1584);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11087);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-19505, -4212);
      a.quadraticCurveTo(-19492, -4212, -19479, -4212);
      a.lineTo(-19096, -4207);
      a.quadraticCurveTo(-19299, -3945, -19273, -3592);
      a.quadraticCurveTo(-20106, -3761, -20865, -4141);
      a.quadraticCurveTo(-19980, -4212, -19505, -4212);
      a.closePath();
      a.moveTo(-17968, -4183);
      a.quadraticCurveTo(-18146, -3823, -18162, -3498);
      a.quadraticCurveTo(-18162, -3498, -18162, -3498);
      a.lineTo(-18162, -3498);
      a.quadraticCurveTo(-18304, -3480, -18444, -3480);
      a.quadraticCurveTo(-18619, -3480, -18793, -3508);
      a.lineTo(-18872, -3523);
      a.lineTo(-18865, -3555);
      a.quadraticCurveTo(-18575, -3994, -18361, -4070);
      a.quadraticCurveTo(-18148, -4147, -17968, -4183);
      a.closePath();
      a.moveTo(-833, -1756);
      a.quadraticCurveTo(-836, -1756, -811, -1740);
      a.lineTo(-827, -1754);
      a.quadraticCurveTo(-832, -1756, -833, -1756);
      a.closePath();
      a.moveTo(-15364, -4599);
      a.quadraticCurveTo(-14007, -4599, -11575, -3850);
      a.lineTo(-11002, -3626);
      a.lineTo(-10801, -3552);
      a.lineTo(-10784, -3546);
      a.quadraticCurveTo(-10300, -3377, -9405, -3125);
      a.lineTo(-9198, -3069);
      a.quadraticCurveTo(-8367, -2837, -7572, -2497);
      a.quadraticCurveTo(-6703, -2127, -5802, -1845);
      a.quadraticCurveTo(-4953, -1583, -4088, -1396);
      a.quadraticCurveTo(-3158, -1190, -2197, -1097);
      a.quadraticCurveTo(-3116, -932, -3990, -619);
      a.quadraticCurveTo(-4863, -308, -5670, 145);
      a.quadraticCurveTo(-5972, 316, -6269, 503);
      a.quadraticCurveTo(-6511, 378, -6693, 133);
      a.quadraticCurveTo(-7183, -526, -7741, -1131);
      a.quadraticCurveTo(-8192, -1621, -8773, -1946);
      a.quadraticCurveTo(-9689, -2458, -10752, -2744);
      a.quadraticCurveTo(-11493, -3074, -12248, -3361);
      a.quadraticCurveTo(-12560, -3481, -12891, -3531);
      a.lineTo(-14792, -3706);
      a.quadraticCurveTo(-15178, -3735, -15563, -3735);
      a.quadraticCurveTo(-16096, -3735, -16627, -3680);
      a.quadraticCurveTo(-17167, -3632, -17703, -3550);
      a.quadraticCurveTo(-17594, -3892, -17276, -4149);
      a.quadraticCurveTo(-17269, -4375, -15884, -4566);
      a.quadraticCurveTo(-15647, -4599, -15364, -4599);
      a.closePath();
      a.moveTo(-14658, -1584);
      a.quadraticCurveTo(-13882, -1584, -13126, -1413);
      a.quadraticCurveTo(-11867, -1129, -10647, -698);
      a.quadraticCurveTo(-9471, -283, -8439, 403);
      a.quadraticCurveTo(-8513, 264, -8594, 129);
      a.quadraticCurveTo(-9163, -810, -9962, -1565);
      a.lineTo(-9962, -1565);
      a.lineTo(-9778, -1512);
      a.quadraticCurveTo(-9593, -1460, -9425, -1372);
      a.lineTo(-9305, -1270);
      a.quadraticCurveTo(-9183, -1165, -9062, -1056);
      a.lineTo(-8868, -879);
      a.lineTo(-8826, -840);
      a.lineTo(-8810, -824);
      a.lineTo(-8755, -784);
      a.quadraticCurveTo(-8543, -624, -8386, -408);
      a.lineTo(-8350, -371);
      a.lineTo(-8196, -208);
      a.lineTo(-8160, -155);
      a.quadraticCurveTo(-8013, 55, -7817, 215);
      a.quadraticCurveTo(-7608, 460, -7417, 710);
      a.lineTo(-7235, 956);
      a.lineTo(-7113, 1132);
      a.lineTo(-7069, 1199);
      a.lineTo(-7057, 1217);
      a.quadraticCurveTo(-6976, 1271, -6896, 1328);
      a.quadraticCurveTo(-6607, 1529, -6340, 1765);
      a.quadraticCurveTo(-5636, 1306, -4817, 1134);
      a.quadraticCurveTo(-4549, 1079, -4226, 1079);
      a.quadraticCurveTo(-3723,
        1079, -3090, 1213);
      a.quadraticCurveTo(-3172, 1204, -3222, 1204);
      a.quadraticCurveTo(-3301, 1204, -3303, 1226);
      a.lineTo(-3307, 1258);
      a.lineTo(-3375, 1254);
      a.lineTo(-3405, 1235);
      a.quadraticCurveTo(-3719, 1262, -4035, 1313);
      a.lineTo(-4036, 1313);
      a.quadraticCurveTo(-4045, 1321, -4060, 1321);
      a.quadraticCurveTo(-4066, 1321, -4073, 1320);
      a.quadraticCurveTo(-4098, 1341, -4232, 1367);
      a.lineTo(-4424, 1409);
      a.lineTo(-4539, 1430);
      a.lineTo(-4667, 1436);
      a.quadraticCurveTo(-4986, 1510, -5309, 1608);
      a.lineTo(-5344, 1654);
      a.lineTo(-5374, 1691);
      a.quadraticCurveTo(-5391,
        1713, -5646, 1785);
      a.quadraticCurveTo(-5829, 1836, -5875, 1862);
      a.quadraticCurveTo(-5928, 1857, -5982, 1835);
      a.quadraticCurveTo(-6286, 1948, -6592, 2081);
      a.quadraticCurveTo(-6821, 1974, -7068, 1941);
      a.lineTo(-7106, 1942);
      a.quadraticCurveTo(-7314, 1796, -7548, 1647);
      a.lineTo(-7605, 1611);
      a.lineTo(-7651, 1567);
      a.quadraticCurveTo(-8033, 1202, -8541, 1067);
      a.lineTo(-8608, 1031);
      a.lineTo(-8721, 962);
      a.quadraticCurveTo(-9180, 686, -9679, 488);
      a.lineTo(-9919, 375);
      a.lineTo(-10245, 223);
      a.quadraticCurveTo(-10930, 60, -11583, -207);
      a.quadraticCurveTo(-12708, -667, -13885, -972);
      a.quadraticCurveTo(-14424, -1109, -14711, -1584);
      a.quadraticCurveTo(-14685, -1584, -14658, -1584);
      a.closePath();
      a.moveTo(-15168, -5256);
      a.quadraticCurveTo(-15301, -5256, -15430, -5251);
      a.lineTo(-17302, -5192);
      a.quadraticCurveTo(-17309, -5192, -17316, -5192);
      a.quadraticCurveTo(-17708, -5192, -18676, -5032);
      a.quadraticCurveTo(-18676, -5032, -18676, -5032);
      a.lineTo(-18676, -5032);
      a.quadraticCurveTo(-19496, -4889, -20176, -4782);
      a.quadraticCurveTo(-20857, -4675, -21980, -4083);
      a.lineTo(-22080, -4031);
      a.quadraticCurveTo(-20528, -3842, -19679, -3206);
      a.quadraticCurveTo(-18830, -2571, -17222, -1843);
      a.quadraticCurveTo(-15615, -1115, -14621, -749);
      a.quadraticCurveTo(-13081, -182, -11365, 379);
      a.quadraticCurveTo(-9036, 1141, -7949, 1832);
      a.quadraticCurveTo(-7701, 1990, -7309, 2306);
      a.quadraticCurveTo(-7007, 2549, -6776, 2656);
      a.quadraticCurveTo(-6680, 2605, -6269, 2358);
      a.quadraticCurveTo(-5943, 2163, -5688, 2048);
      a.quadraticCurveTo(-4910, 1700, -3801, 1638);
      a.lineTo(-3386, 1624);
      a.quadraticCurveTo(-3335, 1623, -3285, 1623);
      a.quadraticCurveTo(-3184, 1623, -3082,
        1626);
      a.quadraticCurveTo(-2337, 1640, -1570, 1771);
      a.quadraticCurveTo(-1001, 1868, -650, 1977);
      a.lineTo(-350, 1356);
      a.quadraticCurveTo(-147, 922, -64, 489);
      a.quadraticCurveTo(52, -117, -86, -635);
      a.quadraticCurveTo(-205, -1079, -509, -1440);
      a.lineTo(-836, -1451);
      a.lineTo(-1696, -1492);
      a.quadraticCurveTo(-2292, -1524, -3815, -1664);
      a.quadraticCurveTo(-5338, -1805, -7682, -3016);
      a.lineTo(-7879, -3117);
      a.lineTo(-7880, -3117);
      a.lineTo(-7968, -3112);
      a.quadraticCurveTo(-8028, -3109, -8065, -3109);
      a.quadraticCurveTo(-8087, -3109, -8101, -3110);
      a.quadraticCurveTo(-8382, -3137, -8684, -3300);
      a.quadraticCurveTo(-9957, -4013, -11951, -4663);
      a.quadraticCurveTo(-13772, -5256, -15168, -5256);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11087);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-11574, -3850);
      a.quadraticCurveTo(-14514, -4755, -15883, -4566);
      a.quadraticCurveTo(-17268, -4375, -17275, -4149);
      a.quadraticCurveTo(-17593, -3892, -17702, -3550);
      a.moveTo(-18676, -5031);
      a.quadraticCurveTo(-19496, -4888, -20176, -4781);
      a.quadraticCurveTo(-20857, -4674, -21980, -4082);
      a.lineTo(-22080, -4030);
      a.quadraticCurveTo(-20528, -3841, -19679, -3205);
      a.quadraticCurveTo(-18830, -2570, -17222, -1842);
      a.quadraticCurveTo(-15615, -1114, -14621, -748);
      a.quadraticCurveTo(-13081, -181, -11365, 380);
      a.quadraticCurveTo(-9036, 1142, -7949, 1833);
      a.quadraticCurveTo(-7701, 1991, -7309, 2307);
      a.quadraticCurveTo(-7007, 2550, -6776, 2657);
      a.quadraticCurveTo(-6680, 2606, -6269, 2359);
      a.quadraticCurveTo(-5943, 2164, -5688, 2049);
      a.quadraticCurveTo(-4910, 1701, -3801, 1639);
      a.lineTo(-3386, 1625);
      a.quadraticCurveTo(-3234, 1623, -3082, 1627);
      a.quadraticCurveTo(-2337, 1641, -1570, 1772);
      a.quadraticCurveTo(-1001, 1869, -650, 1978);
      a.lineTo(-350, 1357);
      a.quadraticCurveTo(-147, 923, -64, 490);
      a.quadraticCurveTo(52, -116, -86, -634);
      a.quadraticCurveTo(-205, -1078, -509, -1439);
      a.lineTo(-836, -1450);
      a.lineTo(-1696, -1491);
      a.quadraticCurveTo(-2292, -1523, -3815, -1663);
      a.quadraticCurveTo(-5338, -1804, -7682, -3015);
      a.lineTo(-7879, -3116);
      a.lineTo(-7880, -3116);
      a.lineTo(-7968, -3111);
      a.quadraticCurveTo(-8064, -3106, -8101, -3109);
      a.quadraticCurveTo(-8382, -3136, -8684, -3299);
      a.quadraticCurveTo(-9957, -4012, -11951, -4662);
      a.quadraticCurveTo(-13946, -5312, -15430, -5250);
      a.lineTo(-17302, -5191);
      a.quadraticCurveTo(-17690, -5194, -18676, -5031);
      a.closePath();
      a.moveTo(-18676, -5031);
      a.quadraticCurveTo(-18970, -4370, -19096, -4207);
      a.quadraticCurveTo(-19299, -3945, -19273, -3592);
      a.quadraticCurveTo(-19260, -3416, -19190, -3217);
      a.quadraticCurveTo(-19081, -2910, -18784, -2747);
      a.quadraticCurveTo(-18824, -2880, -18891, -3015);
      a.quadraticCurveTo(-18955, -3144, -18872, -3523);
      a.lineTo(-18865, -3555);
      a.quadraticCurveTo(-18575, -3994, -18361, -4070);
      a.quadraticCurveTo(-18148, -4147, -17968, -4183);
      a.quadraticCurveTo(-18146, -3823, -18162, -3498);
      a.quadraticCurveTo(-18188, -2971, -17787, -2535);
      a.quadraticCurveTo(-17692, -2432, -17572, -2359);
      a.quadraticCurveTo(-17864, -3047, -17702, -3550)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11087);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-10783, -3546);
      a.lineTo(-10800, -3552);
      a.moveTo(-12890, -3531);
      a.lineTo(-13129, -3635);
      a.moveTo(-10248, -2197);
      a.quadraticCurveTo(-10316, -2150, -10358, -2091);
      a.lineTo(-9963, -1801);
      a.moveTo(-10358, -2091);
      a.lineTo(-10359, -2091);
      a.lineTo(-10410, -2019);
      a.moveTo(-10358, -2091);
      a.quadraticCurveTo(-10585, -2252, -10818, -2404);
      a.moveTo(-9808, -3271);
      a.quadraticCurveTo(-10313, -3442, -10783, -3546);
      a.moveTo(-2196, -1097);
      a.lineTo(-2187, -1098);
      a.lineTo(-2098, -1111);
      a.moveTo(-2041, -1118);
      a.lineTo(-1813, -1156);
      a.moveTo(-12890, -3531);
      a.lineTo(-12804, -3492);
      a.moveTo(-11396, -2844);
      a.lineTo(-11453, -2796);
      a.lineTo(-11402, -2766);
      a.lineTo(-11163, -2622);
      a.moveTo(-11453, -2796);
      a.lineTo(-11489, -2760);
      a.lineTo(-11509, -2731);
      a.moveTo(-12079, -3140);
      a.quadraticCurveTo(-12286, -3248, -12495, -3348);
      a.moveTo(-11453, -2796);
      a.lineTo(-11776, -2978);
      a.moveTo(-11442, -292);
      a.quadraticCurveTo(-11837, -453, -12272, -619);
      a.moveTo(-10244, 224);
      a.lineTo(-10472, 121);
      a.quadraticCurveTo(-10765, -10, -11087, -145);
      a.moveTo(-7293, -2111);
      a.lineTo(-7591, -2281);
      a.quadraticCurveTo(-7846, -2422, -8112, -2555);
      a.moveTo(-8598, -2787);
      a.quadraticCurveTo(-9011, -2976, -9404, -3125);
      a.moveTo(-9304, -1269);
      a.lineTo(-9344, -1244);
      a.lineTo(-9375, -1227);
      a.moveTo(-9230, -1324);
      a.quadraticCurveTo(-9266, -1295, -9304, -1269);
      a.quadraticCurveTo(-9182, -1164, -9061, -1055);
      a.quadraticCurveTo(-9002, -1090, -8955, -1130);
      a.moveTo(-9061, -1055);
      a.quadraticCurveTo(-9089, -1039, -9119, -1024);
      a.quadraticCurveTo(-9148, -1009, -9181, -1001);
      a.moveTo(-9424, -1371);
      a.lineTo(-9601, -1517);
      a.moveTo(-9304, -1269);
      a.lineTo(-9424, -1371);
      a.moveTo(-8809, -823);
      a.lineTo(-8825, -839);
      a.lineTo(-8867, -878);
      a.lineTo(-9061, -1055);
      a.moveTo(-8349, -370);
      a.lineTo(-8385, -407);
      a.lineTo(-8517, -541);
      a.moveTo(-8349, -370);
      a.lineTo(-8372, -353);
      a.lineTo(-8389, -338);
      a.moveTo(-8276, -419);
      a.lineTo(-8349, -370);
      a.lineTo(-8195, -207);
      a.moveTo(-7816, 216);
      a.lineTo(-7954, 56);
      a.moveTo(-4008, -1111);
      a.lineTo(-3536, -1074);
      a.lineTo(-3225, -1069);
      a.moveTo(-5436, -1446);
      a.quadraticCurveTo(-4892, -1271, -4420, -1178);
      a.moveTo(-2684, -1074);
      a.lineTo(-2196, -1097);
      a.moveTo(-6648, -1901);
      a.quadraticCurveTo(-6203, -1714, -5796, -1568);
      a.moveTo(-4540, 1409);
      a.lineTo(-4666, 1437);
      a.moveTo(-4034, 1314);
      a.lineTo(-4171, 1337);
      a.moveTo(-3302, 1227);
      a.lineTo(-3404, 1236);
      a.moveTo(-7056, 1218);
      a.lineTo(-6954, 1380);
      a.moveTo(-3404, 1236);
      a.quadraticCurveTo(-3718, 1263, -4034, 1314);
      a.moveTo(-5903, 1807);
      a.lineTo(-5981, 1836);
      a.moveTo(-5308, 1609);
      a.lineTo(-5480, 1662);
      a.moveTo(-4666,
        1437);
      a.quadraticCurveTo(-4985, 1511, -5308, 1609);
      a.moveTo(-3089, 1214);
      a.lineTo(-3302, 1227);
      a.moveTo(-7128, 954);
      a.lineTo(-7234, 957);
      a.lineTo(-7112, 1133);
      a.lineTo(-7047, 1132);
      a.moveTo(-7234, 957);
      a.lineTo(-7307, 967);
      a.lineTo(-7338, 970);
      a.moveTo(-7234, 957);
      a.lineTo(-7416, 711);
      a.quadraticCurveTo(-7607, 461, -7816, 216);
      a.moveTo(-7547, 1648);
      a.quadraticCurveTo(-7313, 1797, -7105, 1943);
      a.moveTo(-6591, 2082);
      a.quadraticCurveTo(-6285, 1949, -5981, 1836);
      a.moveTo(-7604, 1612);
      a.lineTo(-7784, 1501);
      a.moveTo(-7112, 1133);
      a.lineTo(-7208, 1139);
      a.quadraticCurveTo(-7217, 1140, -7225, 1148);
      a.moveTo(-7056, 1218);
      a.lineTo(-7068, 1200);
      a.lineTo(-7112, 1133);
      a.moveTo(-9156, 746);
      a.quadraticCurveTo(-9409, 618, -9678, 489);
      a.lineTo(-9918, 376);
      a.moveTo(-8178, 1269);
      a.quadraticCurveTo(-8354, 1169, -8540, 1068);
      a.moveTo(-8607, 1032);
      a.lineTo(-8872, 891);
      a.moveTo(-6591, 2082);
      a.lineTo(-6645, 2106);
      a.moveTo(-7105, 1943);
      a.lineTo(-6979, 2033);
      a.moveTo(-14558, -4160);
      a.quadraticCurveTo(-14836, -4248, -15119, -4325);
      a.moveTo(-16824, -2168);
      a.lineTo(-17268, -2305);
      a.moveTo(-14885, -1546);
      a.lineTo(-15605, -1782);
      a.moveTo(-13753, -1160);
      a.lineTo(-14471, -1407);
      a.moveTo(-15963, -1897);
      a.lineTo(-16524, -2074);
      a.moveTo(-13478, -3778);
      a.quadraticCurveTo(-13854, -3927, -14241, -4057);
      a.moveTo(-12619, -750);
      a.lineTo(-13325, -1008)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11087);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2098, -1111);
      a.lineTo(-2041, -1118)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11265);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(29, -2730);
      a.quadraticCurveTo(18, -2730, 8, -2730);
      a.quadraticCurveTo(-775, -2725, -1473, -2385);
      a.quadraticCurveTo(-1598, -2324, -1712, -2247);
      a.quadraticCurveTo(-1835, -2165, -1945, -2063);
      a.lineTo(-2105, -1920);
      a.quadraticCurveTo(-2051, -1145, -1854, -394);
      a.quadraticCurveTo(-1658, 357, -1281, 1029);
      a.lineTo(-1275, 1040);
      a.quadraticCurveTo(-893, 1719, -384, 2301);
      a.quadraticCurveTo(-137, 2582, 102, 2582);
      a.quadraticCurveTo(356,
        2582, 602, 2267);
      a.quadraticCurveTo(800, 2015, 923, 1716);
      a.quadraticCurveTo(1200, 1045, 1441, 361);
      a.quadraticCurveTo(1694, -358, 1875, -1100);
      a.quadraticCurveTo(2015, -1676, 1895, -2258);
      a.lineTo(1717, -2349);
      a.quadraticCurveTo(1597, -2407, 1472, -2456);
      a.quadraticCurveTo(775, -2730, 29, -2730);
      a.closePath();
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1806, 2714, -1672, 2714);
      a.quadraticCurveTo(-1609, 2714, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.quadraticCurveTo(-1628, 2191, -1784, 2034);
      a.quadraticCurveTo(-1882, 1935, -1969, 1830);
      a.closePath();
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285);
      a.quadraticCurveTo(1453, 2524, 1069, 2647);
      a.quadraticCurveTo(1240, 2920, 1464, 3159);
      a.lineTo(1495, 3185);
      a.quadraticCurveTo(1485, 2702, 1801, 2702);
      a.quadraticCurveTo(1871, 2702, 1958, 2726);
      a.quadraticCurveTo(2051, 2751, 2109, 2838);
      a.lineTo(2146, 2897);
      a.quadraticCurveTo(2234, 2453, 2090, 2025);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11265);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1895, -2258);
      a.quadraticCurveTo(2015, -1676, 1875, -1100);
      a.quadraticCurveTo(1694, -358, 1441, 361);
      a.quadraticCurveTo(1200, 1045, 923, 1716);
      a.quadraticCurveTo(800, 2015, 602, 2267);
      a.quadraticCurveTo(356, 2582, 102, 2582);
      a.quadraticCurveTo(-137, 2582, -384, 2301);
      a.quadraticCurveTo(-893, 1719, -1275, 1040);
      a.lineTo(-1281,
        1029);
      a.lineTo(-1281, 1029);
      a.quadraticCurveTo(-1281, 1029, -1281, 1029);
      a.quadraticCurveTo(-1658, 357, -1854, -394);
      a.quadraticCurveTo(-2051, -1145, -2105, -1920);
      a.quadraticCurveTo(-2607, -1485, -3179, -1168);
      a.lineTo(-3154, -913);
      a.quadraticCurveTo(-3092, -110, -3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628, 2191, -1457, 2316);
      a.quadraticCurveTo(-1193, 2510, -895, 2627);
      a.quadraticCurveTo(-716, 2697, -524,
        2739);
      a.quadraticCurveTo(-230, 2803, 76, 2803);
      a.quadraticCurveTo(518, 2803, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782, 2285);
      a.quadraticCurveTo(1942, 2169, 2090, 2025);
      a.quadraticCurveTo(2251, 1867, 2398, 1675);
      a.quadraticCurveTo(2848, 1083, 3270, 825);
      a.quadraticCurveTo(3289, 538, 3323, 253);
      a.quadraticCurveTo(3408, -448, 3399, -1154);
      a.quadraticCurveTo(3043, -1322, 2763, -1603);
      a.quadraticCurveTo(2369, -1999, 1895, -2258);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11265);
      a.fillStyle =
        "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1717, -2349);
      a.lineTo(1791, -2179);
      a.moveTo(1971, -1331);
      a.quadraticCurveTo(1976, -1189, 1966, -1044);
      a.moveTo(1884, -1896);
      a.quadraticCurveTo(1918, -1769, 1940, -1641);
      a.moveTo(1925, -735);
      a.lineTo(1908, -654);
      a.lineTo(1866, -463);
      a.moveTo(-1712, -2247);
      a.lineTo(-1741, -2148);
      a.moveTo(-1785, -1953);
      a.quadraticCurveTo(-1818, -1781, -1826, -1605);
      a.moveTo(-1281, 1029);
      a.lineTo(-1285, 1001);
      a.moveTo(-1715, -727);
      a.lineTo(-1688, -640);
      a.lineTo(-1626, -443);
      a.moveTo(-1821, -1306);
      a.quadraticCurveTo(-1810, -1147, -1778, -986);
      a.moveTo(-1400, 404);
      a.lineTo(-1338, 701);
      a.moveTo(-1262, 1557);
      a.quadraticCurveTo(-1273, 1698, -1300, 1834);
      a.moveTo(-1281, 1029);
      a.quadraticCurveTo(-1265, 1153, -1259, 1273);
      a.moveTo(-1457, 2316);
      a.quadraticCurveTo(-1410, 2213, -1373, 2107);
      a.moveTo(1782, 2285);
      a.quadraticCurveTo(1730, 2222, 1688, 2157);
      a.moveTo(1484, 1644);
      a.quadraticCurveTo(1503, 1765, 1546, 1881);
      a.moveTo(1534,
        1012);
      a.lineTo(1508, 1124);
      a.quadraticCurveTo(1484, 1229, 1475, 1330);
      a.moveTo(1665, 437);
      a.lineTo(1603, 712);
      a.moveTo(-1547, -174);
      a.lineTo(-1468, 121);
      a.moveTo(1798, -156);
      a.lineTo(1735, 128)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11265);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2105, -1920);
      a.lineTo(-1945, -2063);
      a.quadraticCurveTo(-1835, -2165, -1712, -2247);
      a.quadraticCurveTo(-1598, -2324, -1473, -2385);
      a.quadraticCurveTo(-775, -2725, 8, -2730);
      a.quadraticCurveTo(765, -2734, 1472, -2456);
      a.quadraticCurveTo(1597, -2407, 1717, -2349);
      a.lineTo(1895, -2258);
      a.quadraticCurveTo(2369, -1999, 2763, -1603);
      a.quadraticCurveTo(3043, -1322, 3399, -1154);
      a.lineTo(3461, -1126);
      a.moveTo(-3226, -1142);
      a.lineTo(-3179, -1168);
      a.quadraticCurveTo(-2607, -1485, -2105, -1920);
      a.moveTo(-3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628,
        2191, -1457, 2316);
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1749, 2657, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.moveTo(-895, 2627);
      a.quadraticCurveTo(-716, 2697, -524, 2739);
      a.quadraticCurveTo(190, 2895, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782,
        2285);
      a.moveTo(-3242, 673);
      a.lineTo(-3224, 679);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(3391, 751, 3509, 704);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(2848, 1083, 2398, 1675);
      a.quadraticCurveTo(2251, 1867, 2090, 2025);
      a.quadraticCurveTo(2234, 2453, 2146, 2897);
      a.lineTo(2109, 2838);
      a.quadraticCurveTo(2051, 2751, 1958, 2726);
      a.quadraticCurveTo(1483, 2595, 1495, 3185);
      a.lineTo(1464, 3159);
      a.quadraticCurveTo(1240, 2920, 1069, 2647);
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48,
        14924, 10692);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.quadraticCurveTo(1866, -1390, 1927, -1547);
      a.quadraticCurveTo(2065, -1909, 1846, -2264);
      a.closePath();
      a.moveTo(-1866, -2414);
      a.quadraticCurveTo(-1988, -2163, -1979, -1755);
      a.quadraticCurveTo(-1973, -1467, -1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.closePath();
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1187, -981, 1265, -981);
      a.quadraticCurveTo(1268, -981, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.quadraticCurveTo(1602, -2564, 1486, -2661);
      a.closePath();
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1591, -2730, -1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1398, -906, -1198, -906);
      a.quadraticCurveTo(-1195, -906, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.lineTo(-1158, -2446);
      a.quadraticCurveTo(-1266, -2592, -1444, -2773);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10692);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(1691, -2467);
      a.lineTo(1617, -2397);
      a.quadraticCurveTo(1036, -1774, 1540, -1045);
      a.quadraticCurveTo(1681, -1119, 1789, -1277);
      a.lineTo(1766, -1339);
      a.quadraticCurveTo(1594, -1821, 1846, -2264);
      a.quadraticCurveTo(1783, -2366, 1691, -2467);
      a.closePath();
      a.moveTo(-1706, -2639);
      a.quadraticCurveTo(-1719, -2639, -1719, -2618);
      a.quadraticCurveTo(-1808, -2534, -1866, -2414);
      a.lineTo(-1839, -2375);
      a.quadraticCurveTo(-1463, -1799, -1881, -1276);
      a.quadraticCurveTo(-1828, -1165, -1546, -963);
      a.quadraticCurveTo(-1083, -1736, -1560, -2461);
      a.quadraticCurveTo(-1620, -2552, -1697, -2637);
      a.quadraticCurveTo(-1702, -2639, -1706, -2639);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10692);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(504, -7675);
      a.quadraticCurveTo(483, -7675, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.lineTo(72, -7173);
      a.quadraticCurveTo(-75, -6552, -84, -5920);
      a.lineTo(0, -5470);
      a.quadraticCurveTo(3, -5138, -4, -4806);
      a.lineTo(-55, -2986);
      a.quadraticCurveTo(-60, -2829, -132, -2714);
      a.quadraticCurveTo(-249, -2531, -379, -2531);
      a.quadraticCurveTo(-522, -2531, -683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.quadraticCurveTo(-1286, -3404, -1395, -3404);
      a.quadraticCurveTo(-1475, -3404, -1555, -3334);
      a.quadraticCurveTo(-1801, -3121, -1548, -2877);
      a.lineTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.quadraticCurveTo(-811, -1894, -769, -1831);
      a.quadraticCurveTo(-380, -1249, -298, -527);
      a.quadraticCurveTo(-189, 432, -50, 1385);
      a.lineTo(-38, 1575);
      a.quadraticCurveTo(14, 2265, -214, 2911);
      a.quadraticCurveTo(-140, 3258, -59, 3411);
      a.quadraticCurveTo(33, 3510, 122, 3510);
      a.quadraticCurveTo(271, 3510, 409, 3232);
      a.quadraticCurveTo(627, 2788, 824, 1738);
      a.quadraticCurveTo(910, 1280, 991, 893);
      a.quadraticCurveTo(1073,
        494, 1151, 169);
      a.lineTo(1190, 6);
      a.quadraticCurveTo(1359, -675, 1540, -1045);
      a.lineTo(1540, -1045);
      a.quadraticCurveTo(1419, -982, 1272, -982);
      a.quadraticCurveTo(1269, -981, 1265, -981);
      a.quadraticCurveTo(1187, -981, 1125, -1322);
      a.quadraticCurveTo(1059, -1678, 1060, -2423);
      a.quadraticCurveTo(1274, -2525, 1486, -2661);
      a.lineTo(1592, -2731);
      a.quadraticCurveTo(1934, -2966, 1778, -3215);
      a.quadraticCurveTo(1683, -3365, 1533, -3365);
      a.quadraticCurveTo(1434, -3365, 1310, -3300);
      a.lineTo(1238, -3260);
      a.quadraticCurveTo(1248, -3864, 882, -4324);
      a.quadraticCurveTo(516, -4785, 384, -5168);
      a.quadraticCurveTo(251, -5551, 317, -6093);
      a.quadraticCurveTo(382, -6636, 557, -7180);
      a.quadraticCurveTo(608, -7337, 621, -7444);
      a.lineTo(621, -7444);
      a.quadraticCurveTo(621, -7444, 621, -7444);
      a.quadraticCurveTo(649, -7675, 504, -7675);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10692);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(110, -7354);
      a.quadraticCurveTo(-40, -7132, -215, -6755);
      a.quadraticCurveTo(-613, -5895, -596, -5022);
      a.quadraticCurveTo(-591, -4787, -614, -4479);
      a.lineTo(-635, -4248);
      a.quadraticCurveTo(-1077, -3768, -1179, -3274);
      a.quadraticCurveTo(-1125, -3208, -1071, -3109);
      a.quadraticCurveTo(-915, -2821, -683, -2750);
      a.quadraticCurveTo(-523, -2531, -379, -2531);
      a.quadraticCurveTo(-248, -2531, -132, -2714);
      a.quadraticCurveTo(-60, -2829, -55, -2986);
      a.lineTo(-4, -4806);
      a.quadraticCurveTo(3, -5138, 0, -5470);
      a.lineTo(-84, -5920);
      a.quadraticCurveTo(-75, -6552, 72, -7173);
      a.lineTo(110, -7354);
      a.closePath();
      a.moveTo(-1077, -2330);
      a.lineTo(-1048, -1864);
      a.quadraticCurveTo(-1025, -1437, -1191, -906);
      a.quadraticCurveTo(-1194, -906, -1198, -906);
      a.quadraticCurveTo(-1398, -906, -1546, -963);
      a.lineTo(-1546, -963);
      a.quadraticCurveTo(-1223, -398, -997, 123);
      a.quadraticCurveTo(-786, 610, -659, 1058);
      a.quadraticCurveTo(-565, 1388, -484, 1706);
      a.quadraticCurveTo(-338, 2281, -233, 2814);
      a.lineTo(-214, 2911);
      a.quadraticCurveTo(14, 2265, -38, 1575);
      a.lineTo(-50, 1385);
      a.quadraticCurveTo(-189, 432, -298, -527);
      a.quadraticCurveTo(-380, -1249, -769, -1831);
      a.quadraticCurveTo(-811, -1894, -875, -1936);
      a.lineTo(-875, -1936);
      a.quadraticCurveTo(-875, -1936, -875, -1936);
      a.quadraticCurveTo(-901, -2012, -930, -2073);
      a.quadraticCurveTo(-993, -2202, -1077, -2330);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10692);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(621, -7444);
      a.quadraticCurveTo(653, -7709, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.moveTo(621, -7444);
      a.quadraticCurveTo(608, -7337, 557, -7180);
      a.quadraticCurveTo(382, -6636, 317, -6093);
      a.quadraticCurveTo(251, -5551, 384, -5168);
      a.quadraticCurveTo(516, -4785, 882, -4324);
      a.quadraticCurveTo(1248, -3864, 1238, -3260);
      a.lineTo(1310, -3300);
      a.quadraticCurveTo(1621, -3464, 1778, -3215);
      a.quadraticCurveTo(1934, -2966, 1592, -2731);
      a.lineTo(1486, -2661);
      a.quadraticCurveTo(1602, -2564, 1691, -2467);
      a.quadraticCurveTo(1783, -2366, 1846, -2264);
      a.quadraticCurveTo(2065, -1909, 1927, -1547);
      a.quadraticCurveTo(1866, -1390, 1789, -1277);
      a.quadraticCurveTo(1681, -1119, 1540, -1045);
      a.quadraticCurveTo(1359, -675, 1190, 6);
      a.lineTo(1151,
        169);
      a.quadraticCurveTo(1073, 494, 991, 893);
      a.quadraticCurveTo(910, 1280, 824, 1738);
      a.quadraticCurveTo(627, 2788, 409, 3232);
      a.quadraticCurveTo(190, 3675, -59, 3411);
      a.quadraticCurveTo(-140, 3258, -214, 2911);
      a.lineTo(-233, 2814);
      a.quadraticCurveTo(-338, 2281, -484, 1706);
      a.quadraticCurveTo(-565, 1388, -659, 1058);
      a.quadraticCurveTo(-786, 610, -997, 123);
      a.quadraticCurveTo(-1223, -398, -1546, -963);
      a.quadraticCurveTo(-1828, -1165, -1881, -1276);
      a.quadraticCurveTo(-1973, -1467, -1979, -1755);
      a.quadraticCurveTo(-1988, -2163, -1866, -2414);
      a.quadraticCurveTo(-1808, -2534, -1719, -2618);
      a.moveTo(-1697, -2637);
      a.quadraticCurveTo(-1591, -2730, -1444, -2773);
      a.lineTo(-1548, -2877);
      a.quadraticCurveTo(-1801, -3121, -1555, -3334);
      a.quadraticCurveTo(-1365, -3500, -1179, -3274);
      a.quadraticCurveTo(-1077, -3768, -635, -4248);
      a.lineTo(-614, -4479);
      a.quadraticCurveTo(-591, -4787, -596, -5022);
      a.quadraticCurveTo(-613, -5895, -215, -6755);
      a.quadraticCurveTo(-40, -7132, 110, -7354);
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1190, -967, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.moveTo(1060, -2423);
      a.lineTo(901, -2353);
      a.quadraticCurveTo(553, -2210, 543, -1729);
      a.moveTo(483, -2694);
      a.quadraticCurveTo(941, -3088, 1238, -3260);
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.moveTo(-683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.moveTo(-421, -2734);
      a.quadraticCurveTo(-562, -2713, -683, -2750);
      a.moveTo(-1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.moveTo(-1719, -2618);
      a.lineTo(-1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1395, -905, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.moveTo(-875, -1936);
      a.quadraticCurveTo(-822, -1782, -783, -1568)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10692);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(436, -7172);
      a.quadraticCurveTo(526, -7323, 621, -7444);
      a.moveTo(-84, -5920);
      a.lineTo(-8, -6155);
      a.moveTo(128, -6531);
      a.quadraticCurveTo(192, -6693, 259, -6837);
      a.moveTo(683, -1206);
      a.lineTo(537, -1172);
      a.lineTo(538, -1065);
      a.quadraticCurveTo(536, -876, 594, -692);
      a.lineTo(683, -723);
      a.moveTo(362, -1145);
      a.lineTo(537, -1172);
      a.lineTo(563, -1508);
      a.moveTo(1151, 169);
      a.lineTo(790, -299);
      a.lineTo(643, -220);
      a.moveTo(594, -692);
      a.lineTo(790, -299);
      a.lineTo(945, -361);
      a.moveTo(482, -663);
      a.lineTo(594, -692);
      a.moveTo(813, 958);
      a.quadraticCurveTo(901, 924, 991, 893);
      a.moveTo(387, 1139);
      a.quadraticCurveTo(512, 1078, 641, 1025);
      a.moveTo(-50, 1385);
      a.quadraticCurveTo(33, 1331, 120, 1281);
      a.lineTo(147, 1266);
      a.moveTo(-302, -5223);
      a.lineTo(-203, -5526);
      a.moveTo(-88, -5905);
      a.lineTo(-84, -5920);
      a.moveTo(-614, -4479);
      a.quadraticCurveTo(-526, -4617, -410, -4920);
      a.moveTo(-764, -1206);
      a.lineTo(-724, -996);
      a.lineTo(-522, -965);
      a.moveTo(-997, 123);
      a.lineTo(-818, -377);
      a.lineTo(-905, -421);
      a.moveTo(-818, -377);
      a.lineTo(-779, -541);
      a.quadraticCurveTo(-726, -763, -724, -996);
      a.lineTo(-864, -1005);
      a.moveTo(-818, -377);
      a.lineTo(-643, -281);
      a.moveTo(-484, 1706);
      a.quadraticCurveTo(-405, 1633, -318, 1569);
      a.moveTo(-75, 1401);
      a.lineTo(-50, 1385)
    }]
  }
}

function make_adult_1(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11138);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-18319, -6277);
      a.quadraticCurveTo(-18514, -6206, -18725, -6098);
      a.quadraticCurveTo(-18942, -5980, -19099, -5645);
      a.lineTo(-19096, -5626);
      a.lineTo(-19010, -5644);
      a.quadraticCurveTo(-18673, -5712, -18340, -5811);
      a.quadraticCurveTo(-18424, -5992, -18319, -6277);
      a.closePath();
      a.moveTo(-19529, -5938);
      a.quadraticCurveTo(-19719, -5867, -19901, -5784);
      a.quadraticCurveTo(-20796, -5378, -21386, -4923);
      a.quadraticCurveTo(-21340, -4918, -21286, -4918);
      a.quadraticCurveTo(-21244, -4918, -21197, -4921);
      a.quadraticCurveTo(-21156, -4939, -21115, -4960);
      a.quadraticCurveTo(-20451, -5272, -19515, -5523);
      a.quadraticCurveTo(-19656, -5693, -19529, -5938);
      a.closePath();
      a.moveTo(-14835, -6979);
      a.quadraticCurveTo(-15385, -6979, -15845, -6908);
      a.quadraticCurveTo(-17575, -6587, -17505, -6402);
      a.quadraticCurveTo(-17820, -6163, -17843, -5939);
      a.quadraticCurveTo(-17257, -6090, -16611, -6177);
      a.quadraticCurveTo(-15809, -6289, -14969, -6289);
      a.quadraticCurveTo(-14652, -6289, -14330, -6273);
      a.quadraticCurveTo(-13108, -6201, -11973, -6068);
      a.quadraticCurveTo(-11576, -6009, -11222, -5894);
      a.quadraticCurveTo(-10358, -5615, -9649, -5303);
      a.quadraticCurveTo(-8624, -5015, -7838, -4354);
      a.quadraticCurveTo(-7333, -3932, -6996, -3265);
      a.quadraticCurveTo(-6587, -2443, -6261, -1545);
      a.quadraticCurveTo(-6136, -1214, -5934, -1003);
      a.quadraticCurveTo(-5621, -1144, -5320, -1264);
      a.quadraticCurveTo(-4509, -1570, -3702, -1671);
      a.quadraticCurveTo(-3269, -1724, -2828, -1724);
      a.quadraticCurveTo(-2445, -1724, -2056, -1684);
      a.quadraticCurveTo(-2929, -2067, -3741, -2586);
      a.quadraticCurveTo(-4495, -3060, -5220, -3582);
      a.lineTo(-6735, -4677);
      a.quadraticCurveTo(-7419, -5166, -8174, -5470);
      a.lineTo(-8362, -5542);
      a.lineTo(-8362, -5542);
      a.quadraticCurveTo(-8362, -5542, -8362, -5542);
      a.quadraticCurveTo(-9187, -5847, -9667, -5991);
      a.lineTo(-9683, -5996);
      a.lineTo(-9882, -6064);
      a.lineTo(-10479, -6272);
      a.quadraticCurveTo(-13103, -6979, -14835, -6979);
      a.closePath();
      a.moveTo(-14002, -4557);
      a.quadraticCurveTo(-13681, -4012, -13111, -3783);
      a.quadraticCurveTo(-11839, -3279, -10823, -2634);
      a.quadraticCurveTo(-10233, -2276, -9626, -2053);
      a.lineTo(-9355, -1845);
      a.lineTo(-9155, -1688);
      a.quadraticCurveTo(-8729, -1400, -8359, -996);
      a.lineTo(-8266, -896);
      a.lineTo(-8212, -842);
      a.quadraticCurveTo(-7755, -594, -7462, -81);
      a.lineTo(-7426, -20);
      a.lineTo(-7377, 33);
      a.quadraticCurveTo(-7178, 257, -6999, 477);
      a.lineTo(-6962, 484);
      a.quadraticCurveTo(-6723, 579, -6515, 761);
      a.quadraticCurveTo(-6194, 681, -5881, 628);
      a.quadraticCurveTo(-5829, 666, -5780, 687);
      a.quadraticCurveTo(-5729,
        668, -5545, 656);
      a.quadraticCurveTo(-5285, 639, -5269, 618);
      a.lineTo(-5234, 584);
      a.lineTo(-5193, 539);
      a.lineTo(-4551, 510);
      a.lineTo(-4415, 542);
      a.quadraticCurveTo(-4356, 551, -4305, 568);
      a.quadraticCurveTo(-4233, 587, -4167, 587);
      a.quadraticCurveTo(-4088, 587, -4018, 560);
      a.quadraticCurveTo(-3992, 550, -3965, 532);
      a.lineTo(-3929, 534);
      a.quadraticCurveTo(-3618, 559, -3315, 607);
      a.quadraticCurveTo(-3161, 628, -3010, 660);
      a.quadraticCurveTo(-3809, 148, -4659, 119);
      a.quadraticCurveTo(-4709, 118, -4759, 118);
      a.quadraticCurveTo(-5508, 118, -6220, 456);
      a.quadraticCurveTo(-6442, 111, -6684, -189);
      a.lineTo(-6817, -358);
      a.lineTo(-6825, -382);
      a.lineTo(-6854, -471);
      a.lineTo(-6934, -706);
      a.quadraticCurveTo(-6987, -868, -7055, -1037);
      a.quadraticCurveTo(-7179, -1374, -7323, -1706);
      a.quadraticCurveTo(-7466, -1935, -7560, -2211);
      a.lineTo(-7580, -2280);
      a.lineTo(-7688, -2501);
      a.lineTo(-7713, -2551);
      a.quadraticCurveTo(-7810, -2833, -7978, -3055);
      a.lineTo(-8020, -3110);
      a.lineTo(-8032, -3132);
      a.lineTo(-8063, -3184);
      a.quadraticCurveTo(-8133, -3303, -8210, -3421);
      a.quadraticCurveTo(-8302, -3564, -8401, -3702);
      a.lineTo(-8496, -3836);
      a.quadraticCurveTo(-8639, -3955, -8806, -4034);
      a.lineTo(-8972, -4111);
      a.lineTo(-8972, -4111);
      a.quadraticCurveTo(-8323, -3172, -8030, -1957);
      a.quadraticCurveTo(-7984, -1782, -7950, -1606);
      a.quadraticCurveTo(-8747, -2612, -9775, -3165);
      a.quadraticCurveTo(-10843, -3724, -12218, -4206);
      a.quadraticCurveTo(-13074, -4491, -14002, -4556);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11138);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-18319, -6277);
      a.quadraticCurveTo(-18424, -5992, -18340, -5811);
      a.quadraticCurveTo(-18673, -5712, -19010, -5644);
      a.lineTo(-19096, -5626);
      a.lineTo(-19099, -5645);
      a.quadraticCurveTo(-18942, -5980, -18725, -6098);
      a.quadraticCurveTo(-18514, -6206, -18319, -6277);
      a.closePath();
      a.moveTo(-515, -1578);
      a.quadraticCurveTo(-517, -1578, -471, -1553);
      a.lineTo(-476, -1560);
      a.quadraticCurveTo(-513, -1578, -515, -1578);
      a.closePath();
      a.moveTo(-14835, -6979);
      a.quadraticCurveTo(-13103, -6979, -10479, -6272);
      a.lineTo(-9882, -6064);
      a.lineTo(-9683, -5996);
      a.lineTo(-9667, -5991);
      a.quadraticCurveTo(-9187, -5847, -8362, -5542);
      a.lineTo(-8174, -5470);
      a.quadraticCurveTo(-7419, -5166, -6735, -4677);
      a.lineTo(-5220, -3582);
      a.quadraticCurveTo(-4495, -3060, -3741, -2586);
      a.quadraticCurveTo(-2929, -2067, -2056, -1684);
      a.quadraticCurveTo(-2445, -1724, -2828, -1724);
      a.quadraticCurveTo(-3269, -1724, -3702, -1671);
      a.quadraticCurveTo(-4509, -1570, -5320, -1264);
      a.quadraticCurveTo(-5621, -1144, -5934, -1003);
      a.quadraticCurveTo(-6136, -1214, -6261, -1545);
      a.quadraticCurveTo(-6587, -2443, -6996, -3265);
      a.quadraticCurveTo(-7333, -3932, -7838, -4354);
      a.quadraticCurveTo(-8624, -5015, -9649, -5303);
      a.quadraticCurveTo(-10358, -5615, -11222, -5894);
      a.quadraticCurveTo(-11576, -6009, -11973, -6068);
      a.quadraticCurveTo(-13108, -6201, -14330, -6273);
      a.quadraticCurveTo(-14652, -6289, -14969, -6289);
      a.quadraticCurveTo(-15809, -6289, -16611, -6177);
      a.quadraticCurveTo(-17257, -6090, -17843, -5939);
      a.quadraticCurveTo(-17820, -6163, -17505, -6402);
      a.quadraticCurveTo(-17575, -6587, -15845, -6908);
      a.quadraticCurveTo(-15385, -6979, -14835, -6979);
      a.closePath();
      a.moveTo(-6220, 455);
      a.quadraticCurveTo(-6220,
        455, -6220, 455);
      a.quadraticCurveTo(-6220, 455, -6220, 455);
      a.closePath();
      a.moveTo(-14002, -4557);
      a.quadraticCurveTo(-13074, -4492, -12218, -4207);
      a.quadraticCurveTo(-10843, -3725, -9775, -3166);
      a.quadraticCurveTo(-8747, -2613, -7950, -1607);
      a.quadraticCurveTo(-7984, -1783, -8030, -1958);
      a.quadraticCurveTo(-8323, -3173, -8972, -4112);
      a.lineTo(-8972, -4112);
      a.lineTo(-8806, -4035);
      a.quadraticCurveTo(-8639, -3956, -8496, -3837);
      a.lineTo(-8401, -3703);
      a.quadraticCurveTo(-8302, -3565, -8210, -3422);
      a.quadraticCurveTo(-8133, -3304, -8063, -3185);
      a.lineTo(-8032, -3133);
      a.lineTo(-8020, -3111);
      a.lineTo(-7978, -3056);
      a.quadraticCurveTo(-7810, -2834, -7713, -2552);
      a.lineTo(-7688, -2502);
      a.lineTo(-7580, -2281);
      a.lineTo(-7560, -2212);
      a.quadraticCurveTo(-7466, -1936, -7323, -1707);
      a.quadraticCurveTo(-7179, -1375, -7055, -1038);
      a.quadraticCurveTo(-6987, -869, -6934, -707);
      a.lineTo(-6854, -472);
      a.lineTo(-6825, -383);
      a.lineTo(-6817, -359);
      a.lineTo(-6684, -190);
      a.quadraticCurveTo(-6442, 110, -6220, 455);
      a.quadraticCurveTo(-5507, 118, -4759, 118);
      a.quadraticCurveTo(-4709,
        118, -4659, 120);
      a.quadraticCurveTo(-3809, 149, -3010, 661);
      a.quadraticCurveTo(-3161, 629, -3315, 608);
      a.quadraticCurveTo(-3618, 560, -3929, 535);
      a.lineTo(-3965, 533);
      a.quadraticCurveTo(-3992, 551, -4018, 561);
      a.quadraticCurveTo(-4089, 588, -4167, 588);
      a.quadraticCurveTo(-4233, 588, -4305, 569);
      a.quadraticCurveTo(-4356, 552, -4415, 543);
      a.lineTo(-4551, 511);
      a.lineTo(-5193, 540);
      a.lineTo(-5234, 585);
      a.lineTo(-5269, 619);
      a.quadraticCurveTo(-5285, 640, -5545, 657);
      a.quadraticCurveTo(-5729, 669, -5780, 688);
      a.quadraticCurveTo(-5829, 667, -5881, 629);
      a.quadraticCurveTo(-6194, 682, -6515, 762);
      a.quadraticCurveTo(-6723, 580, -6962, 485);
      a.lineTo(-6999, 478);
      a.quadraticCurveTo(-7178, 258, -7377, 34);
      a.lineTo(-7426, -19);
      a.lineTo(-7462, -80);
      a.quadraticCurveTo(-7755, -593, -8212, -841);
      a.lineTo(-8266, -895);
      a.lineTo(-8359, -995);
      a.quadraticCurveTo(-8729, -1399, -9155, -1687);
      a.lineTo(-9355, -1844);
      a.lineTo(-9626, -2052);
      a.quadraticCurveTo(-10233, -2275, -10823, -2633);
      a.quadraticCurveTo(-11839, -3278, -13111, -3782);
      a.quadraticCurveTo(-13681, -4011, -14002, -4556);
      a.closePath();
      a.moveTo(-14272, -7658);
      a.quadraticCurveTo(-14290, -7658, -14309, -7658);
      a.quadraticCurveTo(-16407, -7583, -17476, -7112);
      a.quadraticCurveTo(-18513, -6669, -18913, -6506);
      a.quadraticCurveTo(-21275, -5274, -21386, -4922);
      a.quadraticCurveTo(-20796, -5377, -19901, -5783);
      a.quadraticCurveTo(-19719, -5866, -19529, -5937);
      a.lineTo(-19529, -5937);
      a.quadraticCurveTo(-19656, -5692, -19515, -5522);
      a.quadraticCurveTo(-20451, -5271, -21115, -4959);
      a.quadraticCurveTo(-21156, -4938, -21197, -4920);
      a.lineTo(-20374, -5018);
      a.quadraticCurveTo(-19723, -5099, -18983, -5099);
      a.quadraticCurveTo(-18458, -5099, -17889, -5058);
      a.quadraticCurveTo(-16476, -5046, -14346, -3965);
      a.quadraticCurveTo(-12297, -2749, -10772, -1917);
      a.quadraticCurveTo(-8722, -919, -7807, 166);
      a.quadraticCurveTo(-7597, 397, -7259, 855);
      a.quadraticCurveTo(-6990, 1205, -6773, 1383);
      a.quadraticCurveTo(-6668, 1347, -6234, 1163);
      a.quadraticCurveTo(-5886, 1020, -5621, 953);
      a.quadraticCurveTo(-5231, 856, -4776, 856);
      a.quadraticCurveTo(-4290, 856, -3732, 967);
      a.quadraticCurveTo(-3380, 1034, -3031, 1128);
      a.quadraticCurveTo(-2303,
        1321, -1554, 1594);
      a.quadraticCurveTo(-994, 1787, -645, 1932);
      a.lineTo(-346, 1323);
      a.quadraticCurveTo(-142, 901, -62, 479);
      a.quadraticCurveTo(51, -106, -82, -652);
      a.quadraticCurveTo(-189, -1090, -447, -1514);
      a.quadraticCurveTo(-598, -1577, -931, -1724);
      a.quadraticCurveTo(-1710, -2069, -2712, -2567);
      a.quadraticCurveTo(-4825, -3515, -6817, -5190);
      a.lineTo(-6988, -5320);
      a.lineTo(-7067, -5330);
      a.lineTo(-7185, -5351);
      a.quadraticCurveTo(-7431, -5423, -7700, -5611);
      a.quadraticCurveTo(-8801, -6408, -10425, -6981);
      a.quadraticCurveTo(-12168, -7658, -14272, -7658);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11138);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-9667, -5991);
      a.lineTo(-9683, -5996);
      a.moveTo(-11973, -6068);
      a.lineTo(-12264, -6164);
      a.moveTo(-2056, -1684);
      a.lineTo(-2048, -1683);
      a.lineTo(-1966, -1671);
      a.moveTo(-1915, -1662);
      a.lineTo(-1704, -1638);
      a.moveTo(-8949, -4363);
      a.quadraticCurveTo(-9120, -4532, -9299, -4685);
      a.lineTo(-9300, -4685);
      a.quadraticCurveTo(-9327, -4646, -9354, -4618);
      a.moveTo(-9187, -4778);
      a.quadraticCurveTo(-9255, -4738, -9299, -4685);
      a.quadraticCurveTo(-9502, -4854, -9725, -5003);
      a.moveTo(-9626, -2053);
      a.quadraticCurveTo(-9720, -2123, -9818, -2189);
      a.lineTo(-10344, -2531);
      a.moveTo(-6508, -4234);
      a.lineTo(-6762, -4469);
      a.quadraticCurveTo(-6979, -4663, -7211, -4836);
      a.moveTo(-11973, -6068);
      a.lineTo(-11869, -6032);
      a.moveTo(-7637, -5134);
      a.quadraticCurveTo(-8002, -5370, -8362, -5542);
      a.moveTo(-8735, -5707);
      a.quadraticCurveTo(-9203, -5895, -9667, -5991);
      a.moveTo(-10060, -5212);
      a.lineTo(-10302, -5350);
      a.lineTo(-10354, -5378);
      a.lineTo(-10392, -5350);
      a.lineTo(-10414, -5326);
      a.moveTo(-10295, -5416);
      a.lineTo(-10354, -5378);
      a.quadraticCurveTo(-10521, -5467, -10696, -5551);
      a.moveTo(-11030, -5703);
      a.quadraticCurveTo(-11259, -5805, -11504, -5898);
      a.moveTo(-11770, -3378);
      a.quadraticCurveTo(-12107, -3565, -12488, -3763);
      a.moveTo(-10658, -2727);
      a.quadraticCurveTo(-11012, -2945, -11430, -3187);
      a.moveTo(-8020, -3111);
      a.lineTo(-8032, -3133);
      a.lineTo(-8063, -3185);
      a.quadraticCurveTo(-8133, -3304, -8210, -3422);
      a.quadraticCurveTo(-8238, -3406, -8270, -3393);
      a.quadraticCurveTo(-8299, -3379, -8331, -3377);
      a.moveTo(-7688, -2502);
      a.quadraticCurveTo(-7699, -2492, -7713, -2486);
      a.lineTo(-7732, -2471);
      a.moveTo(-7713, -2552);
      a.lineTo(-7807, -2733);
      a.moveTo(-7688, -2502);
      a.lineTo(-7713, -2552);
      a.moveTo(-7323, -1707);
      a.lineTo(-7414, -1924);
      a.moveTo(-7688, -2502);
      a.lineTo(-7580, -2281);
      a.moveTo(-7610, -2545);
      a.lineTo(-7688, -2502);
      a.moveTo(-8401, -3703);
      a.lineTo(-8496, -3837);
      a.quadraticCurveTo(-8566, -3931, -8643, -4021);
      a.moveTo(-8325, -3756);
      a.quadraticCurveTo(-8361, -3728, -8401, -3703);
      a.quadraticCurveTo(-8302, -3565, -8210, -3422);
      a.quadraticCurveTo(-8151, -3451, -8100, -3492);
      a.moveTo(-8401, -3703);
      a.quadraticCurveTo(-8420, -3690, -8442, -3680);
      a.quadraticCurveTo(-8457, -3671, -8472, -3665);
      a.moveTo(-9155, -1688);
      a.lineTo(-9355, -1845);
      a.moveTo(-7377, 33);
      a.quadraticCurveTo(-7178, 257, -6999, 477);
      a.moveTo(-6515, 761);
      a.quadraticCurveTo(-6194, 681, -5881, 628);
      a.lineTo(-5800, 615);
      a.moveTo(-8266, -896);
      a.lineTo(-8487, -1106);
      a.moveTo(-8722, -1318);
      a.quadraticCurveTo(-8929, -1507, -9155, -1688);
      a.moveTo(-7426, -20);
      a.lineTo(-7579, -189);
      a.moveTo(-6934, -707);
      a.lineTo(-7006, -711);
      a.lineTo(-7035, -715);
      a.moveTo(-6854, -472);
      a.lineTo(-6948, -487);
      a.lineTo(-6965, -480);
      a.moveTo(-6817, -359);
      a.lineTo(-6750, -144);
      a.moveTo(-6854, -472);
      a.lineTo(-6791, -458);
      a.moveTo(-6817, -359);
      a.lineTo(-6825, -383);
      a.lineTo(-6854, -472);
      a.lineTo(-6934, -707);
      a.quadraticCurveTo(-6987, -869, -7055, -1038);
      a.quadraticCurveTo(-7179, -1375, -7323, -1707);
      a.moveTo(-6833, -686);
      a.lineTo(-6934, -707);
      a.moveTo(-7910, -540);
      a.quadraticCurveTo(-8053, -691, -8212, -842);
      a.moveTo(-3685, -2239);
      a.quadraticCurveTo(-3470, -2129, -3266, -2055);
      a.lineTo(-2989, -1957);
      a.moveTo(-5955, -3864);
      a.lineTo(-5232, -3278);
      a.moveTo(-4924, -3041);
      a.quadraticCurveTo(-4458, -2686, -4047, -2438);
      a.moveTo(-2501, -1802);
      a.quadraticCurveTo(-2261, -1731, -2056, -1684);
      a.moveTo(-3010, 660);
      a.quadraticCurveTo(-3161, 628, -3315, 607);
      a.quadraticCurveTo(-3618, 559, -3929, 534);
      a.moveTo(-4551, 510);
      a.lineTo(-5193, 539);
      a.moveTo(-4425, 511);
      a.lineTo(-4551,
        510);
      a.moveTo(-3929, 534);
      a.lineTo(-4063, 525);
      a.moveTo(-5193, 539);
      a.lineTo(-5368, 556);
      a.moveTo(-6515, 761);
      a.lineTo(-6572, 776);
      a.moveTo(-6999, 477);
      a.lineTo(-6889, 611);
      a.moveTo(-15463, -4931);
      a.quadraticCurveTo(-15791, -5015, -16131, -5082);
      a.moveTo(-14202, -4533);
      a.quadraticCurveTo(-14607, -4684, -15040, -4814);
      a.moveTo(-14088, -6624);
      a.quadraticCurveTo(-14451, -6695, -14829, -6750);
      a.moveTo(-16489, -5147);
      a.quadraticCurveTo(-16747, -5189, -17017, -5219);
      a.moveTo(-12697, -6294);
      a.quadraticCurveTo(-13168, -6428, -13674, -6538);
      a.moveTo(-12941, -3989);
      a.quadraticCurveTo(-13318, -4170, -13731, -4347)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11138);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-10479, -6272);
      a.quadraticCurveTo(-13936, -7204, -15845, -6908);
      a.quadraticCurveTo(-17575, -6587, -17505, -6402);
      a.quadraticCurveTo(-17820, -6163, -17843, -5939);
      a.moveTo(-21197, -4921);
      a.lineTo(-20374, -5019);
      a.quadraticCurveTo(-19260, -5157, -17889, -5059);
      a.quadraticCurveTo(-16476, -5047, -14346, -3966);
      a.quadraticCurveTo(-12297, -2750, -10772, -1918);
      a.quadraticCurveTo(-8722, -920, -7807, 165);
      a.quadraticCurveTo(-7597, 396, -7259, 854);
      a.quadraticCurveTo(-6990, 1204, -6773, 1382);
      a.quadraticCurveTo(-6668, 1346, -6234, 1162);
      a.quadraticCurveTo(-5886, 1019, -5621, 952);
      a.quadraticCurveTo(-4813, 751, -3732, 966);
      a.quadraticCurveTo(-3380, 1033, -3031, 1127);
      a.quadraticCurveTo(-2303, 1320, -1554, 1593);
      a.quadraticCurveTo(-994, 1786, -645, 1931);
      a.lineTo(-346, 1322);
      a.quadraticCurveTo(-142, 900, -62, 478);
      a.quadraticCurveTo(51, -107, -82, -653);
      a.quadraticCurveTo(-189, -1091, -447, -1515);
      a.quadraticCurveTo(-598, -1578, -931, -1725);
      a.quadraticCurveTo(-1710, -2070, -2712, -2568);
      a.quadraticCurveTo(-4825, -3516, -6817, -5191);
      a.lineTo(-6988, -5321);
      a.lineTo(-7067, -5331);
      a.lineTo(-7185, -5352);
      a.quadraticCurveTo(-7431, -5424, -7700, -5612);
      a.quadraticCurveTo(-8801, -6409, -10425, -6982);
      a.quadraticCurveTo(-12183, -7665, -14309, -7659);
      a.quadraticCurveTo(-16407, -7584, -17476, -7113);
      a.quadraticCurveTo(-18513, -6670, -18913, -6507);
      a.quadraticCurveTo(-19393, -6205, -19529, -5938);
      a.quadraticCurveTo(-19656, -5693, -19515, -5523);
      a.quadraticCurveTo(-19443, -5437, -19310, -5362);
      a.quadraticCurveTo(-19104, -5245, -18757, -5235);
      a.quadraticCurveTo(-18837, -5300, -18949, -5353);
      a.quadraticCurveTo(-19053, -5402, -19096, -5626);
      a.lineTo(-19099, -5645);
      a.quadraticCurveTo(-18942, -5980, -18725, -6098);
      a.quadraticCurveTo(-18514, -6206, -18319, -6277);
      a.quadraticCurveTo(-18424, -5992, -18340, -5811);
      a.quadraticCurveTo(-18199, -5523, -17646, -5315);
      a.quadraticCurveTo(-17514, -5261, -17366, -5226);
      a.quadraticCurveTo(-17865, -5633, -17843, -5939);
      a.moveTo(-447, -1515);
      a.lineTo(-471, -1553);
      a.quadraticCurveTo(-556, -1600, -476, -1560);
      a.lineTo(-471, -1553);
      a.moveTo(-21197, -4921);
      a.quadraticCurveTo(-21304, -4914, -21386, -4923);
      a.quadraticCurveTo(-21275, -5275, -18913, -6507)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11138);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin =
        "round";
      a.beginPath();
      a.moveTo(-1966, -1671);
      a.lineTo(-1915, -1662)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11138);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-18319, -6277);
      a.quadraticCurveTo(-18514, -6206, -18725, -6098);
      a.quadraticCurveTo(-18942, -5980, -19099, -5645);
      a.lineTo(-19096, -5626);
      a.lineTo(-19010, -5644);
      a.quadraticCurveTo(-18673, -5712, -18340, -5811);
      a.quadraticCurveTo(-18424, -5992, -18319, -6277);
      a.closePath();
      a.moveTo(-19529, -5938);
      a.quadraticCurveTo(-19719, -5867, -19901, -5784);
      a.quadraticCurveTo(-20796, -5378, -21386, -4923);
      a.quadraticCurveTo(-21340, -4918, -21286, -4918);
      a.quadraticCurveTo(-21244, -4918, -21197, -4921);
      a.quadraticCurveTo(-21156, -4939, -21115, -4960);
      a.quadraticCurveTo(-20451, -5272, -19515, -5523);
      a.quadraticCurveTo(-19656, -5693, -19529, -5938);
      a.closePath();
      a.moveTo(-14835, -6979);
      a.quadraticCurveTo(-15385, -6979, -15845, -6908);
      a.quadraticCurveTo(-17575, -6587, -17505, -6402);
      a.quadraticCurveTo(-17820, -6163, -17843, -5939);
      a.quadraticCurveTo(-17257, -6090, -16611, -6177);
      a.quadraticCurveTo(-15809, -6289, -14969, -6289);
      a.quadraticCurveTo(-14652, -6289, -14330, -6273);
      a.quadraticCurveTo(-13108, -6201, -11973, -6068);
      a.quadraticCurveTo(-11576, -6009, -11222, -5894);
      a.quadraticCurveTo(-10358, -5615, -9649, -5303);
      a.quadraticCurveTo(-8624, -5015, -7838, -4354);
      a.quadraticCurveTo(-7333, -3932, -6996, -3265);
      a.quadraticCurveTo(-6587, -2443, -6261, -1545);
      a.quadraticCurveTo(-6136, -1214, -5934, -1003);
      a.quadraticCurveTo(-5621, -1144, -5320, -1264);
      a.quadraticCurveTo(-4509, -1570, -3702, -1671);
      a.quadraticCurveTo(-3269, -1724, -2828, -1724);
      a.quadraticCurveTo(-2445, -1724, -2056, -1684);
      a.quadraticCurveTo(-2929, -2067, -3741, -2586);
      a.quadraticCurveTo(-4495, -3060, -5220, -3582);
      a.lineTo(-6735, -4677);
      a.quadraticCurveTo(-7419, -5166, -8174, -5470);
      a.lineTo(-8362, -5542);
      a.lineTo(-8362, -5542);
      a.quadraticCurveTo(-8362, -5542, -8362, -5542);
      a.quadraticCurveTo(-9187, -5847, -9667, -5991);
      a.lineTo(-9683, -5996);
      a.lineTo(-9882, -6064);
      a.lineTo(-10479, -6272);
      a.quadraticCurveTo(-13103, -6979, -14835, -6979);
      a.closePath();
      a.moveTo(-14002, -4557);
      a.quadraticCurveTo(-13681, -4012, -13111, -3783);
      a.quadraticCurveTo(-11839, -3279, -10823, -2634);
      a.quadraticCurveTo(-10233, -2276, -9626, -2053);
      a.lineTo(-9355, -1845);
      a.lineTo(-9155, -1688);
      a.quadraticCurveTo(-8729, -1400, -8359, -996);
      a.lineTo(-8266, -896);
      a.lineTo(-8212, -842);
      a.quadraticCurveTo(-7755, -594, -7462, -81);
      a.lineTo(-7426, -20);
      a.lineTo(-7377, 33);
      a.quadraticCurveTo(-7178, 257, -6999, 477);
      a.lineTo(-6962, 484);
      a.quadraticCurveTo(-6723, 579, -6515, 761);
      a.quadraticCurveTo(-6194, 681, -5881, 628);
      a.quadraticCurveTo(-5829, 666, -5780, 687);
      a.quadraticCurveTo(-5729,
        668, -5545, 656);
      a.quadraticCurveTo(-5285, 639, -5269, 618);
      a.lineTo(-5234, 584);
      a.lineTo(-5193, 539);
      a.lineTo(-4551, 510);
      a.lineTo(-4415, 542);
      a.quadraticCurveTo(-4356, 551, -4305, 568);
      a.quadraticCurveTo(-4233, 587, -4167, 587);
      a.quadraticCurveTo(-4088, 587, -4018, 560);
      a.quadraticCurveTo(-3992, 550, -3965, 532);
      a.lineTo(-3929, 534);
      a.quadraticCurveTo(-3618, 559, -3315, 607);
      a.quadraticCurveTo(-3161, 628, -3010, 660);
      a.quadraticCurveTo(-3809, 148, -4659, 119);
      a.quadraticCurveTo(-4709, 118, -4759, 118);
      a.quadraticCurveTo(-5508, 118, -6220, 456);
      a.quadraticCurveTo(-6442, 111, -6684, -189);
      a.lineTo(-6817, -358);
      a.lineTo(-6825, -382);
      a.lineTo(-6854, -471);
      a.lineTo(-6934, -706);
      a.quadraticCurveTo(-6987, -868, -7055, -1037);
      a.quadraticCurveTo(-7179, -1374, -7323, -1706);
      a.quadraticCurveTo(-7466, -1935, -7560, -2211);
      a.lineTo(-7580, -2280);
      a.lineTo(-7688, -2501);
      a.lineTo(-7713, -2551);
      a.quadraticCurveTo(-7810, -2833, -7978, -3055);
      a.lineTo(-8020, -3110);
      a.lineTo(-8032, -3132);
      a.lineTo(-8063, -3184);
      a.quadraticCurveTo(-8133, -3303, -8210, -3421);
      a.quadraticCurveTo(-8302, -3564, -8401, -3702);
      a.lineTo(-8496, -3836);
      a.quadraticCurveTo(-8639, -3955, -8806, -4034);
      a.lineTo(-8972, -4111);
      a.lineTo(-8972, -4111);
      a.quadraticCurveTo(-8323, -3172, -8030, -1957);
      a.quadraticCurveTo(-7984, -1782, -7950, -1606);
      a.quadraticCurveTo(-8747, -2612, -9775, -3165);
      a.quadraticCurveTo(-10843, -3724, -12218, -4206);
      a.quadraticCurveTo(-13074, -4491, -14002, -4556);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11138);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-18319, -6277);
      a.quadraticCurveTo(-18424, -5992, -18340, -5811);
      a.quadraticCurveTo(-18673, -5712, -19010, -5644);
      a.lineTo(-19096, -5626);
      a.lineTo(-19099, -5645);
      a.quadraticCurveTo(-18942, -5980, -18725, -6098);
      a.quadraticCurveTo(-18514, -6206, -18319, -6277);
      a.closePath();
      a.moveTo(-515, -1578);
      a.quadraticCurveTo(-517, -1578, -471, -1553);
      a.lineTo(-476, -1560);
      a.quadraticCurveTo(-513, -1578, -515, -1578);
      a.closePath();
      a.moveTo(-14835, -6979);
      a.quadraticCurveTo(-13103, -6979, -10479, -6272);
      a.lineTo(-9882, -6064);
      a.lineTo(-9683, -5996);
      a.lineTo(-9667, -5991);
      a.quadraticCurveTo(-9187, -5847, -8362, -5542);
      a.lineTo(-8174, -5470);
      a.quadraticCurveTo(-7419, -5166, -6735, -4677);
      a.lineTo(-5220, -3582);
      a.quadraticCurveTo(-4495, -3060, -3741, -2586);
      a.quadraticCurveTo(-2929, -2067, -2056, -1684);
      a.quadraticCurveTo(-2445, -1724, -2828, -1724);
      a.quadraticCurveTo(-3269, -1724, -3702, -1671);
      a.quadraticCurveTo(-4509, -1570, -5320, -1264);
      a.quadraticCurveTo(-5621, -1144, -5934, -1003);
      a.quadraticCurveTo(-6136, -1214, -6261, -1545);
      a.quadraticCurveTo(-6587, -2443, -6996, -3265);
      a.quadraticCurveTo(-7333, -3932, -7838, -4354);
      a.quadraticCurveTo(-8624, -5015, -9649, -5303);
      a.quadraticCurveTo(-10358, -5615, -11222, -5894);
      a.quadraticCurveTo(-11576, -6009, -11973, -6068);
      a.quadraticCurveTo(-13108, -6201, -14330, -6273);
      a.quadraticCurveTo(-14652, -6289, -14969, -6289);
      a.quadraticCurveTo(-15809, -6289, -16611, -6177);
      a.quadraticCurveTo(-17257, -6090, -17843, -5939);
      a.quadraticCurveTo(-17820, -6163, -17505, -6402);
      a.quadraticCurveTo(-17575, -6587, -15845, -6908);
      a.quadraticCurveTo(-15385, -6979, -14835, -6979);
      a.closePath();
      a.moveTo(-6220, 455);
      a.quadraticCurveTo(-6220,
        455, -6220, 455);
      a.quadraticCurveTo(-6220, 455, -6220, 455);
      a.closePath();
      a.moveTo(-14002, -4557);
      a.quadraticCurveTo(-13074, -4492, -12218, -4207);
      a.quadraticCurveTo(-10843, -3725, -9775, -3166);
      a.quadraticCurveTo(-8747, -2613, -7950, -1607);
      a.quadraticCurveTo(-7984, -1783, -8030, -1958);
      a.quadraticCurveTo(-8323, -3173, -8972, -4112);
      a.lineTo(-8972, -4112);
      a.lineTo(-8806, -4035);
      a.quadraticCurveTo(-8639, -3956, -8496, -3837);
      a.lineTo(-8401, -3703);
      a.quadraticCurveTo(-8302, -3565, -8210, -3422);
      a.quadraticCurveTo(-8133, -3304, -8063, -3185);
      a.lineTo(-8032, -3133);
      a.lineTo(-8020, -3111);
      a.lineTo(-7978, -3056);
      a.quadraticCurveTo(-7810, -2834, -7713, -2552);
      a.lineTo(-7688, -2502);
      a.lineTo(-7580, -2281);
      a.lineTo(-7560, -2212);
      a.quadraticCurveTo(-7466, -1936, -7323, -1707);
      a.quadraticCurveTo(-7179, -1375, -7055, -1038);
      a.quadraticCurveTo(-6987, -869, -6934, -707);
      a.lineTo(-6854, -472);
      a.lineTo(-6825, -383);
      a.lineTo(-6817, -359);
      a.lineTo(-6684, -190);
      a.quadraticCurveTo(-6442, 110, -6220, 455);
      a.quadraticCurveTo(-5507, 118, -4759, 118);
      a.quadraticCurveTo(-4709,
        118, -4659, 120);
      a.quadraticCurveTo(-3809, 149, -3010, 661);
      a.quadraticCurveTo(-3161, 629, -3315, 608);
      a.quadraticCurveTo(-3618, 560, -3929, 535);
      a.lineTo(-3965, 533);
      a.quadraticCurveTo(-3992, 551, -4018, 561);
      a.quadraticCurveTo(-4089, 588, -4167, 588);
      a.quadraticCurveTo(-4233, 588, -4305, 569);
      a.quadraticCurveTo(-4356, 552, -4415, 543);
      a.lineTo(-4551, 511);
      a.lineTo(-5193, 540);
      a.lineTo(-5234, 585);
      a.lineTo(-5269, 619);
      a.quadraticCurveTo(-5285, 640, -5545, 657);
      a.quadraticCurveTo(-5729, 669, -5780, 688);
      a.quadraticCurveTo(-5829, 667, -5881, 629);
      a.quadraticCurveTo(-6194, 682, -6515, 762);
      a.quadraticCurveTo(-6723, 580, -6962, 485);
      a.lineTo(-6999, 478);
      a.quadraticCurveTo(-7178, 258, -7377, 34);
      a.lineTo(-7426, -19);
      a.lineTo(-7462, -80);
      a.quadraticCurveTo(-7755, -593, -8212, -841);
      a.lineTo(-8266, -895);
      a.lineTo(-8359, -995);
      a.quadraticCurveTo(-8729, -1399, -9155, -1687);
      a.lineTo(-9355, -1844);
      a.lineTo(-9626, -2052);
      a.quadraticCurveTo(-10233, -2275, -10823, -2633);
      a.quadraticCurveTo(-11839, -3278, -13111, -3782);
      a.quadraticCurveTo(-13681, -4011, -14002, -4556);
      a.closePath();
      a.moveTo(-14272, -7658);
      a.quadraticCurveTo(-14290, -7658, -14309, -7658);
      a.quadraticCurveTo(-16407, -7583, -17476, -7112);
      a.quadraticCurveTo(-18513, -6669, -18913, -6506);
      a.quadraticCurveTo(-21275, -5274, -21386, -4922);
      a.quadraticCurveTo(-20796, -5377, -19901, -5783);
      a.quadraticCurveTo(-19719, -5866, -19529, -5937);
      a.lineTo(-19529, -5937);
      a.quadraticCurveTo(-19656, -5692, -19515, -5522);
      a.quadraticCurveTo(-20451, -5271, -21115, -4959);
      a.quadraticCurveTo(-21156, -4938, -21197, -4920);
      a.lineTo(-20374, -5018);
      a.quadraticCurveTo(-19723, -5099, -18983, -5099);
      a.quadraticCurveTo(-18458, -5099, -17889, -5058);
      a.quadraticCurveTo(-16476, -5046, -14346, -3965);
      a.quadraticCurveTo(-12297, -2749, -10772, -1917);
      a.quadraticCurveTo(-8722, -919, -7807, 166);
      a.quadraticCurveTo(-7597, 397, -7259, 855);
      a.quadraticCurveTo(-6990, 1205, -6773, 1383);
      a.quadraticCurveTo(-6668, 1347, -6234, 1163);
      a.quadraticCurveTo(-5886, 1020, -5621, 953);
      a.quadraticCurveTo(-5231, 856, -4776, 856);
      a.quadraticCurveTo(-4290, 856, -3732, 967);
      a.quadraticCurveTo(-3380, 1034, -3031, 1128);
      a.quadraticCurveTo(-2303,
        1321, -1554, 1594);
      a.quadraticCurveTo(-994, 1787, -645, 1932);
      a.lineTo(-346, 1323);
      a.quadraticCurveTo(-142, 901, -62, 479);
      a.quadraticCurveTo(51, -106, -82, -652);
      a.quadraticCurveTo(-189, -1090, -447, -1514);
      a.quadraticCurveTo(-598, -1577, -931, -1724);
      a.quadraticCurveTo(-1710, -2069, -2712, -2567);
      a.quadraticCurveTo(-4825, -3515, -6817, -5190);
      a.lineTo(-6988, -5320);
      a.lineTo(-7067, -5330);
      a.lineTo(-7185, -5351);
      a.quadraticCurveTo(-7431, -5423, -7700, -5611);
      a.quadraticCurveTo(-8801, -6408, -10425, -6981);
      a.quadraticCurveTo(-12168, -7658, -14272, -7658);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11138);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-9667, -5991);
      a.lineTo(-9683, -5996);
      a.moveTo(-11973, -6068);
      a.lineTo(-12264, -6164);
      a.moveTo(-2056, -1684);
      a.lineTo(-2048, -1683);
      a.lineTo(-1966, -1671);
      a.moveTo(-1915, -1662);
      a.lineTo(-1704, -1638);
      a.moveTo(-8949, -4363);
      a.quadraticCurveTo(-9120, -4532, -9299, -4685);
      a.lineTo(-9300, -4685);
      a.quadraticCurveTo(-9327, -4646, -9354, -4618);
      a.moveTo(-9187, -4778);
      a.quadraticCurveTo(-9255, -4738, -9299, -4685);
      a.quadraticCurveTo(-9502, -4854, -9725, -5003);
      a.moveTo(-9626, -2053);
      a.quadraticCurveTo(-9720, -2123, -9818, -2189);
      a.lineTo(-10344, -2531);
      a.moveTo(-6508, -4234);
      a.lineTo(-6762, -4469);
      a.quadraticCurveTo(-6979, -4663, -7211, -4836);
      a.moveTo(-11973, -6068);
      a.lineTo(-11869, -6032);
      a.moveTo(-7637, -5134);
      a.quadraticCurveTo(-8002, -5370, -8362, -5542);
      a.moveTo(-8735, -5707);
      a.quadraticCurveTo(-9203, -5895, -9667, -5991);
      a.moveTo(-10060, -5212);
      a.lineTo(-10302, -5350);
      a.lineTo(-10354, -5378);
      a.lineTo(-10392, -5350);
      a.lineTo(-10414, -5326);
      a.moveTo(-10295, -5416);
      a.lineTo(-10354, -5378);
      a.quadraticCurveTo(-10521, -5467, -10696, -5551);
      a.moveTo(-11030, -5703);
      a.quadraticCurveTo(-11259, -5805, -11504, -5898);
      a.moveTo(-11770, -3378);
      a.quadraticCurveTo(-12107, -3565, -12488, -3763);
      a.moveTo(-10658, -2727);
      a.quadraticCurveTo(-11012, -2945, -11430, -3187);
      a.moveTo(-8020, -3111);
      a.lineTo(-8032, -3133);
      a.lineTo(-8063, -3185);
      a.quadraticCurveTo(-8133, -3304, -8210, -3422);
      a.quadraticCurveTo(-8238, -3406, -8270, -3393);
      a.quadraticCurveTo(-8299, -3379, -8331, -3377);
      a.moveTo(-7688, -2502);
      a.quadraticCurveTo(-7699, -2492, -7713, -2486);
      a.lineTo(-7732, -2471);
      a.moveTo(-7713, -2552);
      a.lineTo(-7807, -2733);
      a.moveTo(-7688, -2502);
      a.lineTo(-7713, -2552);
      a.moveTo(-7323, -1707);
      a.lineTo(-7414, -1924);
      a.moveTo(-7688, -2502);
      a.lineTo(-7580, -2281);
      a.moveTo(-7610, -2545);
      a.lineTo(-7688, -2502);
      a.moveTo(-8401, -3703);
      a.lineTo(-8496, -3837);
      a.quadraticCurveTo(-8566, -3931, -8643, -4021);
      a.moveTo(-8325, -3756);
      a.quadraticCurveTo(-8361, -3728, -8401, -3703);
      a.quadraticCurveTo(-8302, -3565, -8210, -3422);
      a.quadraticCurveTo(-8151, -3451, -8100, -3492);
      a.moveTo(-8401, -3703);
      a.quadraticCurveTo(-8420, -3690, -8442, -3680);
      a.quadraticCurveTo(-8457, -3671, -8472, -3665);
      a.moveTo(-9155, -1688);
      a.lineTo(-9355, -1845);
      a.moveTo(-7377, 33);
      a.quadraticCurveTo(-7178, 257, -6999, 477);
      a.moveTo(-6515, 761);
      a.quadraticCurveTo(-6194, 681, -5881, 628);
      a.lineTo(-5800, 615);
      a.moveTo(-8266, -896);
      a.lineTo(-8487, -1106);
      a.moveTo(-8722, -1318);
      a.quadraticCurveTo(-8929, -1507, -9155, -1688);
      a.moveTo(-7426, -20);
      a.lineTo(-7579, -189);
      a.moveTo(-6934, -707);
      a.lineTo(-7006, -711);
      a.lineTo(-7035, -715);
      a.moveTo(-6854, -472);
      a.lineTo(-6948, -487);
      a.lineTo(-6965, -480);
      a.moveTo(-6817, -359);
      a.lineTo(-6750, -144);
      a.moveTo(-6854, -472);
      a.lineTo(-6791, -458);
      a.moveTo(-6817, -359);
      a.lineTo(-6825, -383);
      a.lineTo(-6854, -472);
      a.lineTo(-6934, -707);
      a.quadraticCurveTo(-6987, -869, -7055, -1038);
      a.quadraticCurveTo(-7179, -1375, -7323, -1707);
      a.moveTo(-6833, -686);
      a.lineTo(-6934, -707);
      a.moveTo(-7910, -540);
      a.quadraticCurveTo(-8053, -691, -8212, -842);
      a.moveTo(-3685, -2239);
      a.quadraticCurveTo(-3470, -2129, -3266, -2055);
      a.lineTo(-2989, -1957);
      a.moveTo(-5955, -3864);
      a.lineTo(-5232, -3278);
      a.moveTo(-4924, -3041);
      a.quadraticCurveTo(-4458, -2686, -4047, -2438);
      a.moveTo(-2501, -1802);
      a.quadraticCurveTo(-2261, -1731, -2056, -1684);
      a.moveTo(-3010, 660);
      a.quadraticCurveTo(-3161, 628, -3315, 607);
      a.quadraticCurveTo(-3618, 559, -3929, 534);
      a.moveTo(-4551, 510);
      a.lineTo(-5193, 539);
      a.moveTo(-4425, 511);
      a.lineTo(-4551,
        510);
      a.moveTo(-3929, 534);
      a.lineTo(-4063, 525);
      a.moveTo(-5193, 539);
      a.lineTo(-5368, 556);
      a.moveTo(-6515, 761);
      a.lineTo(-6572, 776);
      a.moveTo(-6999, 477);
      a.lineTo(-6889, 611);
      a.moveTo(-15463, -4931);
      a.quadraticCurveTo(-15791, -5015, -16131, -5082);
      a.moveTo(-14202, -4533);
      a.quadraticCurveTo(-14607, -4684, -15040, -4814);
      a.moveTo(-14088, -6624);
      a.quadraticCurveTo(-14451, -6695, -14829, -6750);
      a.moveTo(-16489, -5147);
      a.quadraticCurveTo(-16747, -5189, -17017, -5219);
      a.moveTo(-12697, -6294);
      a.quadraticCurveTo(-13168, -6428, -13674, -6538);
      a.moveTo(-12941, -3989);
      a.quadraticCurveTo(-13318, -4170, -13731, -4347)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11138);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-10479, -6272);
      a.quadraticCurveTo(-13936, -7204, -15845, -6908);
      a.quadraticCurveTo(-17575, -6587, -17505, -6402);
      a.quadraticCurveTo(-17820, -6163, -17843, -5939);
      a.moveTo(-21197, -4921);
      a.lineTo(-20374, -5019);
      a.quadraticCurveTo(-19260, -5157, -17889, -5059);
      a.quadraticCurveTo(-16476, -5047, -14346, -3966);
      a.quadraticCurveTo(-12297, -2750, -10772, -1918);
      a.quadraticCurveTo(-8722, -920, -7807, 165);
      a.quadraticCurveTo(-7597, 396, -7259, 854);
      a.quadraticCurveTo(-6990, 1204, -6773, 1382);
      a.quadraticCurveTo(-6668, 1346, -6234, 1162);
      a.quadraticCurveTo(-5886, 1019, -5621, 952);
      a.quadraticCurveTo(-4813, 751, -3732, 966);
      a.quadraticCurveTo(-3380, 1033, -3031, 1127);
      a.quadraticCurveTo(-2303, 1320, -1554, 1593);
      a.quadraticCurveTo(-994, 1786, -645, 1931);
      a.lineTo(-346, 1322);
      a.quadraticCurveTo(-142, 900, -62, 478);
      a.quadraticCurveTo(51, -107, -82, -653);
      a.quadraticCurveTo(-189, -1091, -447, -1515);
      a.quadraticCurveTo(-598, -1578, -931, -1725);
      a.quadraticCurveTo(-1710, -2070, -2712, -2568);
      a.quadraticCurveTo(-4825, -3516, -6817, -5191);
      a.lineTo(-6988, -5321);
      a.lineTo(-7067, -5331);
      a.lineTo(-7185, -5352);
      a.quadraticCurveTo(-7431, -5424, -7700, -5612);
      a.quadraticCurveTo(-8801, -6409, -10425, -6982);
      a.quadraticCurveTo(-12183, -7665, -14309, -7659);
      a.quadraticCurveTo(-16407, -7584, -17476, -7113);
      a.quadraticCurveTo(-18513, -6670, -18913, -6507);
      a.quadraticCurveTo(-19393, -6205, -19529, -5938);
      a.quadraticCurveTo(-19656, -5693, -19515, -5523);
      a.quadraticCurveTo(-19443, -5437, -19310, -5362);
      a.quadraticCurveTo(-19104, -5245, -18757, -5235);
      a.quadraticCurveTo(-18837, -5300, -18949, -5353);
      a.quadraticCurveTo(-19053, -5402, -19096, -5626);
      a.lineTo(-19099, -5645);
      a.quadraticCurveTo(-18942, -5980, -18725, -6098);
      a.quadraticCurveTo(-18514, -6206, -18319, -6277);
      a.quadraticCurveTo(-18424, -5992, -18340, -5811);
      a.quadraticCurveTo(-18199, -5523, -17646, -5315);
      a.quadraticCurveTo(-17514, -5261, -17366, -5226);
      a.quadraticCurveTo(-17865, -5633, -17843, -5939);
      a.moveTo(-447, -1515);
      a.lineTo(-471, -1553);
      a.quadraticCurveTo(-556, -1600, -476, -1560);
      a.lineTo(-471, -1553);
      a.moveTo(-21197, -4921);
      a.quadraticCurveTo(-21304, -4914, -21386, -4923);
      a.quadraticCurveTo(-21275, -5275, -18913, -6507)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11138);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-1966, -1671);
      a.lineTo(-1915, -1662)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11314);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(29, -2730);
      a.quadraticCurveTo(18, -2730, 8, -2730);
      a.quadraticCurveTo(-775, -2725, -1473, -2385);
      a.quadraticCurveTo(-1598, -2324, -1712, -2247);
      a.quadraticCurveTo(-1835, -2165, -1945, -2063);
      a.lineTo(-2105, -1920);
      a.quadraticCurveTo(-2051, -1145, -1854, -394);
      a.quadraticCurveTo(-1658, 357, -1281, 1029);
      a.lineTo(-1275, 1040);
      a.quadraticCurveTo(-893, 1719, -384, 2301);
      a.quadraticCurveTo(-137,
        2582, 102, 2582);
      a.quadraticCurveTo(356, 2582, 602, 2267);
      a.quadraticCurveTo(800, 2015, 923, 1716);
      a.quadraticCurveTo(1200, 1045, 1441, 361);
      a.quadraticCurveTo(1694, -358, 1875, -1100);
      a.quadraticCurveTo(2015, -1676, 1895, -2258);
      a.lineTo(1717, -2349);
      a.quadraticCurveTo(1597, -2407, 1472, -2456);
      a.quadraticCurveTo(775, -2730, 29, -2730);
      a.closePath();
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1806, 2714, -1672, 2714);
      a.quadraticCurveTo(-1609, 2714, -1542, 2741);
      a.quadraticCurveTo(-1433,
        2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.quadraticCurveTo(-1628, 2191, -1784, 2034);
      a.quadraticCurveTo(-1882, 1935, -1969, 1830);
      a.closePath();
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285);
      a.quadraticCurveTo(1453, 2524, 1069, 2647);
      a.quadraticCurveTo(1240, 2920, 1464, 3159);
      a.lineTo(1495, 3185);
      a.quadraticCurveTo(1485, 2702, 1801, 2702);
      a.quadraticCurveTo(1871,
        2702, 1958, 2726);
      a.quadraticCurveTo(2051, 2751, 2109, 2838);
      a.lineTo(2146, 2897);
      a.quadraticCurveTo(2234, 2453, 2090, 2025);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11314);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1895, -2258);
      a.quadraticCurveTo(2015, -1676, 1875, -1100);
      a.quadraticCurveTo(1694, -358, 1441, 361);
      a.quadraticCurveTo(1200, 1045, 923, 1716);
      a.quadraticCurveTo(800, 2015, 602, 2267);
      a.quadraticCurveTo(356, 2582, 102, 2582);
      a.quadraticCurveTo(-137, 2582, -384, 2301);
      a.quadraticCurveTo(-893, 1719, -1275,
        1040);
      a.lineTo(-1281, 1029);
      a.lineTo(-1281, 1029);
      a.quadraticCurveTo(-1281, 1029, -1281, 1029);
      a.quadraticCurveTo(-1658, 357, -1854, -394);
      a.quadraticCurveTo(-2051, -1145, -2105, -1920);
      a.quadraticCurveTo(-2607, -1485, -3179, -1168);
      a.lineTo(-3154, -913);
      a.quadraticCurveTo(-3092, -110, -3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628, 2191, -1457, 2316);
      a.quadraticCurveTo(-1193, 2510, -895, 2627);
      a.quadraticCurveTo(-716,
        2697, -524, 2739);
      a.quadraticCurveTo(-230, 2803, 76, 2803);
      a.quadraticCurveTo(518, 2803, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782, 2285);
      a.quadraticCurveTo(1942, 2169, 2090, 2025);
      a.quadraticCurveTo(2251, 1867, 2398, 1675);
      a.quadraticCurveTo(2848, 1083, 3270, 825);
      a.quadraticCurveTo(3289, 538, 3323, 253);
      a.quadraticCurveTo(3408, -448, 3399, -1154);
      a.quadraticCurveTo(3043, -1322, 2763, -1603);
      a.quadraticCurveTo(2369, -1999, 1895, -2258);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11314);
      a.fillStyle =
        "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1717, -2349);
      a.lineTo(1791, -2179);
      a.moveTo(1971, -1331);
      a.quadraticCurveTo(1976, -1189, 1966, -1044);
      a.moveTo(1884, -1896);
      a.quadraticCurveTo(1918, -1769, 1940, -1641);
      a.moveTo(1925, -735);
      a.lineTo(1908, -654);
      a.lineTo(1866, -463);
      a.moveTo(-1712, -2247);
      a.lineTo(-1741, -2148);
      a.moveTo(-1785, -1953);
      a.quadraticCurveTo(-1818, -1781, -1826, -1605);
      a.moveTo(-1281, 1029);
      a.lineTo(-1285, 1001);
      a.moveTo(-1715, -727);
      a.lineTo(-1688, -640);
      a.lineTo(-1626, -443);
      a.moveTo(-1821, -1306);
      a.quadraticCurveTo(-1810, -1147, -1778, -986);
      a.moveTo(-1400, 404);
      a.lineTo(-1338, 701);
      a.moveTo(-1262, 1557);
      a.quadraticCurveTo(-1273, 1698, -1300, 1834);
      a.moveTo(-1281, 1029);
      a.quadraticCurveTo(-1265, 1153, -1259, 1273);
      a.moveTo(-1457, 2316);
      a.quadraticCurveTo(-1410, 2213, -1373, 2107);
      a.moveTo(1782, 2285);
      a.quadraticCurveTo(1730, 2222, 1688, 2157);
      a.moveTo(1484, 1644);
      a.quadraticCurveTo(1503, 1765, 1546, 1881);
      a.moveTo(1534,
        1012);
      a.lineTo(1508, 1124);
      a.quadraticCurveTo(1484, 1229, 1475, 1330);
      a.moveTo(1665, 437);
      a.lineTo(1603, 712);
      a.moveTo(-1547, -174);
      a.lineTo(-1468, 121);
      a.moveTo(1798, -156);
      a.lineTo(1735, 128)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11314);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2105, -1920);
      a.lineTo(-1945, -2063);
      a.quadraticCurveTo(-1835, -2165, -1712, -2247);
      a.quadraticCurveTo(-1598, -2324, -1473, -2385);
      a.quadraticCurveTo(-775, -2725, 8, -2730);
      a.quadraticCurveTo(765, -2734, 1472, -2456);
      a.quadraticCurveTo(1597, -2407, 1717, -2349);
      a.lineTo(1895, -2258);
      a.quadraticCurveTo(2369, -1999, 2763, -1603);
      a.quadraticCurveTo(3043, -1322, 3399, -1154);
      a.lineTo(3461, -1126);
      a.moveTo(-3226, -1142);
      a.lineTo(-3179, -1168);
      a.quadraticCurveTo(-2607, -1485, -2105, -1920);
      a.moveTo(-3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628,
        2191, -1457, 2316);
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1749, 2657, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.moveTo(-895, 2627);
      a.quadraticCurveTo(-716, 2697, -524, 2739);
      a.quadraticCurveTo(190, 2895, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782,
        2285);
      a.moveTo(-3242, 673);
      a.lineTo(-3224, 679);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(3391, 751, 3509, 704);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(2848, 1083, 2398, 1675);
      a.quadraticCurveTo(2251, 1867, 2090, 2025);
      a.quadraticCurveTo(2234, 2453, 2146, 2897);
      a.lineTo(2109, 2838);
      a.quadraticCurveTo(2051, 2751, 1958, 2726);
      a.quadraticCurveTo(1483, 2595, 1495, 3185);
      a.lineTo(1464, 3159);
      a.quadraticCurveTo(1240, 2920, 1069, 2647);
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48,
        14924, 10721);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.quadraticCurveTo(1866, -1390, 1927, -1547);
      a.quadraticCurveTo(2065, -1909, 1846, -2264);
      a.closePath();
      a.moveTo(-1866, -2414);
      a.quadraticCurveTo(-1988, -2163, -1979, -1755);
      a.quadraticCurveTo(-1973, -1467, -1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.closePath();
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1187, -981, 1265, -981);
      a.quadraticCurveTo(1268, -981, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.quadraticCurveTo(1602, -2564, 1486, -2661);
      a.closePath();
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1591, -2730, -1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1398, -906, -1198, -906);
      a.quadraticCurveTo(-1195, -906, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.lineTo(-1158, -2446);
      a.quadraticCurveTo(-1266, -2592, -1444, -2773);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10721);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(1691, -2467);
      a.lineTo(1617, -2397);
      a.quadraticCurveTo(1036, -1774, 1540, -1045);
      a.quadraticCurveTo(1681, -1119, 1789, -1277);
      a.lineTo(1766, -1339);
      a.quadraticCurveTo(1594, -1821, 1846, -2264);
      a.quadraticCurveTo(1783, -2366, 1691, -2467);
      a.closePath();
      a.moveTo(-1706, -2639);
      a.quadraticCurveTo(-1719, -2639, -1719, -2618);
      a.quadraticCurveTo(-1808, -2534, -1866, -2414);
      a.lineTo(-1839, -2375);
      a.quadraticCurveTo(-1463, -1799, -1881, -1276);
      a.quadraticCurveTo(-1828, -1165, -1546, -963);
      a.quadraticCurveTo(-1083, -1736, -1560, -2461);
      a.quadraticCurveTo(-1620, -2552, -1697, -2637);
      a.quadraticCurveTo(-1702, -2639, -1706, -2639);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10721);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(504, -7675);
      a.quadraticCurveTo(483, -7675, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.lineTo(72, -7173);
      a.quadraticCurveTo(-75, -6552, -84, -5920);
      a.lineTo(0, -5470);
      a.quadraticCurveTo(3, -5138, -4, -4806);
      a.lineTo(-55, -2986);
      a.quadraticCurveTo(-60, -2829, -132, -2714);
      a.quadraticCurveTo(-249, -2531, -379, -2531);
      a.quadraticCurveTo(-522, -2531, -683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.quadraticCurveTo(-1286, -3404, -1395, -3404);
      a.quadraticCurveTo(-1475, -3404, -1555, -3334);
      a.quadraticCurveTo(-1801, -3121, -1548, -2877);
      a.lineTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.quadraticCurveTo(-811, -1894, -769, -1831);
      a.quadraticCurveTo(-380, -1249, -298, -527);
      a.quadraticCurveTo(-189, 432, -50, 1385);
      a.lineTo(-38, 1575);
      a.quadraticCurveTo(14, 2265, -214, 2911);
      a.quadraticCurveTo(-140, 3258, -59, 3411);
      a.quadraticCurveTo(33, 3510, 122, 3510);
      a.quadraticCurveTo(271, 3510, 409, 3232);
      a.quadraticCurveTo(627, 2788, 824, 1738);
      a.quadraticCurveTo(910, 1280, 991, 893);
      a.quadraticCurveTo(1073,
        494, 1151, 169);
      a.lineTo(1190, 6);
      a.quadraticCurveTo(1359, -675, 1540, -1045);
      a.lineTo(1540, -1045);
      a.quadraticCurveTo(1419, -982, 1272, -982);
      a.quadraticCurveTo(1269, -981, 1265, -981);
      a.quadraticCurveTo(1187, -981, 1125, -1322);
      a.quadraticCurveTo(1059, -1678, 1060, -2423);
      a.quadraticCurveTo(1274, -2525, 1486, -2661);
      a.lineTo(1592, -2731);
      a.quadraticCurveTo(1934, -2966, 1778, -3215);
      a.quadraticCurveTo(1683, -3365, 1533, -3365);
      a.quadraticCurveTo(1434, -3365, 1310, -3300);
      a.lineTo(1238, -3260);
      a.quadraticCurveTo(1248, -3864, 882, -4324);
      a.quadraticCurveTo(516, -4785, 384, -5168);
      a.quadraticCurveTo(251, -5551, 317, -6093);
      a.quadraticCurveTo(382, -6636, 557, -7180);
      a.quadraticCurveTo(608, -7337, 621, -7444);
      a.lineTo(621, -7444);
      a.quadraticCurveTo(621, -7444, 621, -7444);
      a.quadraticCurveTo(649, -7675, 504, -7675);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10721);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(110, -7354);
      a.quadraticCurveTo(-40, -7132, -215, -6755);
      a.quadraticCurveTo(-613, -5895, -596, -5022);
      a.quadraticCurveTo(-591, -4787, -614, -4479);
      a.lineTo(-635, -4248);
      a.quadraticCurveTo(-1077, -3768, -1179, -3274);
      a.quadraticCurveTo(-1125, -3208, -1071, -3109);
      a.quadraticCurveTo(-915, -2821, -683, -2750);
      a.quadraticCurveTo(-523, -2531, -379, -2531);
      a.quadraticCurveTo(-248, -2531, -132, -2714);
      a.quadraticCurveTo(-60, -2829, -55, -2986);
      a.lineTo(-4, -4806);
      a.quadraticCurveTo(3, -5138, 0, -5470);
      a.lineTo(-84, -5920);
      a.quadraticCurveTo(-75, -6552, 72, -7173);
      a.lineTo(110, -7354);
      a.closePath();
      a.moveTo(-1077, -2330);
      a.lineTo(-1048, -1864);
      a.quadraticCurveTo(-1025, -1437, -1191, -906);
      a.quadraticCurveTo(-1194, -906, -1198, -906);
      a.quadraticCurveTo(-1398, -906, -1546, -963);
      a.lineTo(-1546, -963);
      a.quadraticCurveTo(-1223, -398, -997, 123);
      a.quadraticCurveTo(-786, 610, -659, 1058);
      a.quadraticCurveTo(-565, 1388, -484, 1706);
      a.quadraticCurveTo(-338, 2281, -233, 2814);
      a.lineTo(-214, 2911);
      a.quadraticCurveTo(14, 2265, -38, 1575);
      a.lineTo(-50, 1385);
      a.quadraticCurveTo(-189, 432, -298, -527);
      a.quadraticCurveTo(-380, -1249, -769, -1831);
      a.quadraticCurveTo(-811, -1894, -875, -1936);
      a.lineTo(-875, -1936);
      a.quadraticCurveTo(-875, -1936, -875, -1936);
      a.quadraticCurveTo(-901, -2012, -930, -2073);
      a.quadraticCurveTo(-993, -2202, -1077, -2330);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10721);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(621, -7444);
      a.quadraticCurveTo(653, -7709, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.moveTo(621, -7444);
      a.quadraticCurveTo(608, -7337, 557, -7180);
      a.quadraticCurveTo(382, -6636, 317, -6093);
      a.quadraticCurveTo(251, -5551, 384, -5168);
      a.quadraticCurveTo(516, -4785, 882, -4324);
      a.quadraticCurveTo(1248, -3864, 1238, -3260);
      a.lineTo(1310, -3300);
      a.quadraticCurveTo(1621, -3464, 1778, -3215);
      a.quadraticCurveTo(1934, -2966, 1592, -2731);
      a.lineTo(1486, -2661);
      a.quadraticCurveTo(1602, -2564, 1691, -2467);
      a.quadraticCurveTo(1783, -2366, 1846, -2264);
      a.quadraticCurveTo(2065, -1909, 1927, -1547);
      a.quadraticCurveTo(1866, -1390, 1789, -1277);
      a.quadraticCurveTo(1681, -1119, 1540, -1045);
      a.quadraticCurveTo(1359, -675, 1190, 6);
      a.lineTo(1151,
        169);
      a.quadraticCurveTo(1073, 494, 991, 893);
      a.quadraticCurveTo(910, 1280, 824, 1738);
      a.quadraticCurveTo(627, 2788, 409, 3232);
      a.quadraticCurveTo(190, 3675, -59, 3411);
      a.quadraticCurveTo(-140, 3258, -214, 2911);
      a.lineTo(-233, 2814);
      a.quadraticCurveTo(-338, 2281, -484, 1706);
      a.quadraticCurveTo(-565, 1388, -659, 1058);
      a.quadraticCurveTo(-786, 610, -997, 123);
      a.quadraticCurveTo(-1223, -398, -1546, -963);
      a.quadraticCurveTo(-1828, -1165, -1881, -1276);
      a.quadraticCurveTo(-1973, -1467, -1979, -1755);
      a.quadraticCurveTo(-1988, -2163, -1866, -2414);
      a.quadraticCurveTo(-1808, -2534, -1719, -2618);
      a.moveTo(-1697, -2637);
      a.quadraticCurveTo(-1591, -2730, -1444, -2773);
      a.lineTo(-1548, -2877);
      a.quadraticCurveTo(-1801, -3121, -1555, -3334);
      a.quadraticCurveTo(-1365, -3500, -1179, -3274);
      a.quadraticCurveTo(-1077, -3768, -635, -4248);
      a.lineTo(-614, -4479);
      a.quadraticCurveTo(-591, -4787, -596, -5022);
      a.quadraticCurveTo(-613, -5895, -215, -6755);
      a.quadraticCurveTo(-40, -7132, 110, -7354);
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1190, -967, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.moveTo(1060, -2423);
      a.lineTo(901, -2353);
      a.quadraticCurveTo(553, -2210, 543, -1729);
      a.moveTo(483, -2694);
      a.quadraticCurveTo(941, -3088, 1238, -3260);
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.moveTo(-683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.moveTo(-421, -2734);
      a.quadraticCurveTo(-562, -2713, -683, -2750);
      a.moveTo(-1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.moveTo(-1719, -2618);
      a.lineTo(-1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1395, -905, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.moveTo(-875, -1936);
      a.quadraticCurveTo(-822, -1782, -783, -1568)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10721);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(436, -7172);
      a.quadraticCurveTo(526, -7323, 621, -7444);
      a.moveTo(-84, -5920);
      a.lineTo(-8, -6155);
      a.moveTo(128, -6531);
      a.quadraticCurveTo(192, -6693, 259, -6837);
      a.moveTo(683, -1206);
      a.lineTo(537, -1172);
      a.lineTo(538, -1065);
      a.quadraticCurveTo(536, -876, 594, -692);
      a.lineTo(683, -723);
      a.moveTo(362, -1145);
      a.lineTo(537, -1172);
      a.lineTo(563, -1508);
      a.moveTo(1151, 169);
      a.lineTo(790, -299);
      a.lineTo(643, -220);
      a.moveTo(594, -692);
      a.lineTo(790, -299);
      a.lineTo(945, -361);
      a.moveTo(482, -663);
      a.lineTo(594, -692);
      a.moveTo(813, 958);
      a.quadraticCurveTo(901, 924, 991, 893);
      a.moveTo(387, 1139);
      a.quadraticCurveTo(512, 1078, 641, 1025);
      a.moveTo(-50, 1385);
      a.quadraticCurveTo(33, 1331, 120, 1281);
      a.lineTo(147, 1266);
      a.moveTo(-302, -5223);
      a.lineTo(-203, -5526);
      a.moveTo(-88, -5905);
      a.lineTo(-84, -5920);
      a.moveTo(-614, -4479);
      a.quadraticCurveTo(-526, -4617, -410, -4920);
      a.moveTo(-764, -1206);
      a.lineTo(-724, -996);
      a.lineTo(-522, -965);
      a.moveTo(-997, 123);
      a.lineTo(-818, -377);
      a.lineTo(-905, -421);
      a.moveTo(-818, -377);
      a.lineTo(-779, -541);
      a.quadraticCurveTo(-726, -763, -724, -996);
      a.lineTo(-864, -1005);
      a.moveTo(-818, -377);
      a.lineTo(-643, -281);
      a.moveTo(-484, 1706);
      a.quadraticCurveTo(-405, 1633, -318, 1569);
      a.moveTo(-75, 1401);
      a.lineTo(-50, 1385)
    }]
  }
}

function make_adult_2(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11189);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-18622, -9197);
      a.quadraticCurveTo(-18807, -9105, -18992, -8984);
      a.quadraticCurveTo(-19178, -8849, -19287, -8557);
      a.quadraticCurveTo(-19282, -8550, -19284, -8542);
      a.lineTo(-19210, -8569);
      a.quadraticCurveTo(-18919, -8668, -18603, -8795);
      a.quadraticCurveTo(-18697, -8934, -18622, -9197);
      a.closePath();
      a.moveTo(-19666, -8727);
      a.quadraticCurveTo(-19810, -8637, -19938, -8542);
      a.quadraticCurveTo(-20538, -8068, -20810, -7618);
      a.quadraticCurveTo(-20769, -7629, -20715, -7655);
      a.lineTo(-20672, -7700);
      a.quadraticCurveTo(-20338, -8056, -19624, -8399);
      a.quadraticCurveTo(-19747, -8507, -19666, -8727);
      a.closePath();
      a.moveTo(-14378, -10215);
      a.quadraticCurveTo(-15218, -10215, -15891, -10077);
      a.quadraticCurveTo(-17940, -9586, -17793, -9415);
      a.quadraticCurveTo(-18112, -9157, -18115, -8963);
      a.quadraticCurveTo(-17519, -9160, -16775, -9297);
      a.quadraticCurveTo(-15704, -9498, -14501, -9498);
      a.quadraticCurveTo(-14252, -9498, -13998, -9489);
      a.quadraticCurveTo(-12455, -9419, -11167, -9165);
      a.quadraticCurveTo(-10721, -9063, -10358, -8896);
      a.quadraticCurveTo(-9495, -8485, -8859, -8050);
      a.quadraticCurveTo(-7902, -7582, -7233, -6741);
      a.quadraticCurveTo(-6800, -6202, -6539, -5410);
      a.quadraticCurveTo(-6218, -4430, -5980, -3241);
      a.quadraticCurveTo(-5887, -2804, -5709, -2490);
      a.quadraticCurveTo(-5397, -2582, -5101, -2646);
      a.quadraticCurveTo(-4660, -2727, -4226, -2727);
      a.quadraticCurveTo(-3878, -2727, -3535, -2675);
      a.quadraticCurveTo(-2764, -2552, -1969, -2221);
      a.quadraticCurveTo(-2792, -2895, -3531, -3729);
      a.quadraticCurveTo(-4216, -4490, -4856, -5258);
      a.quadraticCurveTo(-5530, -6068, -6176, -6805);
      a.quadraticCurveTo(-6764, -7467, -7440, -7929);
      a.lineTo(-7609, -8040);
      a.lineTo(-7609, -8040);
      a.quadraticCurveTo(-7609, -8040, -7609, -8040);
      a.quadraticCurveTo(-8353, -8508, -8801, -8739);
      a.lineTo(-8815, -8747);
      a.lineTo(-9001, -8851);
      a.quadraticCurveTo(-9453, -9109, -9560, -9167);
      a.quadraticCurveTo(-11256, -9945, -12995, -10134);
      a.quadraticCurveTo(-13736, -10215, -14378, -10215);
      a.closePath();
      a.moveTo(-13653, -7859);
      a.quadraticCurveTo(-13292, -7328, -12659, -7040);
      a.quadraticCurveTo(-11251, -6399, -10303, -5506);
      a.quadraticCurveTo(-9751, -5003, -9183, -4623);
      a.quadraticCurveTo(-9058, -4472, -8940, -4316);
      a.lineTo(-8761, -4083);
      a.quadraticCurveTo(-8376, -3639, -8058, -3047);
      a.lineTo(-7977, -2900);
      a.lineTo(-7930, -2819);
      a.quadraticCurveTo(-7510, -2405, -7273, -1691);
      a.lineTo(-7244, -1606);
      a.lineTo(-7201, -1528);
      a.quadraticCurveTo(-7026, -1203, -6870, -893);
      a.quadraticCurveTo(-6849, -889, -6835, -877);
      a.quadraticCurveTo(-6605, -712, -6418, -443);
      a.lineTo(-5783, -465);
      a.quadraticCurveTo(-5732, -409, -5688, -372);
      a.lineTo(-5454, -356);
      a.quadraticCurveTo(-5288, -331, -5222, -331);
      a.quadraticCurveTo(-5187, -331, -5181, -338);
      a.quadraticCurveTo(-5159, -355, -5144, -371);
      a.lineTo(-5101, -416);
      a.quadraticCurveTo(-4777, -378, -4469, -303);
      a.quadraticCurveTo(-4401, -270, -4337, -233);
      a.quadraticCurveTo(-4280, -209, -4231, -177);
      a.quadraticCurveTo(-4116, -114, -4015, -114);
      a.quadraticCurveTo(-3981, -114, -3949, -121);
      a.quadraticCurveTo(-3922, -128, -3895, -143);
      a.quadraticCurveTo(-3881, -130, -3870, -130);
      a.quadraticCurveTo(-3865, -130, -3860, -133);
      a.quadraticCurveTo(-3555, -34, -3261, 85);
      a.quadraticCurveTo(-3110, 141, -2963, 209);
      a.quadraticCurveTo(-3726, -552, -4551, -796);
      a.quadraticCurveTo(-4905, -899, -5259, -899);
      a.quadraticCurveTo(-5682, -899, -6103, -752);
      a.quadraticCurveTo(-6293, -1226, -6503, -1659);
      a.lineTo(-6618, -1902);
      a.lineTo(-6618, -1902);
      a.quadraticCurveTo(-6618, -1902, -6618, -1902);
      a.lineTo(-6623, -1934);
      a.quadraticCurveTo(-6630, -1992, -6644, -2053);
      a.lineTo(-6700, -2368);
      a.quadraticCurveTo(-6736, -2583, -6788, -2813);
      a.quadraticCurveTo(-6877, -3266, -6985, -3710);
      a.quadraticCurveTo(-7100, -4023, -7166, -4376);
      a.lineTo(-7179, -4462);
      a.lineTo(-7262, -4744);
      a.lineTo(-7281, -4808);
      a.quadraticCurveTo(-7347, -5151, -7488, -5429);
      a.lineTo(-7523, -5498);
      a.lineTo(-7533, -5525);
      a.lineTo(-7557, -5587);
      a.lineTo(-7675, -5872);
      a.quadraticCurveTo(-7747, -6040, -7830, -6208);
      a.lineTo(-7907, -6365);
      a.quadraticCurveTo(-8033, -6519, -8183, -6633);
      a.lineTo(-8335, -6745);
      a.lineTo(-8335, -6745);
      a.quadraticCurveTo(-7807, -5698, -7642, -4182);
      a.quadraticCurveTo(-7615, -3958, -7599, -3733);
      a.quadraticCurveTo(-8264, -5160, -9212, -5926);
      a.quadraticCurveTo(-10156, -6715, -11620, -7363);
      a.quadraticCurveTo(-12551, -7747, -13653, -7859);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11189);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-18622, -9197);
      a.quadraticCurveTo(-18697, -8934, -18603, -8795);
      a.quadraticCurveTo(-18919, -8668, -19210, -8569);
      a.lineTo(-19284, -8542);
      a.quadraticCurveTo(-19282, -8550, -19287, -8557);
      a.quadraticCurveTo(-19178, -8849, -18992, -8984);
      a.quadraticCurveTo(-18807, -9105, -18622, -9197);
      a.closePath();
      a.moveTo(-14378, -10215);
      a.quadraticCurveTo(-13735, -10215, -12995, -10134);
      a.quadraticCurveTo(-11256, -9945, -9560, -9167);
      a.quadraticCurveTo(-9453, -9109, -9001, -8851);
      a.lineTo(-8815, -8747);
      a.lineTo(-8801, -8739);
      a.quadraticCurveTo(-8353, -8508, -7609, -8040);
      a.lineTo(-7440, -7929);
      a.quadraticCurveTo(-6764, -7467, -6176, -6805);
      a.quadraticCurveTo(-5530, -6068, -4856, -5258);
      a.quadraticCurveTo(-4216, -4490, -3531, -3729);
      a.quadraticCurveTo(-2792, -2895, -1969, -2221);
      a.quadraticCurveTo(-2764, -2552, -3535, -2675);
      a.quadraticCurveTo(-3879, -2727, -4226, -2727);
      a.quadraticCurveTo(-4660, -2727, -5101, -2646);
      a.quadraticCurveTo(-5397, -2582, -5709, -2490);
      a.quadraticCurveTo(-5887, -2804, -5980, -3241);
      a.quadraticCurveTo(-6218, -4430, -6539, -5410);
      a.quadraticCurveTo(-6800, -6202, -7233, -6741);
      a.quadraticCurveTo(-7902, -7582, -8859, -8050);
      a.quadraticCurveTo(-9495, -8485, -10358, -8896);
      a.quadraticCurveTo(-10721, -9063, -11167, -9165);
      a.quadraticCurveTo(-12455, -9419, -13998, -9489);
      a.quadraticCurveTo(-14252, -9498, -14501, -9498);
      a.quadraticCurveTo(-15704, -9498, -16775, -9297);
      a.quadraticCurveTo(-17519, -9160, -18115, -8963);
      a.quadraticCurveTo(-18112, -9157, -17793, -9415);
      a.quadraticCurveTo(-17940, -9586, -15891, -10077);
      a.quadraticCurveTo(-15218, -10215, -14378, -10215);
      a.closePath();
      a.moveTo(-392, -1715);
      a.quadraticCurveTo(-394, -1715, -397, -1715);
      a.quadraticCurveTo(-434, -1709, -401, -1652);
      a.quadraticCurveTo(-364, -1715, -392, -1715);
      a.closePath();
      a.moveTo(-13652, -7860);
      a.quadraticCurveTo(-12550, -7748, -11619, -7364);
      a.quadraticCurveTo(-10155, -6716, -9211, -5927);
      a.quadraticCurveTo(-8263, -5161, -7598, -3734);
      a.quadraticCurveTo(-7614, -3959, -7641, -4183);
      a.quadraticCurveTo(-7806, -5699, -8334, -6746);
      a.lineTo(-8334, -6746);
      a.lineTo(-8182, -6634);
      a.quadraticCurveTo(-8032, -6520, -7906, -6366);
      a.lineTo(-7829, -6209);
      a.quadraticCurveTo(-7746, -6041, -7674, -5873);
      a.lineTo(-7556, -5588);
      a.lineTo(-7532, -5526);
      a.lineTo(-7522, -5499);
      a.lineTo(-7487, -5430);
      a.quadraticCurveTo(-7346, -5152, -7280, -4809);
      a.lineTo(-7261, -4745);
      a.lineTo(-7178, -4463);
      a.lineTo(-7165, -4377);
      a.quadraticCurveTo(-7099, -4024, -6984, -3711);
      a.quadraticCurveTo(-6876, -3267, -6787, -2814);
      a.quadraticCurveTo(-6735, -2584, -6699, -2369);
      a.lineTo(-6643, -2054);
      a.quadraticCurveTo(-6629, -1993, -6622, -1935);
      a.lineTo(-6617, -1903);
      a.lineTo(-6502, -1660);
      a.quadraticCurveTo(-6292, -1227, -6102, -753);
      a.quadraticCurveTo(-5681, -900, -5258, -900);
      a.quadraticCurveTo(-4904, -900, -4550, -797);
      a.quadraticCurveTo(-3725, -553, -2962, 208);
      a.quadraticCurveTo(-3109, 140, -3260, 84);
      a.quadraticCurveTo(-3554, -35, -3859, -134);
      a.quadraticCurveTo(-3863, -131, -3869, -131);
      a.quadraticCurveTo(-3880, -131, -3894, -144);
      a.quadraticCurveTo(-3921, -129, -3948, -122);
      a.quadraticCurveTo(-3980, -115, -4014, -115);
      a.quadraticCurveTo(-4115, -115, -4230, -178);
      a.quadraticCurveTo(-4279, -210, -4336, -234);
      a.quadraticCurveTo(-4400, -271, -4468, -304);
      a.quadraticCurveTo(-4776, -379, -5100, -417);
      a.lineTo(-5143, -372);
      a.quadraticCurveTo(-5158, -356, -5180, -339);
      a.quadraticCurveTo(-5186, -332, -5221, -332);
      a.quadraticCurveTo(-5286, -332, -5453, -357);
      a.lineTo(-5687, -373);
      a.quadraticCurveTo(-5731, -410, -5782, -466);
      a.lineTo(-6417, -444);
      a.quadraticCurveTo(-6604, -713, -6834, -878);
      a.quadraticCurveTo(-6848, -890, -6869, -894);
      a.lineTo(-6869, -894);
      a.lineTo(-6869, -894);
      a.quadraticCurveTo(-7025, -1204, -7200, -1529);
      a.lineTo(-7243, -1607);
      a.lineTo(-7272, -1692);
      a.quadraticCurveTo(-7509, -2406, -7929, -2820);
      a.lineTo(-7976, -2901);
      a.lineTo(-8057, -3048);
      a.quadraticCurveTo(-8375, -3640, -8760, -4084);
      a.lineTo(-8939, -4317);
      a.quadraticCurveTo(-9057, -4473, -9182, -4624);
      a.quadraticCurveTo(-9750, -5004, -10302, -5507);
      a.quadraticCurveTo(-11250, -6400, -12658, -7041);
      a.quadraticCurveTo(-13291, -7329, -13652, -7860);
      a.closePath();
      a.moveTo(-13796, -11016);
      a.quadraticCurveTo(-13869, -11016, -13943, -11015);
      a.quadraticCurveTo(-16702, -10809, -17817, -10122);
      a.quadraticCurveTo(-18882, -9522, -19195, -9317);
      a.quadraticCurveTo(-20908, -7882, -20809, -7619);
      a.quadraticCurveTo(-20537, -8069, -19937, -8543);
      a.quadraticCurveTo(-19809, -8638, -19665, -8728);
      a.lineTo(-19665, -8728);
      a.quadraticCurveTo(-19746, -8508, -19623, -8400);
      a.quadraticCurveTo(-20337, -8057, -20671, -7701);
      a.lineTo(-20714, -7656);
      a.quadraticCurveTo(-20564, -7739, -20225, -7878);
      a.quadraticCurveTo(-19491, -8179, -18092, -8232);
      a.quadraticCurveTo(-17882, -8257, -17651, -8257);
      a.quadraticCurveTo(-16246, -8257, -14072, -7321);
      a.quadraticCurveTo(-11735, -5966, -10329, -4626);
      a.quadraticCurveTo(-8416, -3045, -7634, -1448);
      a.quadraticCurveTo(-7451, -1114, -7160, -483);
      a.quadraticCurveTo(-6926, -5, -6724, 241);
      a.quadraticCurveTo(-6614, 220, -6171, 94);
      a.quadraticCurveTo(-5814, 0, -5549, -20);
      a.quadraticCurveTo(-5467, -26, -5382, -26);
      a.quadraticCurveTo(-4631, -26, -3686, 410);
      a.quadraticCurveTo(-3339,
        559, -3E3, 735);
      a.quadraticCurveTo(-2285, 1095, -1546, 1479);
      a.quadraticCurveTo(-990, 1749, -642, 1911);
      a.lineTo(-341, 1303);
      a.quadraticCurveTo(-138, 884, -59, 468);
      a.quadraticCurveTo(53, -102, -77, -669);
      a.quadraticCurveTo(-242, -1380, -401, -1652);
      a.lineTo(-2565, -3393);
      a.quadraticCurveTo(-4522, -5142, -6207, -7346);
      a.lineTo(-6353, -7519);
      a.lineTo(-6424, -7547);
      a.quadraticCurveTo(-6500, -7576, -6532, -7596);
      a.quadraticCurveTo(-6750, -7725, -6983, -7973);
      a.quadraticCurveTo(-7912, -9010, -9429, -9915);
      a.quadraticCurveTo(-11043, -11016, -13796, -11016);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11189);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-11167, -9165);
      a.lineTo(-11052, -9117);
      a.moveTo(-10178, -8677);
      a.quadraticCurveTo(-10406, -8812, -10662, -8938);
      a.moveTo(-11167, -9165);
      a.lineTo(-11491, -9290);
      a.moveTo(-9476, -8275);
      a.lineTo(-9537, -8247);
      a.lineTo(-9489, -8211);
      a.lineTo(-9267, -8034);
      a.moveTo(-9537, -8247);
      a.lineTo(-9578, -8226);
      a.lineTo(-9602, -8206);
      a.moveTo(-8801, -8739);
      a.lineTo(-8815, -8747);
      a.moveTo(-1969, -2221);
      a.lineTo(-1961, -2218);
      a.lineTo(-1883, -2182);
      a.moveTo(-1835, -2158);
      a.quadraticCurveTo(-1725, -2106, -1634, -2074);
      a.moveTo(-7943, -8280);
      a.quadraticCurveTo(-8366, -8560, -8801, -8739);
      a.moveTo(-9537, -8247);
      a.lineTo(-9855, -8474);
      a.moveTo(-7752, -6245);
      a.quadraticCurveTo(-7789, -6221, -7830, -6208);
      a.quadraticCurveTo(-7747, -6040, -7675, -5872);
      a.quadraticCurveTo(-7616, -5890, -7564, -5920);
      a.moveTo(-7907, -6365);
      a.lineTo(-8029, -6584);
      a.moveTo(-7830, -6208);
      a.quadraticCurveTo(-7847, -6195, -7871, -6193);
      a.quadraticCurveTo(-7885, -6185, -7902, -6184);
      a.moveTo(-7830, -6208);
      a.lineTo(-7907, -6365);
      a.moveTo(-9183, -4623);
      a.lineTo(-9356, -4821);
      a.quadraticCurveTo(-9581, -5067, -9838, -5316);
      a.moveTo(-8471, -7448);
      a.quadraticCurveTo(-8540, -7419, -8588, -7378);
      a.quadraticCurveTo(-8433, -7191, -8286, -6991);
      a.moveTo(-8588, -7378);
      a.lineTo(-8589, -7378);
      a.quadraticCurveTo(-8619, -7344, -8648, -7322);
      a.moveTo(-8588, -7378);
      a.quadraticCurveTo(-8765, -7582, -8965, -7769);
      a.moveTo(-8761, -4083);
      a.lineTo(-8940, -4316);
      a.moveTo(-7523, -5498);
      a.lineTo(-7533, -5525);
      a.lineTo(-7557, -5587);
      a.lineTo(-7675, -5872);
      a.quadraticCurveTo(-7703, -5860, -7735, -5856);
      a.lineTo(-7795, -5853);
      a.moveTo(-7262, -4744);
      a.lineTo(-7281, -4808);
      a.lineTo(-7355, -5035);
      a.moveTo(-7262, -4744);
      a.quadraticCurveTo(-7271, -4736, -7288, -4732);
      a.quadraticCurveTo(-7292, -4724, -7307, -4719);
      a.moveTo(-6985, -3710);
      a.quadraticCurveTo(-7015, -3849, -7053, -3995);
      a.moveTo(-7262, -4744);
      a.lineTo(-7179, -4462);
      a.moveTo(-7184, -4775);
      a.lineTo(-7262, -4744);
      a.moveTo(-11211, -6462);
      a.quadraticCurveTo(-11550, -6703, -11960, -6951);
      a.moveTo(-10128, -5589);
      a.quadraticCurveTo(-10457, -5890, -10870, -6210);
      a.moveTo(-7666, -2370);
      a.quadraticCurveTo(-7790, -2593, -7930, -2819);
      a.moveTo(-7977, -2900);
      a.lineTo(-8171, -3213);
      a.moveTo(-6700, -2368);
      a.quadraticCurveTo(-6736, -2583, -6788, -2813);
      a.quadraticCurveTo(-6877, -3266, -6985, -3710);
      a.moveTo(-6644, -2053);
      a.lineTo(-6584, -2021);
      a.moveTo(-6700, -2368);
      a.lineTo(-6644, -2053);
      a.lineTo(-6734, -2094);
      a.lineTo(-6751, -2089);
      a.moveTo(-6604, -2318);
      a.quadraticCurveTo(-6650, -2347, -6700, -2368);
      a.lineTo(-6770, -2390);
      a.lineTo(-6797, -2401);
      a.moveTo(-6618, -1902);
      a.lineTo(-6623, -1934);
      a.quadraticCurveTo(-6630, -1992, -6644, -2053);
      a.moveTo(-6618, -1902);
      a.quadraticCurveTo(-6591, -1754, -6571, -1617);
      a.moveTo(-7201, -1528);
      a.quadraticCurveTo(-7026, -1203, -6870, -893);
      a.moveTo(-6418, -443);
      a.lineTo(-5783, -465);
      a.lineTo(-5702, -463);
      a.moveTo(-6870, -893);
      a.lineTo(-6774, -705);
      a.moveTo(-7244, -1606);
      a.quadraticCurveTo(-7305, -1727, -7377, -1852);
      a.moveTo(-8378, -3531);
      a.quadraticCurveTo(-8558, -3813, -8761, -4083);
      a.moveTo(-6003, -6295);
      a.lineTo(-6219, -6600);
      a.quadraticCurveTo(-6401, -6849, -6603, -7081);
      a.moveTo(-5518, -5763);
      a.quadraticCurveTo(-5187, -5334, -4887, -4937);
      a.moveTo(-6418, -443);
      a.lineTo(-6475, -437);
      a.moveTo(-5101, -416);
      a.lineTo(-5274, -436);
      a.moveTo(-4345, -272);
      a.lineTo(-4469, -303);
      a.moveTo(-3860, -133);
      a.lineTo(-3991, -174);
      a.moveTo(-4469, -303);
      a.quadraticCurveTo(-4777, -378, -5101, -416);
      a.moveTo(-2389, -2479);
      a.quadraticCurveTo(-2163, -2330, -1969, -2221);
      a.moveTo(-3493, -3322);
      a.quadraticCurveTo(-3294, -3133, -3106, -2988);
      a.lineTo(-2847, -2795);
      a.moveTo(-4614, -4589);
      a.quadraticCurveTo(-4198, -4059, -3825, -3656);
      a.moveTo(-6971, -7478);
      a.quadraticCurveTo(-7286, -7795, -7609, -8040);
      a.moveTo(-2963, 209);
      a.quadraticCurveTo(-3110, 141, -3261, 85);
      a.quadraticCurveTo(-3555, -34, -3860, -133);
      a.moveTo(-16582, -8400);
      a.lineTo(-17177, -8431);
      a.moveTo(-15382, -8238);
      a.quadraticCurveTo(-15771, -8310, -16168, -8358);
      a.moveTo(-13685, -9848);
      a.quadraticCurveTo(-14138, -9922, -14619, -9967);
      a.moveTo(-13891, -7847);
      a.quadraticCurveTo(-14364, -8007, -14880, -8131);
      a.moveTo(-11990, -9458);
      a.quadraticCurveTo(-12542, -9627, -13170, -9755);
      a.moveTo(-12453, -7228);
      a.quadraticCurveTo(-12868, -7444, -13343, -7644)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11189);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-18115, -8963);
      a.quadraticCurveTo(-18114, -8700, -17557, -8412);
      a.quadraticCurveTo(-17718, -8427, -17862, -8461);
      a.quadraticCurveTo(-18449, -8578, -18603, -8795);
      a.moveTo(-19284, -8542);
      a.quadraticCurveTo(-19228, -8370, -19132, -8346);
      a.quadraticCurveTo(-19029, -8321, -18949, -8279);
      a.quadraticCurveTo(-19265, -8244, -19445, -8304);
      a.quadraticCurveTo(-19561, -8342, -19624, -8399);
      a.moveTo(-20715, -7655);
      a.quadraticCurveTo(-20565, -7738, -20226, -7877);
      a.quadraticCurveTo(-19492, -8178, -18093, -8231);
      a.quadraticCurveTo(-16605, -8410, -14073, -7320);
      a.quadraticCurveTo(-11736, -5965, -10330, -4625);
      a.quadraticCurveTo(-8417, -3044, -7635, -1447);
      a.quadraticCurveTo(-7452, -1113, -7161, -482);
      a.quadraticCurveTo(-6927, -4, -6725, 242);
      a.quadraticCurveTo(-6615, 221, -6172, 95);
      a.quadraticCurveTo(-5815, 0, -5550, -19);
      a.quadraticCurveTo(-4739, -74, -3687, 411);
      a.quadraticCurveTo(-3340, 560, -3001, 736);
      a.quadraticCurveTo(-2286, 1096, -1547, 1480);
      a.quadraticCurveTo(-991, 1750, -643, 1912);
      a.lineTo(-342, 1304);
      a.quadraticCurveTo(-139, 885, -60, 469);
      a.quadraticCurveTo(52, -101, -78, -668);
      a.quadraticCurveTo(-243, -1379, -402, -1651);
      a.lineTo(-2566, -3392);
      a.quadraticCurveTo(-4523, -5141, -6208, -7345);
      a.lineTo(-6354, -7518);
      a.lineTo(-6425, -7546);
      a.quadraticCurveTo(-6501, -7575, -6533, -7595);
      a.quadraticCurveTo(-6751, -7724, -6984, -7972);
      a.quadraticCurveTo(-7913, -9009, -9430, -9914);
      a.quadraticCurveTo(-11087, -11044, -13944, -11014);
      a.quadraticCurveTo(-16703, -10808, -17818, -10121);
      a.quadraticCurveTo(-18883, -9521, -19196, -9316);
      a.quadraticCurveTo(-19583, -8964, -19666, -8727);
      a.quadraticCurveTo(-19747, -8507, -19624, -8399);
      a.moveTo(-9560, -9167);
      a.quadraticCurveTo(-11256, -9945, -12995, -10134);
      a.quadraticCurveTo(-14703, -10320, -15891, -10077);
      a.quadraticCurveTo(-17940, -9586, -17793, -9415);
      a.quadraticCurveTo(-18112, -9157, -18115, -8963);
      a.moveTo(-402, -1651);
      a.quadraticCurveTo(-362, -1720, -398, -1714);
      a.quadraticCurveTo(-435, -1708, -402, -1651);
      a.closePath();
      a.moveTo(-19284, -8542);
      a.quadraticCurveTo(-19282, -8550, -19287, -8557);
      a.quadraticCurveTo(-19178, -8849, -18992, -8984);
      a.quadraticCurveTo(-18807, -9105, -18622, -9197);
      a.quadraticCurveTo(-18697, -8934, -18603, -8795);
      a.moveTo(-20715, -7655);
      a.quadraticCurveTo(-20769, -7629, -20810, -7618);
      a.quadraticCurveTo(-20909, -7881, -19196, -9316)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11189);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-1883, -2182);
      a.quadraticCurveTo(-1859, -2166, -1835, -2158)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11189);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-18622, -9197);
      a.quadraticCurveTo(-18807, -9105, -18992, -8984);
      a.quadraticCurveTo(-19178, -8849, -19287, -8557);
      a.quadraticCurveTo(-19282, -8550, -19284, -8542);
      a.lineTo(-19210, -8569);
      a.quadraticCurveTo(-18919, -8668, -18603, -8795);
      a.quadraticCurveTo(-18697, -8934, -18622, -9197);
      a.closePath();
      a.moveTo(-19666, -8727);
      a.quadraticCurveTo(-19810, -8637, -19938, -8542);
      a.quadraticCurveTo(-20538, -8068, -20810, -7618);
      a.quadraticCurveTo(-20769, -7629, -20715, -7655);
      a.lineTo(-20672, -7700);
      a.quadraticCurveTo(-20338, -8056, -19624, -8399);
      a.quadraticCurveTo(-19747, -8507, -19666, -8727);
      a.closePath();
      a.moveTo(-14378, -10215);
      a.quadraticCurveTo(-15218, -10215, -15891, -10077);
      a.quadraticCurveTo(-17940, -9586, -17793, -9415);
      a.quadraticCurveTo(-18112, -9157, -18115, -8963);
      a.quadraticCurveTo(-17519, -9160, -16775, -9297);
      a.quadraticCurveTo(-15704, -9498, -14501, -9498);
      a.quadraticCurveTo(-14252, -9498, -13998, -9489);
      a.quadraticCurveTo(-12455, -9419, -11167, -9165);
      a.quadraticCurveTo(-10721, -9063, -10358, -8896);
      a.quadraticCurveTo(-9495, -8485, -8859, -8050);
      a.quadraticCurveTo(-7902, -7582, -7233, -6741);
      a.quadraticCurveTo(-6800, -6202, -6539, -5410);
      a.quadraticCurveTo(-6218, -4430, -5980, -3241);
      a.quadraticCurveTo(-5887, -2804, -5709, -2490);
      a.quadraticCurveTo(-5397, -2582, -5101, -2646);
      a.quadraticCurveTo(-4660, -2727, -4226, -2727);
      a.quadraticCurveTo(-3878, -2727, -3535, -2675);
      a.quadraticCurveTo(-2764, -2552, -1969, -2221);
      a.quadraticCurveTo(-2792, -2895, -3531, -3729);
      a.quadraticCurveTo(-4216, -4490, -4856, -5258);
      a.quadraticCurveTo(-5530, -6068, -6176, -6805);
      a.quadraticCurveTo(-6764, -7467, -7440, -7929);
      a.lineTo(-7609, -8040);
      a.lineTo(-7609, -8040);
      a.quadraticCurveTo(-7609, -8040, -7609, -8040);
      a.quadraticCurveTo(-8353, -8508, -8801, -8739);
      a.lineTo(-8815, -8747);
      a.lineTo(-9001, -8851);
      a.quadraticCurveTo(-9453, -9109, -9560, -9167);
      a.quadraticCurveTo(-11256, -9945, -12995, -10134);
      a.quadraticCurveTo(-13736, -10215, -14378, -10215);
      a.closePath();
      a.moveTo(-13653, -7859);
      a.quadraticCurveTo(-13292, -7328, -12659, -7040);
      a.quadraticCurveTo(-11251, -6399, -10303, -5506);
      a.quadraticCurveTo(-9751, -5003, -9183, -4623);
      a.quadraticCurveTo(-9058, -4472, -8940, -4316);
      a.lineTo(-8761, -4083);
      a.quadraticCurveTo(-8376, -3639, -8058, -3047);
      a.lineTo(-7977, -2900);
      a.lineTo(-7930, -2819);
      a.quadraticCurveTo(-7510, -2405, -7273, -1691);
      a.lineTo(-7244, -1606);
      a.lineTo(-7201, -1528);
      a.quadraticCurveTo(-7026, -1203, -6870, -893);
      a.quadraticCurveTo(-6849, -889, -6835, -877);
      a.quadraticCurveTo(-6605, -712, -6418, -443);
      a.lineTo(-5783, -465);
      a.quadraticCurveTo(-5732, -409, -5688, -372);
      a.lineTo(-5454, -356);
      a.quadraticCurveTo(-5288, -331, -5222, -331);
      a.quadraticCurveTo(-5187, -331, -5181, -338);
      a.quadraticCurveTo(-5159, -355, -5144, -371);
      a.lineTo(-5101, -416);
      a.quadraticCurveTo(-4777, -378, -4469, -303);
      a.quadraticCurveTo(-4401, -270, -4337, -233);
      a.quadraticCurveTo(-4280, -209, -4231, -177);
      a.quadraticCurveTo(-4116, -114, -4015, -114);
      a.quadraticCurveTo(-3981, -114, -3949, -121);
      a.quadraticCurveTo(-3922, -128, -3895, -143);
      a.quadraticCurveTo(-3881, -130, -3870, -130);
      a.quadraticCurveTo(-3865, -130, -3860, -133);
      a.quadraticCurveTo(-3555, -34, -3261, 85);
      a.quadraticCurveTo(-3110, 141, -2963, 209);
      a.quadraticCurveTo(-3726, -552, -4551, -796);
      a.quadraticCurveTo(-4905, -899, -5259, -899);
      a.quadraticCurveTo(-5682, -899, -6103, -752);
      a.quadraticCurveTo(-6293, -1226, -6503, -1659);
      a.lineTo(-6618, -1902);
      a.lineTo(-6618, -1902);
      a.quadraticCurveTo(-6618, -1902, -6618, -1902);
      a.lineTo(-6623, -1934);
      a.quadraticCurveTo(-6630, -1992, -6644, -2053);
      a.lineTo(-6700, -2368);
      a.quadraticCurveTo(-6736, -2583, -6788, -2813);
      a.quadraticCurveTo(-6877, -3266, -6985, -3710);
      a.quadraticCurveTo(-7100, -4023, -7166, -4376);
      a.lineTo(-7179, -4462);
      a.lineTo(-7262, -4744);
      a.lineTo(-7281, -4808);
      a.quadraticCurveTo(-7347, -5151, -7488, -5429);
      a.lineTo(-7523, -5498);
      a.lineTo(-7533, -5525);
      a.lineTo(-7557, -5587);
      a.lineTo(-7675, -5872);
      a.quadraticCurveTo(-7747, -6040, -7830, -6208);
      a.lineTo(-7907, -6365);
      a.quadraticCurveTo(-8033, -6519, -8183, -6633);
      a.lineTo(-8335, -6745);
      a.lineTo(-8335, -6745);
      a.quadraticCurveTo(-7807, -5698, -7642, -4182);
      a.quadraticCurveTo(-7615, -3958, -7599, -3733);
      a.quadraticCurveTo(-8264, -5160, -9212, -5926);
      a.quadraticCurveTo(-10156, -6715, -11620, -7363);
      a.quadraticCurveTo(-12551, -7747, -13653, -7859);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11189);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-18622, -9197);
      a.quadraticCurveTo(-18697, -8934, -18603, -8795);
      a.quadraticCurveTo(-18919, -8668, -19210, -8569);
      a.lineTo(-19284, -8542);
      a.quadraticCurveTo(-19282, -8550, -19287, -8557);
      a.quadraticCurveTo(-19178, -8849, -18992, -8984);
      a.quadraticCurveTo(-18807, -9105, -18622, -9197);
      a.closePath();
      a.moveTo(-14378, -10215);
      a.quadraticCurveTo(-13735, -10215, -12995, -10134);
      a.quadraticCurveTo(-11256, -9945, -9560, -9167);
      a.quadraticCurveTo(-9453, -9109, -9001, -8851);
      a.lineTo(-8815, -8747);
      a.lineTo(-8801, -8739);
      a.quadraticCurveTo(-8353, -8508, -7609, -8040);
      a.lineTo(-7440, -7929);
      a.quadraticCurveTo(-6764, -7467, -6176, -6805);
      a.quadraticCurveTo(-5530, -6068, -4856, -5258);
      a.quadraticCurveTo(-4216, -4490, -3531, -3729);
      a.quadraticCurveTo(-2792, -2895, -1969, -2221);
      a.quadraticCurveTo(-2764, -2552, -3535, -2675);
      a.quadraticCurveTo(-3879, -2727, -4226, -2727);
      a.quadraticCurveTo(-4660, -2727, -5101, -2646);
      a.quadraticCurveTo(-5397, -2582, -5709, -2490);
      a.quadraticCurveTo(-5887, -2804, -5980, -3241);
      a.quadraticCurveTo(-6218, -4430, -6539, -5410);
      a.quadraticCurveTo(-6800, -6202, -7233, -6741);
      a.quadraticCurveTo(-7902, -7582, -8859, -8050);
      a.quadraticCurveTo(-9495, -8485, -10358, -8896);
      a.quadraticCurveTo(-10721, -9063, -11167, -9165);
      a.quadraticCurveTo(-12455, -9419, -13998, -9489);
      a.quadraticCurveTo(-14252, -9498, -14501, -9498);
      a.quadraticCurveTo(-15704, -9498, -16775, -9297);
      a.quadraticCurveTo(-17519, -9160, -18115, -8963);
      a.quadraticCurveTo(-18112, -9157, -17793, -9415);
      a.quadraticCurveTo(-17940, -9586, -15891, -10077);
      a.quadraticCurveTo(-15218, -10215, -14378, -10215);
      a.closePath();
      a.moveTo(-392, -1715);
      a.quadraticCurveTo(-394, -1715, -397, -1715);
      a.quadraticCurveTo(-434, -1709, -401, -1652);
      a.quadraticCurveTo(-364, -1715, -392, -1715);
      a.closePath();
      a.moveTo(-13652, -7860);
      a.quadraticCurveTo(-12550, -7748, -11619, -7364);
      a.quadraticCurveTo(-10155, -6716, -9211, -5927);
      a.quadraticCurveTo(-8263, -5161, -7598, -3734);
      a.quadraticCurveTo(-7614, -3959, -7641, -4183);
      a.quadraticCurveTo(-7806, -5699, -8334, -6746);
      a.lineTo(-8334, -6746);
      a.lineTo(-8182, -6634);
      a.quadraticCurveTo(-8032, -6520, -7906, -6366);
      a.lineTo(-7829, -6209);
      a.quadraticCurveTo(-7746, -6041, -7674, -5873);
      a.lineTo(-7556, -5588);
      a.lineTo(-7532, -5526);
      a.lineTo(-7522, -5499);
      a.lineTo(-7487, -5430);
      a.quadraticCurveTo(-7346, -5152, -7280, -4809);
      a.lineTo(-7261, -4745);
      a.lineTo(-7178, -4463);
      a.lineTo(-7165, -4377);
      a.quadraticCurveTo(-7099, -4024, -6984, -3711);
      a.quadraticCurveTo(-6876, -3267, -6787, -2814);
      a.quadraticCurveTo(-6735, -2584, -6699, -2369);
      a.lineTo(-6643, -2054);
      a.quadraticCurveTo(-6629, -1993, -6622, -1935);
      a.lineTo(-6617, -1903);
      a.lineTo(-6502, -1660);
      a.quadraticCurveTo(-6292, -1227, -6102, -753);
      a.quadraticCurveTo(-5681, -900, -5258, -900);
      a.quadraticCurveTo(-4904, -900, -4550, -797);
      a.quadraticCurveTo(-3725, -553, -2962, 208);
      a.quadraticCurveTo(-3109, 140, -3260, 84);
      a.quadraticCurveTo(-3554, -35, -3859, -134);
      a.quadraticCurveTo(-3863, -131, -3869, -131);
      a.quadraticCurveTo(-3880, -131, -3894, -144);
      a.quadraticCurveTo(-3921, -129, -3948, -122);
      a.quadraticCurveTo(-3980, -115, -4014, -115);
      a.quadraticCurveTo(-4115, -115, -4230, -178);
      a.quadraticCurveTo(-4279, -210, -4336, -234);
      a.quadraticCurveTo(-4400, -271, -4468, -304);
      a.quadraticCurveTo(-4776, -379, -5100, -417);
      a.lineTo(-5143, -372);
      a.quadraticCurveTo(-5158, -356, -5180, -339);
      a.quadraticCurveTo(-5186, -332, -5221, -332);
      a.quadraticCurveTo(-5286, -332, -5453, -357);
      a.lineTo(-5687, -373);
      a.quadraticCurveTo(-5731, -410, -5782, -466);
      a.lineTo(-6417, -444);
      a.quadraticCurveTo(-6604, -713, -6834, -878);
      a.quadraticCurveTo(-6848, -890, -6869, -894);
      a.lineTo(-6869, -894);
      a.lineTo(-6869, -894);
      a.quadraticCurveTo(-7025, -1204, -7200, -1529);
      a.lineTo(-7243, -1607);
      a.lineTo(-7272, -1692);
      a.quadraticCurveTo(-7509, -2406, -7929, -2820);
      a.lineTo(-7976, -2901);
      a.lineTo(-8057, -3048);
      a.quadraticCurveTo(-8375, -3640, -8760, -4084);
      a.lineTo(-8939, -4317);
      a.quadraticCurveTo(-9057, -4473, -9182, -4624);
      a.quadraticCurveTo(-9750, -5004, -10302, -5507);
      a.quadraticCurveTo(-11250, -6400, -12658, -7041);
      a.quadraticCurveTo(-13291, -7329, -13652, -7860);
      a.closePath();
      a.moveTo(-13796, -11016);
      a.quadraticCurveTo(-13869, -11016, -13943, -11015);
      a.quadraticCurveTo(-16702, -10809, -17817, -10122);
      a.quadraticCurveTo(-18882, -9522, -19195, -9317);
      a.quadraticCurveTo(-20908, -7882, -20809, -7619);
      a.quadraticCurveTo(-20537, -8069, -19937, -8543);
      a.quadraticCurveTo(-19809, -8638, -19665, -8728);
      a.lineTo(-19665, -8728);
      a.quadraticCurveTo(-19746, -8508, -19623, -8400);
      a.quadraticCurveTo(-20337, -8057, -20671, -7701);
      a.lineTo(-20714, -7656);
      a.quadraticCurveTo(-20564, -7739, -20225, -7878);
      a.quadraticCurveTo(-19491, -8179, -18092, -8232);
      a.quadraticCurveTo(-17882, -8257, -17651, -8257);
      a.quadraticCurveTo(-16246, -8257, -14072, -7321);
      a.quadraticCurveTo(-11735, -5966, -10329, -4626);
      a.quadraticCurveTo(-8416, -3045, -7634, -1448);
      a.quadraticCurveTo(-7451, -1114, -7160, -483);
      a.quadraticCurveTo(-6926, -5, -6724, 241);
      a.quadraticCurveTo(-6614, 220, -6171, 94);
      a.quadraticCurveTo(-5814, 0, -5549, -20);
      a.quadraticCurveTo(-5467, -26, -5382, -26);
      a.quadraticCurveTo(-4631, -26, -3686, 410);
      a.quadraticCurveTo(-3339, 559, -3E3, 735);
      a.quadraticCurveTo(-2285, 1095, -1546, 1479);
      a.quadraticCurveTo(-990, 1749, -642, 1911);
      a.lineTo(-341, 1303);
      a.quadraticCurveTo(-138, 884, -59, 468);
      a.quadraticCurveTo(53, -102, -77, -669);
      a.quadraticCurveTo(-242, -1380, -401, -1652);
      a.lineTo(-2565, -3393);
      a.quadraticCurveTo(-4522, -5142, -6207, -7346);
      a.lineTo(-6353, -7519);
      a.lineTo(-6424, -7547);
      a.quadraticCurveTo(-6500, -7576, -6532, -7596);
      a.quadraticCurveTo(-6750, -7725, -6983, -7973);
      a.quadraticCurveTo(-7912, -9010, -9429, -9915);
      a.quadraticCurveTo(-11043, -11016, -13796, -11016);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11189);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-11167, -9165);
      a.lineTo(-11052, -9117);
      a.moveTo(-10178, -8677);
      a.quadraticCurveTo(-10406, -8812, -10662, -8938);
      a.moveTo(-11167, -9165);
      a.lineTo(-11491, -9290);
      a.moveTo(-9476, -8275);
      a.lineTo(-9537, -8247);
      a.lineTo(-9489, -8211);
      a.lineTo(-9267, -8034);
      a.moveTo(-9537, -8247);
      a.lineTo(-9578, -8226);
      a.lineTo(-9602, -8206);
      a.moveTo(-8801, -8739);
      a.lineTo(-8815, -8747);
      a.moveTo(-1969, -2221);
      a.lineTo(-1961, -2218);
      a.lineTo(-1883, -2182);
      a.moveTo(-1835, -2158);
      a.quadraticCurveTo(-1725, -2106, -1634, -2074);
      a.moveTo(-7943, -8280);
      a.quadraticCurveTo(-8366, -8560, -8801, -8739);
      a.moveTo(-9537, -8247);
      a.lineTo(-9855, -8474);
      a.moveTo(-7752, -6245);
      a.quadraticCurveTo(-7789, -6221, -7830, -6208);
      a.quadraticCurveTo(-7747, -6040, -7675, -5872);
      a.quadraticCurveTo(-7616, -5890, -7564, -5920);
      a.moveTo(-7907, -6365);
      a.lineTo(-8029, -6584);
      a.moveTo(-7830, -6208);
      a.quadraticCurveTo(-7847, -6195, -7871, -6193);
      a.quadraticCurveTo(-7885, -6185, -7902, -6184);
      a.moveTo(-7830, -6208);
      a.lineTo(-7907, -6365);
      a.moveTo(-9183, -4623);
      a.lineTo(-9356, -4821);
      a.quadraticCurveTo(-9581, -5067, -9838, -5316);
      a.moveTo(-8471, -7448);
      a.quadraticCurveTo(-8540, -7419, -8588, -7378);
      a.quadraticCurveTo(-8433, -7191, -8286, -6991);
      a.moveTo(-8588, -7378);
      a.lineTo(-8589, -7378);
      a.quadraticCurveTo(-8619, -7344, -8648, -7322);
      a.moveTo(-8588, -7378);
      a.quadraticCurveTo(-8765, -7582, -8965, -7769);
      a.moveTo(-8761, -4083);
      a.lineTo(-8940, -4316);
      a.moveTo(-7523, -5498);
      a.lineTo(-7533, -5525);
      a.lineTo(-7557, -5587);
      a.lineTo(-7675, -5872);
      a.quadraticCurveTo(-7703, -5860, -7735, -5856);
      a.lineTo(-7795, -5853);
      a.moveTo(-7262, -4744);
      a.lineTo(-7281, -4808);
      a.lineTo(-7355, -5035);
      a.moveTo(-7262, -4744);
      a.quadraticCurveTo(-7271, -4736, -7288, -4732);
      a.quadraticCurveTo(-7292, -4724, -7307, -4719);
      a.moveTo(-6985, -3710);
      a.quadraticCurveTo(-7015, -3849, -7053, -3995);
      a.moveTo(-7262, -4744);
      a.lineTo(-7179, -4462);
      a.moveTo(-7184, -4775);
      a.lineTo(-7262, -4744);
      a.moveTo(-11211, -6462);
      a.quadraticCurveTo(-11550, -6703, -11960, -6951);
      a.moveTo(-10128, -5589);
      a.quadraticCurveTo(-10457, -5890, -10870, -6210);
      a.moveTo(-7666, -2370);
      a.quadraticCurveTo(-7790, -2593, -7930, -2819);
      a.moveTo(-7977, -2900);
      a.lineTo(-8171, -3213);
      a.moveTo(-6700, -2368);
      a.quadraticCurveTo(-6736, -2583, -6788, -2813);
      a.quadraticCurveTo(-6877, -3266, -6985, -3710);
      a.moveTo(-6644, -2053);
      a.lineTo(-6584, -2021);
      a.moveTo(-6700, -2368);
      a.lineTo(-6644, -2053);
      a.lineTo(-6734, -2094);
      a.lineTo(-6751, -2089);
      a.moveTo(-6604, -2318);
      a.quadraticCurveTo(-6650, -2347, -6700, -2368);
      a.lineTo(-6770, -2390);
      a.lineTo(-6797, -2401);
      a.moveTo(-6618, -1902);
      a.lineTo(-6623, -1934);
      a.quadraticCurveTo(-6630, -1992, -6644, -2053);
      a.moveTo(-6618, -1902);
      a.quadraticCurveTo(-6591, -1754, -6571, -1617);
      a.moveTo(-7201, -1528);
      a.quadraticCurveTo(-7026, -1203, -6870, -893);
      a.moveTo(-6418, -443);
      a.lineTo(-5783, -465);
      a.lineTo(-5702, -463);
      a.moveTo(-6870, -893);
      a.lineTo(-6774, -705);
      a.moveTo(-7244, -1606);
      a.quadraticCurveTo(-7305, -1727, -7377, -1852);
      a.moveTo(-8378, -3531);
      a.quadraticCurveTo(-8558, -3813, -8761, -4083);
      a.moveTo(-6003, -6295);
      a.lineTo(-6219, -6600);
      a.quadraticCurveTo(-6401, -6849, -6603, -7081);
      a.moveTo(-5518, -5763);
      a.quadraticCurveTo(-5187, -5334, -4887, -4937);
      a.moveTo(-6418, -443);
      a.lineTo(-6475, -437);
      a.moveTo(-5101, -416);
      a.lineTo(-5274, -436);
      a.moveTo(-4345, -272);
      a.lineTo(-4469, -303);
      a.moveTo(-3860, -133);
      a.lineTo(-3991, -174);
      a.moveTo(-4469, -303);
      a.quadraticCurveTo(-4777, -378, -5101, -416);
      a.moveTo(-2389, -2479);
      a.quadraticCurveTo(-2163, -2330, -1969, -2221);
      a.moveTo(-3493, -3322);
      a.quadraticCurveTo(-3294, -3133, -3106, -2988);
      a.lineTo(-2847, -2795);
      a.moveTo(-4614, -4589);
      a.quadraticCurveTo(-4198, -4059, -3825, -3656);
      a.moveTo(-6971, -7478);
      a.quadraticCurveTo(-7286, -7795, -7609, -8040);
      a.moveTo(-2963, 209);
      a.quadraticCurveTo(-3110, 141, -3261, 85);
      a.quadraticCurveTo(-3555, -34, -3860, -133);
      a.moveTo(-16582, -8400);
      a.lineTo(-17177, -8431);
      a.moveTo(-15382, -8238);
      a.quadraticCurveTo(-15771, -8310, -16168, -8358);
      a.moveTo(-13685, -9848);
      a.quadraticCurveTo(-14138, -9922, -14619, -9967);
      a.moveTo(-13891, -7847);
      a.quadraticCurveTo(-14364, -8007, -14880, -8131);
      a.moveTo(-11990, -9458);
      a.quadraticCurveTo(-12542, -9627, -13170, -9755);
      a.moveTo(-12453, -7228);
      a.quadraticCurveTo(-12868, -7444, -13343, -7644)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11189);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-18115, -8963);
      a.quadraticCurveTo(-18114, -8700, -17557, -8412);
      a.quadraticCurveTo(-17718, -8427, -17862, -8461);
      a.quadraticCurveTo(-18449, -8578, -18603, -8795);
      a.moveTo(-19284, -8542);
      a.quadraticCurveTo(-19228, -8370, -19132, -8346);
      a.quadraticCurveTo(-19029, -8321, -18949, -8279);
      a.quadraticCurveTo(-19265, -8244, -19445, -8304);
      a.quadraticCurveTo(-19561, -8342, -19624, -8399);
      a.moveTo(-20715, -7655);
      a.quadraticCurveTo(-20565, -7738, -20226, -7877);
      a.quadraticCurveTo(-19492, -8178, -18093, -8231);
      a.quadraticCurveTo(-16605, -8410, -14073, -7320);
      a.quadraticCurveTo(-11736, -5965, -10330, -4625);
      a.quadraticCurveTo(-8417, -3044, -7635, -1447);
      a.quadraticCurveTo(-7452, -1113, -7161, -482);
      a.quadraticCurveTo(-6927, -4, -6725, 242);
      a.quadraticCurveTo(-6615, 221, -6172, 95);
      a.quadraticCurveTo(-5815, 0, -5550, -19);
      a.quadraticCurveTo(-4739, -74, -3687, 411);
      a.quadraticCurveTo(-3340, 560, -3001, 736);
      a.quadraticCurveTo(-2286, 1096, -1547, 1480);
      a.quadraticCurveTo(-991, 1750, -643, 1912);
      a.lineTo(-342, 1304);
      a.quadraticCurveTo(-139, 885, -60, 469);
      a.quadraticCurveTo(52, -101, -78, -668);
      a.quadraticCurveTo(-243, -1379, -402, -1651);
      a.lineTo(-2566, -3392);
      a.quadraticCurveTo(-4523, -5141, -6208, -7345);
      a.lineTo(-6354, -7518);
      a.lineTo(-6425, -7546);
      a.quadraticCurveTo(-6501, -7575, -6533, -7595);
      a.quadraticCurveTo(-6751, -7724, -6984, -7972);
      a.quadraticCurveTo(-7913, -9009, -9430, -9914);
      a.quadraticCurveTo(-11087, -11044, -13944, -11014);
      a.quadraticCurveTo(-16703, -10808, -17818, -10121);
      a.quadraticCurveTo(-18883, -9521, -19196, -9316);
      a.quadraticCurveTo(-19583, -8964, -19666, -8727);
      a.quadraticCurveTo(-19747, -8507, -19624, -8399);
      a.moveTo(-9560, -9167);
      a.quadraticCurveTo(-11256, -9945, -12995, -10134);
      a.quadraticCurveTo(-14703, -10320, -15891, -10077);
      a.quadraticCurveTo(-17940, -9586, -17793, -9415);
      a.quadraticCurveTo(-18112, -9157, -18115, -8963);
      a.moveTo(-402, -1651);
      a.quadraticCurveTo(-362, -1720, -398, -1714);
      a.quadraticCurveTo(-435, -1708, -402, -1651);
      a.closePath();
      a.moveTo(-19284, -8542);
      a.quadraticCurveTo(-19282, -8550, -19287, -8557);
      a.quadraticCurveTo(-19178, -8849, -18992, -8984);
      a.quadraticCurveTo(-18807, -9105, -18622, -9197);
      a.quadraticCurveTo(-18697, -8934, -18603, -8795);
      a.moveTo(-20715, -7655);
      a.quadraticCurveTo(-20769, -7629, -20810, -7618);
      a.quadraticCurveTo(-20909, -7881, -19196, -9316)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11189);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-1883, -2182);
      a.quadraticCurveTo(-1859, -2166, -1835, -2158)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11366);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(29, -2730);
      a.quadraticCurveTo(18, -2730, 8, -2730);
      a.quadraticCurveTo(-775, -2725, -1473, -2385);
      a.quadraticCurveTo(-1598, -2324, -1712, -2247);
      a.quadraticCurveTo(-1835, -2165, -1945, -2063);
      a.lineTo(-2105, -1920);
      a.quadraticCurveTo(-2051, -1145, -1854, -394);
      a.quadraticCurveTo(-1658, 357, -1281, 1029);
      a.lineTo(-1275, 1040);
      a.quadraticCurveTo(-893, 1719, -384, 2301);
      a.quadraticCurveTo(-137, 2582, 102, 2582);
      a.quadraticCurveTo(356, 2582, 602, 2267);
      a.quadraticCurveTo(800, 2015, 923, 1716);
      a.quadraticCurveTo(1200, 1045, 1441, 361);
      a.quadraticCurveTo(1694, -358, 1875, -1100);
      a.quadraticCurveTo(2015, -1676, 1895, -2258);
      a.lineTo(1717, -2349);
      a.quadraticCurveTo(1597, -2407, 1472, -2456);
      a.quadraticCurveTo(775, -2730, 29, -2730);
      a.closePath();
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1806, 2714, -1672, 2714);
      a.quadraticCurveTo(-1609, 2714, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.quadraticCurveTo(-1628, 2191, -1784, 2034);
      a.quadraticCurveTo(-1882,
        1935, -1969, 1830);
      a.closePath();
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285);
      a.quadraticCurveTo(1453, 2524, 1069, 2647);
      a.quadraticCurveTo(1240, 2920, 1464, 3159);
      a.lineTo(1495, 3185);
      a.quadraticCurveTo(1485, 2702, 1801, 2702);
      a.quadraticCurveTo(1871, 2702, 1958, 2726);
      a.quadraticCurveTo(2051, 2751, 2109, 2838);
      a.lineTo(2146, 2897);
      a.quadraticCurveTo(2234, 2453, 2090, 2025);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11366);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1895, -2258);
      a.quadraticCurveTo(2015, -1676, 1875, -1100);
      a.quadraticCurveTo(1694, -358, 1441, 361);
      a.quadraticCurveTo(1200, 1045, 923, 1716);
      a.quadraticCurveTo(800, 2015, 602, 2267);
      a.quadraticCurveTo(356, 2582, 102, 2582);
      a.quadraticCurveTo(-137, 2582, -384, 2301);
      a.quadraticCurveTo(-893, 1719, -1275, 1040);
      a.lineTo(-1281, 1029);
      a.lineTo(-1281, 1029);
      a.quadraticCurveTo(-1281, 1029, -1281, 1029);
      a.quadraticCurveTo(-1658, 357, -1854, -394);
      a.quadraticCurveTo(-2051, -1145, -2105, -1920);
      a.quadraticCurveTo(-2607, -1485, -3179, -1168);
      a.lineTo(-3154, -913);
      a.quadraticCurveTo(-3092, -110, -3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628, 2191, -1457, 2316);
      a.quadraticCurveTo(-1193, 2510, -895, 2627);
      a.quadraticCurveTo(-716, 2697, -524, 2739);
      a.quadraticCurveTo(-230, 2803, 76, 2803);
      a.quadraticCurveTo(518, 2803, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782, 2285);
      a.quadraticCurveTo(1942, 2169, 2090, 2025);
      a.quadraticCurveTo(2251, 1867, 2398, 1675);
      a.quadraticCurveTo(2848,
        1083, 3270, 825);
      a.quadraticCurveTo(3289, 538, 3323, 253);
      a.quadraticCurveTo(3408, -448, 3399, -1154);
      a.quadraticCurveTo(3043, -1322, 2763, -1603);
      a.quadraticCurveTo(2369, -1999, 1895, -2258);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11366);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1717, -2349);
      a.lineTo(1791, -2179);
      a.moveTo(1971, -1331);
      a.quadraticCurveTo(1976, -1189, 1966, -1044);
      a.moveTo(1884, -1896);
      a.quadraticCurveTo(1918, -1769, 1940, -1641);
      a.moveTo(1925, -735);
      a.lineTo(1908, -654);
      a.lineTo(1866, -463);
      a.moveTo(-1712, -2247);
      a.lineTo(-1741, -2148);
      a.moveTo(-1785, -1953);
      a.quadraticCurveTo(-1818, -1781, -1826, -1605);
      a.moveTo(-1281, 1029);
      a.lineTo(-1285, 1001);
      a.moveTo(-1715, -727);
      a.lineTo(-1688, -640);
      a.lineTo(-1626, -443);
      a.moveTo(-1821, -1306);
      a.quadraticCurveTo(-1810, -1147, -1778, -986);
      a.moveTo(-1400, 404);
      a.lineTo(-1338, 701);
      a.moveTo(-1262, 1557);
      a.quadraticCurveTo(-1273, 1698, -1300, 1834);
      a.moveTo(-1281, 1029);
      a.quadraticCurveTo(-1265, 1153, -1259, 1273);
      a.moveTo(-1457, 2316);
      a.quadraticCurveTo(-1410, 2213, -1373, 2107);
      a.moveTo(1782, 2285);
      a.quadraticCurveTo(1730, 2222, 1688, 2157);
      a.moveTo(1484, 1644);
      a.quadraticCurveTo(1503, 1765, 1546, 1881);
      a.moveTo(1534, 1012);
      a.lineTo(1508, 1124);
      a.quadraticCurveTo(1484, 1229, 1475, 1330);
      a.moveTo(1665, 437);
      a.lineTo(1603, 712);
      a.moveTo(-1547, -174);
      a.lineTo(-1468, 121);
      a.moveTo(1798, -156);
      a.lineTo(1735, 128)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11366);
      a.fillStyle =
        "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2105, -1920);
      a.lineTo(-1945, -2063);
      a.quadraticCurveTo(-1835, -2165, -1712, -2247);
      a.quadraticCurveTo(-1598, -2324, -1473, -2385);
      a.quadraticCurveTo(-775, -2725, 8, -2730);
      a.quadraticCurveTo(765, -2734, 1472, -2456);
      a.quadraticCurveTo(1597, -2407, 1717, -2349);
      a.lineTo(1895, -2258);
      a.quadraticCurveTo(2369, -1999, 2763, -1603);
      a.quadraticCurveTo(3043, -1322, 3399, -1154);
      a.lineTo(3461, -1126);
      a.moveTo(-3226, -1142);
      a.lineTo(-3179, -1168);
      a.quadraticCurveTo(-2607, -1485, -2105, -1920);
      a.moveTo(-3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628, 2191, -1457, 2316);
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1749, 2657, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.moveTo(-895, 2627);
      a.quadraticCurveTo(-716, 2697, -524, 2739);
      a.quadraticCurveTo(190, 2895, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782, 2285);
      a.moveTo(-3242, 673);
      a.lineTo(-3224, 679);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(3391, 751, 3509, 704);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(2848, 1083, 2398, 1675);
      a.quadraticCurveTo(2251, 1867, 2090, 2025);
      a.quadraticCurveTo(2234,
        2453, 2146, 2897);
      a.lineTo(2109, 2838);
      a.quadraticCurveTo(2051, 2751, 1958, 2726);
      a.quadraticCurveTo(1483, 2595, 1495, 3185);
      a.lineTo(1464, 3159);
      a.quadraticCurveTo(1240, 2920, 1069, 2647);
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10743);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.quadraticCurveTo(1866, -1390, 1927, -1547);
      a.quadraticCurveTo(2065, -1909, 1846, -2264);
      a.closePath();
      a.moveTo(-1866, -2414);
      a.quadraticCurveTo(-1988, -2163, -1979, -1755);
      a.quadraticCurveTo(-1973, -1467, -1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.closePath();
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1187, -981, 1265, -981);
      a.quadraticCurveTo(1268, -981, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.quadraticCurveTo(1602, -2564, 1486, -2661);
      a.closePath();
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1591, -2730, -1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1398, -906, -1198, -906);
      a.quadraticCurveTo(-1195, -906, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.lineTo(-1158, -2446);
      a.quadraticCurveTo(-1266, -2592, -1444, -2773);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10743);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(1691, -2467);
      a.lineTo(1617, -2397);
      a.quadraticCurveTo(1036, -1774, 1540, -1045);
      a.quadraticCurveTo(1681, -1119, 1789, -1277);
      a.lineTo(1766, -1339);
      a.quadraticCurveTo(1594, -1821, 1846, -2264);
      a.quadraticCurveTo(1783, -2366, 1691, -2467);
      a.closePath();
      a.moveTo(-1706, -2639);
      a.quadraticCurveTo(-1719, -2639, -1719, -2618);
      a.quadraticCurveTo(-1808, -2534, -1866, -2414);
      a.lineTo(-1839, -2375);
      a.quadraticCurveTo(-1463, -1799, -1881, -1276);
      a.quadraticCurveTo(-1828, -1165, -1546, -963);
      a.quadraticCurveTo(-1083, -1736, -1560, -2461);
      a.quadraticCurveTo(-1620, -2552, -1697, -2637);
      a.quadraticCurveTo(-1702, -2639, -1706, -2639);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10743);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(504, -7675);
      a.quadraticCurveTo(483, -7675, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.lineTo(72, -7173);
      a.quadraticCurveTo(-75, -6552, -84, -5920);
      a.lineTo(0, -5470);
      a.quadraticCurveTo(3, -5138, -4, -4806);
      a.lineTo(-55, -2986);
      a.quadraticCurveTo(-60, -2829, -132, -2714);
      a.quadraticCurveTo(-249, -2531, -379, -2531);
      a.quadraticCurveTo(-522, -2531, -683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.quadraticCurveTo(-1286, -3404, -1395, -3404);
      a.quadraticCurveTo(-1475, -3404, -1555, -3334);
      a.quadraticCurveTo(-1801, -3121, -1548, -2877);
      a.lineTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.quadraticCurveTo(-811, -1894, -769, -1831);
      a.quadraticCurveTo(-380, -1249, -298, -527);
      a.quadraticCurveTo(-189, 432, -50, 1385);
      a.lineTo(-38, 1575);
      a.quadraticCurveTo(14, 2265, -214, 2911);
      a.quadraticCurveTo(-140, 3258, -59, 3411);
      a.quadraticCurveTo(33, 3510, 122, 3510);
      a.quadraticCurveTo(271, 3510, 409, 3232);
      a.quadraticCurveTo(627, 2788, 824, 1738);
      a.quadraticCurveTo(910, 1280, 991, 893);
      a.quadraticCurveTo(1073, 494, 1151, 169);
      a.lineTo(1190, 6);
      a.quadraticCurveTo(1359, -675, 1540, -1045);
      a.lineTo(1540, -1045);
      a.quadraticCurveTo(1419, -982, 1272, -982);
      a.quadraticCurveTo(1269, -981, 1265, -981);
      a.quadraticCurveTo(1187, -981, 1125, -1322);
      a.quadraticCurveTo(1059, -1678, 1060, -2423);
      a.quadraticCurveTo(1274, -2525, 1486, -2661);
      a.lineTo(1592, -2731);
      a.quadraticCurveTo(1934, -2966, 1778, -3215);
      a.quadraticCurveTo(1683, -3365, 1533, -3365);
      a.quadraticCurveTo(1434, -3365, 1310, -3300);
      a.lineTo(1238, -3260);
      a.quadraticCurveTo(1248, -3864, 882, -4324);
      a.quadraticCurveTo(516, -4785, 384, -5168);
      a.quadraticCurveTo(251, -5551, 317, -6093);
      a.quadraticCurveTo(382, -6636, 557, -7180);
      a.quadraticCurveTo(608, -7337, 621, -7444);
      a.lineTo(621, -7444);
      a.quadraticCurveTo(621, -7444, 621, -7444);
      a.quadraticCurveTo(649, -7675, 504, -7675);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10743);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(110, -7354);
      a.quadraticCurveTo(-40, -7132, -215, -6755);
      a.quadraticCurveTo(-613, -5895, -596, -5022);
      a.quadraticCurveTo(-591, -4787, -614, -4479);
      a.lineTo(-635, -4248);
      a.quadraticCurveTo(-1077, -3768, -1179, -3274);
      a.quadraticCurveTo(-1125, -3208, -1071, -3109);
      a.quadraticCurveTo(-915, -2821, -683, -2750);
      a.quadraticCurveTo(-523, -2531, -379, -2531);
      a.quadraticCurveTo(-248, -2531, -132, -2714);
      a.quadraticCurveTo(-60, -2829, -55, -2986);
      a.lineTo(-4, -4806);
      a.quadraticCurveTo(3, -5138, 0, -5470);
      a.lineTo(-84, -5920);
      a.quadraticCurveTo(-75, -6552, 72, -7173);
      a.lineTo(110, -7354);
      a.closePath();
      a.moveTo(-1077, -2330);
      a.lineTo(-1048, -1864);
      a.quadraticCurveTo(-1025, -1437, -1191, -906);
      a.quadraticCurveTo(-1194, -906, -1198, -906);
      a.quadraticCurveTo(-1398, -906, -1546, -963);
      a.lineTo(-1546, -963);
      a.quadraticCurveTo(-1223, -398, -997, 123);
      a.quadraticCurveTo(-786, 610, -659, 1058);
      a.quadraticCurveTo(-565,
        1388, -484, 1706);
      a.quadraticCurveTo(-338, 2281, -233, 2814);
      a.lineTo(-214, 2911);
      a.quadraticCurveTo(14, 2265, -38, 1575);
      a.lineTo(-50, 1385);
      a.quadraticCurveTo(-189, 432, -298, -527);
      a.quadraticCurveTo(-380, -1249, -769, -1831);
      a.quadraticCurveTo(-811, -1894, -875, -1936);
      a.lineTo(-875, -1936);
      a.quadraticCurveTo(-875, -1936, -875, -1936);
      a.quadraticCurveTo(-901, -2012, -930, -2073);
      a.quadraticCurveTo(-993, -2202, -1077, -2330);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10743);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle =
        "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(621, -7444);
      a.quadraticCurveTo(653, -7709, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.moveTo(621, -7444);
      a.quadraticCurveTo(608, -7337, 557, -7180);
      a.quadraticCurveTo(382, -6636, 317, -6093);
      a.quadraticCurveTo(251, -5551, 384, -5168);
      a.quadraticCurveTo(516, -4785, 882, -4324);
      a.quadraticCurveTo(1248, -3864, 1238, -3260);
      a.lineTo(1310, -3300);
      a.quadraticCurveTo(1621, -3464, 1778, -3215);
      a.quadraticCurveTo(1934, -2966, 1592, -2731);
      a.lineTo(1486, -2661);
      a.quadraticCurveTo(1602, -2564, 1691, -2467);
      a.quadraticCurveTo(1783, -2366, 1846, -2264);
      a.quadraticCurveTo(2065, -1909, 1927, -1547);
      a.quadraticCurveTo(1866, -1390, 1789, -1277);
      a.quadraticCurveTo(1681, -1119, 1540, -1045);
      a.quadraticCurveTo(1359, -675, 1190, 6);
      a.lineTo(1151, 169);
      a.quadraticCurveTo(1073, 494, 991, 893);
      a.quadraticCurveTo(910, 1280, 824, 1738);
      a.quadraticCurveTo(627, 2788, 409, 3232);
      a.quadraticCurveTo(190, 3675, -59, 3411);
      a.quadraticCurveTo(-140, 3258, -214, 2911);
      a.lineTo(-233,
        2814);
      a.quadraticCurveTo(-338, 2281, -484, 1706);
      a.quadraticCurveTo(-565, 1388, -659, 1058);
      a.quadraticCurveTo(-786, 610, -997, 123);
      a.quadraticCurveTo(-1223, -398, -1546, -963);
      a.quadraticCurveTo(-1828, -1165, -1881, -1276);
      a.quadraticCurveTo(-1973, -1467, -1979, -1755);
      a.quadraticCurveTo(-1988, -2163, -1866, -2414);
      a.quadraticCurveTo(-1808, -2534, -1719, -2618);
      a.moveTo(-1697, -2637);
      a.quadraticCurveTo(-1591, -2730, -1444, -2773);
      a.lineTo(-1548, -2877);
      a.quadraticCurveTo(-1801, -3121, -1555, -3334);
      a.quadraticCurveTo(-1365, -3500, -1179, -3274);
      a.quadraticCurveTo(-1077, -3768, -635, -4248);
      a.lineTo(-614, -4479);
      a.quadraticCurveTo(-591, -4787, -596, -5022);
      a.quadraticCurveTo(-613, -5895, -215, -6755);
      a.quadraticCurveTo(-40, -7132, 110, -7354);
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1190, -967, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.moveTo(1060, -2423);
      a.lineTo(901, -2353);
      a.quadraticCurveTo(553, -2210, 543, -1729);
      a.moveTo(483, -2694);
      a.quadraticCurveTo(941, -3088, 1238, -3260);
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.moveTo(-683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.moveTo(-421, -2734);
      a.quadraticCurveTo(-562, -2713, -683, -2750);
      a.moveTo(-1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.moveTo(-1719, -2618);
      a.lineTo(-1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1395, -905, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.moveTo(-875, -1936);
      a.quadraticCurveTo(-822, -1782, -783, -1568)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10743);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle =
        "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(436, -7172);
      a.quadraticCurveTo(526, -7323, 621, -7444);
      a.moveTo(-84, -5920);
      a.lineTo(-8, -6155);
      a.moveTo(128, -6531);
      a.quadraticCurveTo(192, -6693, 259, -6837);
      a.moveTo(683, -1206);
      a.lineTo(537, -1172);
      a.lineTo(538, -1065);
      a.quadraticCurveTo(536, -876, 594, -692);
      a.lineTo(683, -723);
      a.moveTo(362, -1145);
      a.lineTo(537, -1172);
      a.lineTo(563, -1508);
      a.moveTo(1151, 169);
      a.lineTo(790, -299);
      a.lineTo(643, -220);
      a.moveTo(594, -692);
      a.lineTo(790, -299);
      a.lineTo(945, -361);
      a.moveTo(482, -663);
      a.lineTo(594, -692);
      a.moveTo(813, 958);
      a.quadraticCurveTo(901, 924, 991, 893);
      a.moveTo(387, 1139);
      a.quadraticCurveTo(512, 1078, 641, 1025);
      a.moveTo(-50, 1385);
      a.quadraticCurveTo(33, 1331, 120, 1281);
      a.lineTo(147, 1266);
      a.moveTo(-302, -5223);
      a.lineTo(-203, -5526);
      a.moveTo(-88, -5905);
      a.lineTo(-84, -5920);
      a.moveTo(-614, -4479);
      a.quadraticCurveTo(-526, -4617, -410, -4920);
      a.moveTo(-764, -1206);
      a.lineTo(-724, -996);
      a.lineTo(-522, -965);
      a.moveTo(-997, 123);
      a.lineTo(-818, -377);
      a.lineTo(-905, -421);
      a.moveTo(-818, -377);
      a.lineTo(-779, -541);
      a.quadraticCurveTo(-726, -763, -724, -996);
      a.lineTo(-864, -1005);
      a.moveTo(-818, -377);
      a.lineTo(-643, -281);
      a.moveTo(-484, 1706);
      a.quadraticCurveTo(-405, 1633, -318, 1569);
      a.moveTo(-75, 1401);
      a.lineTo(-50, 1385)
    }]
  }
}

function make_adult_3(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11206);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-17158, -7515);
      a.quadraticCurveTo(-16811, -7467, -16291, -6708);
      a.lineTo(-16291, -6707);
      a.quadraticCurveTo(-16117, -6430, -15959, -6117);
      a.quadraticCurveTo(-15590, -5385, -14962, -4846);
      a.quadraticCurveTo(-13897, -3935, -12611, -3370);
      a.lineTo(-12611, -3372);
      a.lineTo(-12213, -3193);
      a.quadraticCurveTo(-10881, -2589, -9472, -2204);
      a.lineTo(-8698, -2014);
      a.lineTo(-8019, -1932);
      a.lineTo(-7401, -1860);
      a.quadraticCurveTo(-5822, -1736, -4328, -1208);
      a.quadraticCurveTo(-2976, -732, -1547, -624);
      a.quadraticCurveTo(-3563, 76, -5460, 1056);
      a.lineTo(-5919, 1292);
      a.quadraticCurveTo(-6206, 937, -6249, 490);
      a.quadraticCurveTo(-6321, -262, -6817, -807);
      a.quadraticCurveTo(-7038, -1050, -7350, -1156);
      a.quadraticCurveTo(-9699, -1941, -12025, -2819);
      a.quadraticCurveTo(-12361, -2946, -12697, -3075);
      a.quadraticCurveTo(-15111, -4002, -16583, -6107);
      a.quadraticCurveTo(-16740, -6331, -17158, -7515);
      a.closePath();
      a.moveTo(-14076, -2719);
      a.quadraticCurveTo(-13618, -2473, -13152, -2253);
      a.quadraticCurveTo(-10372, -936, -8142, 1089);
      a.quadraticCurveTo(-8116, 872, -8113, 657);
      a.quadraticCurveTo(-8100, -179, -8500, -904);
      a.lineTo(-8500, -904);
      a.lineTo(-8055, -731);
      a.lineTo(-7749, -208);
      a.lineTo(-7715, -162);
      a.quadraticCurveTo(-7580, 25, -7582, 253);
      a.lineTo(-7106, 2020);
      a.lineTo(-6541, 2610);
      a.quadraticCurveTo(-5961, 2374, -5346, 2266);
      a.quadraticCurveTo(-4609, 2136, -3913, 1899);
      a.lineTo(-3686, 1967);
      a.quadraticCurveTo(-3477, 2029, -3271, 2104);
      a.lineTo(-3927,
        2214);
      a.quadraticCurveTo(-4179, 2350, -4466, 2350);
      a.quadraticCurveTo(-4486, 2350, -4506, 2349);
      a.lineTo(-4590, 2342);
      a.lineTo(-5338, 2508);
      a.quadraticCurveTo(-5646, 2711, -6007, 2711);
      a.quadraticCurveTo(-6056, 2711, -6106, 2707);
      a.lineTo(-6161, 2702);
      a.lineTo(-6935, 2885);
      a.lineTo(-7474, 2717);
      a.lineTo(-7853, 2406);
      a.quadraticCurveTo(-7871, 2380, -7892, 2359);
      a.quadraticCurveTo(-8637, 1634, -9525, 1064);
      a.lineTo(-9710, 932);
      a.lineTo(-9952, 740);
      a.quadraticCurveTo(-12325, -655, -14076, -2719);
      a.closePath();
      a.moveTo(-16563, -13370);
      a.lineTo(-16644, -13192);
      a.quadraticCurveTo(-16885, -12634, -17114, -12071);
      a.quadraticCurveTo(-17901, -10145, -17883, -8071);
      a.quadraticCurveTo(-17876, -7206, -17658, -6394);
      a.quadraticCurveTo(-17446, -5601, -17033, -4860);
      a.quadraticCurveTo(-16470, -3850, -15719, -2965);
      a.quadraticCurveTo(-14995, -2110, -14146, -1379);
      a.quadraticCurveTo(-13519, -840, -12817, -409);
      a.quadraticCurveTo(-10735, 868, -8798, 2352);
      a.quadraticCurveTo(-8087, 2896, -7307, 3338);
      a.quadraticCurveTo(-6601, 3147, -5900, 2948);
      a.quadraticCurveTo(-4468, 2536, -2980, 2491);
      a.lineTo(-746, 2377);
      a.quadraticCurveTo(-492, 1925, -248, 1468);
      a.quadraticCurveTo(570, -64, -306, -1457);
      a.lineTo(-984, -1340);
      a.quadraticCurveTo(-1541, -1262, -2094, -1262);
      a.quadraticCurveTo(-3018, -1262, -3933, -1480);
      a.quadraticCurveTo(-5368, -1825, -6828, -2051);
      a.quadraticCurveTo(-8373, -2288, -9863, -2758);
      a.quadraticCurveTo(-11248, -3193, -12540, -3854);
      a.lineTo(-12542, -3851);
      a.quadraticCurveTo(-13765, -4327, -14748, -5193);
      a.quadraticCurveTo(-15543, -5892, -16050, -6786);
      a.quadraticCurveTo(-16332, -7281, -16526, -7836);
      a.quadraticCurveTo(-16782, -8569, -16875, -9320);
      a.lineTo(-16896, -9501);
      a.quadraticCurveTo(-16967, -10221, -16889, -10956);
      a.lineTo(-16619, -13093);
      a.lineTo(-16563, -13370);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11206);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-17158, -7515);
      a.quadraticCurveTo(-16740, -6331, -16583, -6107);
      a.quadraticCurveTo(-15111, -4002, -12697, -3075);
      a.quadraticCurveTo(-12361, -2946, -12025, -2819);
      a.quadraticCurveTo(-9699, -1941, -7350, -1156);
      a.quadraticCurveTo(-7038, -1050, -6817, -807);
      a.quadraticCurveTo(-6321, -262, -6249, 490);
      a.quadraticCurveTo(-6206, 937, -5919, 1292);
      a.lineTo(-5460, 1056);
      a.quadraticCurveTo(-3563, 76, -1547, -624);
      a.quadraticCurveTo(-2976, -732, -4328, -1208);
      a.quadraticCurveTo(-5822, -1736, -7401, -1860);
      a.lineTo(-8019, -1932);
      a.lineTo(-8698, -2014);
      a.lineTo(-9472, -2204);
      a.quadraticCurveTo(-10881, -2589, -12213, -3193);
      a.lineTo(-12611, -3372);
      a.lineTo(-12611, -3370);
      a.quadraticCurveTo(-13897, -3935, -14962, -4846);
      a.quadraticCurveTo(-15590, -5385, -15959, -6117);
      a.quadraticCurveTo(-16117, -6430, -16291, -6707);
      a.lineTo(-16291, -6708);
      a.quadraticCurveTo(-16811, -7467, -17158, -7515);
      a.closePath();
      a.moveTo(-14076, -2719);
      a.quadraticCurveTo(-12325, -655, -9952, 740);
      a.lineTo(-9710, 932);
      a.lineTo(-9525, 1064);
      a.quadraticCurveTo(-8637, 1634, -7892, 2359);
      a.quadraticCurveTo(-7871, 2380, -7853, 2406);
      a.lineTo(-7474, 2717);
      a.lineTo(-6935, 2885);
      a.lineTo(-6161, 2702);
      a.lineTo(-6106, 2707);
      a.quadraticCurveTo(-6056, 2711, -6007, 2711);
      a.quadraticCurveTo(-5645, 2711, -5338, 2508);
      a.lineTo(-4590, 2342);
      a.lineTo(-4506, 2349);
      a.quadraticCurveTo(-4486, 2350, -4466, 2350);
      a.quadraticCurveTo(-4178, 2350, -3927, 2214);
      a.lineTo(-3271, 2104);
      a.quadraticCurveTo(-3477, 2029, -3686, 1967);
      a.lineTo(-3913, 1899);
      a.quadraticCurveTo(-4609, 2136, -5346, 2266);
      a.quadraticCurveTo(-5961, 2374, -6541, 2610);
      a.lineTo(-7106, 2020);
      a.lineTo(-7582, 253);
      a.quadraticCurveTo(-7580, 25, -7715, -162);
      a.lineTo(-7749, -208);
      a.lineTo(-8055, -731);
      a.lineTo(-8500, -904);
      a.lineTo(-8500, -904);
      a.quadraticCurveTo(-8100, -179, -8113, 657);
      a.quadraticCurveTo(-8116, 872, -8142, 1089);
      a.quadraticCurveTo(-10372, -936, -13152, -2253);
      a.quadraticCurveTo(-13618, -2473, -14076, -2719);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11206);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-10246, -2020);
      a.lineTo(-10715, -2236);
      a.moveTo(-8698, -2014);
      a.lineTo(-8019, -1932);
      a.moveTo(-12611, -3370);
      a.lineTo(-12611, -3372);
      a.moveTo(-11821, -884);
      a.lineTo(-12515, -1430);
      a.moveTo(-10829, -51);
      a.lineTo(-11504, -629);
      a.moveTo(-8394, -1072);
      a.lineTo(-9049, -1466);
      a.moveTo(-7749, -208);
      a.lineTo(-8055, -731);
      a.moveTo(-9952, 740);
      a.lineTo(-10561, 181);
      a.moveTo(-6728, -1740);
      a.lineTo(-7401, -1860);
      a.moveTo(-5737, -1390);
      a.lineTo(-6345, -1640);
      a.moveTo(-4308, -841);
      a.lineTo(-3481, -609);
      a.moveTo(-5228, -1257);
      a.lineTo(-4587, -967);
      a.moveTo(-3130, -551);
      a.lineTo(-2447, -536);
      a.moveTo(-1481, 1907);
      a.lineTo(-2487, 2E3);
      a.moveTo(-7106, 2020);
      a.lineTo(-7582, 253);
      a.moveTo(-6161, 2702);
      a.lineTo(-6935, 2885);
      a.moveTo(-7474, 2717);
      a.lineTo(-7853,
        2406);
      a.moveTo(-9525, 1064);
      a.lineTo(-9128, 1367);
      a.moveTo(-3271, 2104);
      a.lineTo(-3927, 2214);
      a.moveTo(-4590, 2342);
      a.lineTo(-5338, 2508);
      a.moveTo(-3218, 2095);
      a.lineTo(-3271, 2104);
      a.moveTo(-9710, 932);
      a.lineTo(-9525, 1064);
      a.moveTo(-16735, -5275);
      a.lineTo(-17198, -6014);
      a.moveTo(-14315, -2841);
      a.lineTo(-15233, -3624);
      a.moveTo(-12973, -1787);
      a.lineTo(-13806, -2432);
      a.moveTo(-15699, -4051);
      a.lineTo(-16393, -4817);
      a.moveTo(-13686, -3719);
      a.lineTo(-14558, -4354);
      a.moveTo(-12025, -2819);
      a.lineTo(-13189, -3418)
    }, function(a) {
      a.transform(-0.49,
        0, 0, 0.48, 15497, 11206);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-12542, -3851);
      a.quadraticCurveTo(-13765, -4327, -14748, -5193);
      a.quadraticCurveTo(-15543, -5892, -16050, -6786);
      a.quadraticCurveTo(-16332, -7281, -16526, -7836);
      a.quadraticCurveTo(-16782, -8569, -16875, -9320);
      a.lineTo(-16880, -9285);
      a.moveTo(-12611, -3372);
      a.lineTo(-12213, -3193);
      a.quadraticCurveTo(-10881, -2589, -9472, -2204);
      a.moveTo(-17158, -7515);
      a.quadraticCurveTo(-17299, -7535, -17420, -7435);
      a.lineTo(-17480, -7284);
      a.quadraticCurveTo(-17616, -6908, -17466, -6534);
      a.lineTo(-17505, -6614);
      a.quadraticCurveTo(-17827, -7305, -17532, -8001);
      a.quadraticCurveTo(-17511, -8052, -17470, -8100);
      a.quadraticCurveTo(-17386, -8197, -17244, -8265);
      a.quadraticCurveTo(-17332, -8509, -17515, -8444);
      a.quadraticCurveTo(-17698, -8380, -17811, -8174);
      a.lineTo(-17769, -8328);
      a.quadraticCurveTo(-17616, -8867, -17259, -9367);
      a.lineTo(-17236, -9402);
      a.quadraticCurveTo(-17142, -9541, -16963, -9645);
      a.lineTo(-16938, -9600);
      a.quadraticCurveTo(-16911, -9551, -16896, -9501);
      a.quadraticCurveTo(-16967, -10221, -16889, -10956);
      a.lineTo(-16619, -13093);
      a.lineTo(-16563, -13370);
      a.lineTo(-16644, -13192);
      a.quadraticCurveTo(-16885, -12634, -17114, -12071);
      a.quadraticCurveTo(-17901, -10145, -17883, -8071);
      a.quadraticCurveTo(-17876, -7206, -17658, -6394);
      a.quadraticCurveTo(-17446, -5601, -17033, -4860);
      a.quadraticCurveTo(-16470, -3850, -15719, -2965);
      a.quadraticCurveTo(-14995, -2110, -14146, -1379);
      a.quadraticCurveTo(-13519, -840, -12817, -409);
      a.quadraticCurveTo(-10735, 868, -8798, 2352);
      a.quadraticCurveTo(-8087, 2896, -7307, 3338);
      a.quadraticCurveTo(-6601, 3147, -5900, 2948);
      a.quadraticCurveTo(-4468, 2536, -2980, 2491);
      a.lineTo(-746, 2377);
      a.quadraticCurveTo(-492, 1925, -248, 1468);
      a.quadraticCurveTo(570, -64, -306, -1457);
      a.lineTo(-984, -1340);
      a.quadraticCurveTo(-2470, -1131, -3933, -1480);
      a.quadraticCurveTo(-5368, -1825, -6828, -2051);
      a.quadraticCurveTo(-8373, -2288, -9863, -2758);
      a.quadraticCurveTo(-11248, -3193, -12540, -3854);
      a.moveTo(-16875, -9320);
      a.quadraticCurveTo(-16868, -9412, -16896, -9501);
      a.lineTo(-16875, -9320);
      a.closePath();
      a.moveTo(-17158, -7515);
      a.quadraticCurveTo(-16811, -7467, -16291, -6708);
      a.lineTo(-16291, -6707);
      a.quadraticCurveTo(-16117, -6430, -15959, -6117);
      a.quadraticCurveTo(-15590, -5385, -14962, -4846);
      a.quadraticCurveTo(-13897, -3935, -12611, -3370);
      a.moveTo(-16291, -6708);
      a.lineTo(-16291, -6707)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11206);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-17158, -7515);
      a.quadraticCurveTo(-16811, -7467, -16291, -6708);
      a.lineTo(-16291, -6707);
      a.quadraticCurveTo(-16117, -6430, -15959, -6117);
      a.quadraticCurveTo(-15590, -5385, -14962, -4846);
      a.quadraticCurveTo(-13897, -3935, -12611, -3370);
      a.lineTo(-12611, -3372);
      a.lineTo(-12213, -3193);
      a.quadraticCurveTo(-10881, -2589, -9472, -2204);
      a.lineTo(-8698, -2014);
      a.lineTo(-8019, -1932);
      a.lineTo(-7401, -1860);
      a.quadraticCurveTo(-5822, -1736, -4328, -1208);
      a.quadraticCurveTo(-2976, -732, -1547, -624);
      a.quadraticCurveTo(-3563, 76, -5460, 1056);
      a.lineTo(-5919, 1292);
      a.quadraticCurveTo(-6206, 937, -6249, 490);
      a.quadraticCurveTo(-6321, -262, -6817, -807);
      a.quadraticCurveTo(-7038, -1050, -7350, -1156);
      a.quadraticCurveTo(-9699, -1941, -12025, -2819);
      a.quadraticCurveTo(-12361, -2946, -12697, -3075);
      a.quadraticCurveTo(-15111, -4002, -16583, -6107);
      a.quadraticCurveTo(-16740, -6331, -17158, -7515);
      a.closePath();
      a.moveTo(-14076, -2719);
      a.quadraticCurveTo(-13618, -2473, -13152, -2253);
      a.quadraticCurveTo(-10372, -936, -8142, 1089);
      a.quadraticCurveTo(-8116, 872, -8113, 657);
      a.quadraticCurveTo(-8100, -179, -8500, -904);
      a.lineTo(-8500, -904);
      a.lineTo(-8055, -731);
      a.lineTo(-7749, -208);
      a.lineTo(-7715, -162);
      a.quadraticCurveTo(-7580, 25, -7582, 253);
      a.lineTo(-7106, 2020);
      a.lineTo(-6541, 2610);
      a.quadraticCurveTo(-5961, 2374, -5346, 2266);
      a.quadraticCurveTo(-4609, 2136, -3913, 1899);
      a.lineTo(-3686, 1967);
      a.quadraticCurveTo(-3477, 2029, -3271, 2104);
      a.lineTo(-3927, 2214);
      a.quadraticCurveTo(-4179, 2350, -4466, 2350);
      a.quadraticCurveTo(-4486, 2350, -4506, 2349);
      a.lineTo(-4590, 2342);
      a.lineTo(-5338, 2508);
      a.quadraticCurveTo(-5646, 2711, -6007, 2711);
      a.quadraticCurveTo(-6056,
        2711, -6106, 2707);
      a.lineTo(-6161, 2702);
      a.lineTo(-6935, 2885);
      a.lineTo(-7474, 2717);
      a.lineTo(-7853, 2406);
      a.quadraticCurveTo(-7871, 2380, -7892, 2359);
      a.quadraticCurveTo(-8637, 1634, -9525, 1064);
      a.lineTo(-9710, 932);
      a.lineTo(-9952, 740);
      a.quadraticCurveTo(-12325, -655, -14076, -2719);
      a.closePath();
      a.moveTo(-16563, -13370);
      a.lineTo(-16644, -13192);
      a.quadraticCurveTo(-16885, -12634, -17114, -12071);
      a.quadraticCurveTo(-17901, -10145, -17883, -8071);
      a.quadraticCurveTo(-17876, -7206, -17658, -6394);
      a.quadraticCurveTo(-17446, -5601, -17033, -4860);
      a.quadraticCurveTo(-16470, -3850, -15719, -2965);
      a.quadraticCurveTo(-14995, -2110, -14146, -1379);
      a.quadraticCurveTo(-13519, -840, -12817, -409);
      a.quadraticCurveTo(-10735, 868, -8798, 2352);
      a.quadraticCurveTo(-8087, 2896, -7307, 3338);
      a.quadraticCurveTo(-6601, 3147, -5900, 2948);
      a.quadraticCurveTo(-4468, 2536, -2980, 2491);
      a.lineTo(-746, 2377);
      a.quadraticCurveTo(-492, 1925, -248, 1468);
      a.quadraticCurveTo(570, -64, -306, -1457);
      a.lineTo(-984, -1340);
      a.quadraticCurveTo(-1541, -1262, -2094, -1262);
      a.quadraticCurveTo(-3018, -1262, -3933, -1480);
      a.quadraticCurveTo(-5368, -1825, -6828, -2051);
      a.quadraticCurveTo(-8373, -2288, -9863, -2758);
      a.quadraticCurveTo(-11248, -3193, -12540, -3854);
      a.lineTo(-12542, -3851);
      a.quadraticCurveTo(-13765, -4327, -14748, -5193);
      a.quadraticCurveTo(-15543, -5892, -16050, -6786);
      a.quadraticCurveTo(-16332, -7281, -16526, -7836);
      a.quadraticCurveTo(-16782, -8569, -16875, -9320);
      a.lineTo(-16896, -9501);
      a.quadraticCurveTo(-16967, -10221, -16889, -10956);
      a.lineTo(-16619, -13093);
      a.lineTo(-16563, -13370);
      a.closePath()
    }, function(a) {
      a.transform(0.48,
        0, 0, 0.48, 14397, 11206);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-17158, -7515);
      a.quadraticCurveTo(-16740, -6331, -16583, -6107);
      a.quadraticCurveTo(-15111, -4002, -12697, -3075);
      a.quadraticCurveTo(-12361, -2946, -12025, -2819);
      a.quadraticCurveTo(-9699, -1941, -7350, -1156);
      a.quadraticCurveTo(-7038, -1050, -6817, -807);
      a.quadraticCurveTo(-6321, -262, -6249, 490);
      a.quadraticCurveTo(-6206, 937, -5919, 1292);
      a.lineTo(-5460, 1056);
      a.quadraticCurveTo(-3563, 76, -1547, -624);
      a.quadraticCurveTo(-2976, -732, -4328, -1208);
      a.quadraticCurveTo(-5822, -1736, -7401, -1860);
      a.lineTo(-8019, -1932);
      a.lineTo(-8698, -2014);
      a.lineTo(-9472, -2204);
      a.quadraticCurveTo(-10881, -2589, -12213, -3193);
      a.lineTo(-12611, -3372);
      a.lineTo(-12611, -3370);
      a.quadraticCurveTo(-13897, -3935, -14962, -4846);
      a.quadraticCurveTo(-15590, -5385, -15959, -6117);
      a.quadraticCurveTo(-16117, -6430, -16291, -6707);
      a.lineTo(-16291, -6708);
      a.quadraticCurveTo(-16811, -7467, -17158, -7515);
      a.closePath();
      a.moveTo(-14076, -2719);
      a.quadraticCurveTo(-12325, -655, -9952, 740);
      a.lineTo(-9710, 932);
      a.lineTo(-9525, 1064);
      a.quadraticCurveTo(-8637, 1634, -7892, 2359);
      a.quadraticCurveTo(-7871, 2380, -7853, 2406);
      a.lineTo(-7474, 2717);
      a.lineTo(-6935, 2885);
      a.lineTo(-6161, 2702);
      a.lineTo(-6106, 2707);
      a.quadraticCurveTo(-6056, 2711, -6007, 2711);
      a.quadraticCurveTo(-5645, 2711, -5338, 2508);
      a.lineTo(-4590, 2342);
      a.lineTo(-4506, 2349);
      a.quadraticCurveTo(-4486, 2350, -4466, 2350);
      a.quadraticCurveTo(-4178, 2350, -3927, 2214);
      a.lineTo(-3271, 2104);
      a.quadraticCurveTo(-3477, 2029, -3686, 1967);
      a.lineTo(-3913, 1899);
      a.quadraticCurveTo(-4609, 2136, -5346, 2266);
      a.quadraticCurveTo(-5961, 2374, -6541, 2610);
      a.lineTo(-7106, 2020);
      a.lineTo(-7582, 253);
      a.quadraticCurveTo(-7580, 25, -7715, -162);
      a.lineTo(-7749, -208);
      a.lineTo(-8055, -731);
      a.lineTo(-8500, -904);
      a.lineTo(-8500, -904);
      a.quadraticCurveTo(-8100, -179, -8113, 657);
      a.quadraticCurveTo(-8116, 872, -8142, 1089);
      a.quadraticCurveTo(-10372, -936, -13152, -2253);
      a.quadraticCurveTo(-13618, -2473, -14076, -2719);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11206);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-10246, -2020);
      a.lineTo(-10715, -2236);
      a.moveTo(-8698, -2014);
      a.lineTo(-8019, -1932);
      a.moveTo(-12611, -3370);
      a.lineTo(-12611, -3372);
      a.moveTo(-11821, -884);
      a.lineTo(-12515, -1430);
      a.moveTo(-10829, -51);
      a.lineTo(-11504, -629);
      a.moveTo(-8394, -1072);
      a.lineTo(-9049, -1466);
      a.moveTo(-7749, -208);
      a.lineTo(-8055, -731);
      a.moveTo(-9952, 740);
      a.lineTo(-10561, 181);
      a.moveTo(-6728, -1740);
      a.lineTo(-7401, -1860);
      a.moveTo(-5737, -1390);
      a.lineTo(-6345, -1640);
      a.moveTo(-4308, -841);
      a.lineTo(-3481, -609);
      a.moveTo(-5228, -1257);
      a.lineTo(-4587, -967);
      a.moveTo(-3130, -551);
      a.lineTo(-2447, -536);
      a.moveTo(-1481, 1907);
      a.lineTo(-2487, 2E3);
      a.moveTo(-7106, 2020);
      a.lineTo(-7582, 253);
      a.moveTo(-6161, 2702);
      a.lineTo(-6935, 2885);
      a.moveTo(-7474, 2717);
      a.lineTo(-7853, 2406);
      a.moveTo(-9525, 1064);
      a.lineTo(-9128, 1367);
      a.moveTo(-3271, 2104);
      a.lineTo(-3927, 2214);
      a.moveTo(-4590, 2342);
      a.lineTo(-5338, 2508);
      a.moveTo(-3218, 2095);
      a.lineTo(-3271, 2104);
      a.moveTo(-9710,
        932);
      a.lineTo(-9525, 1064);
      a.moveTo(-16735, -5275);
      a.lineTo(-17198, -6014);
      a.moveTo(-14315, -2841);
      a.lineTo(-15233, -3624);
      a.moveTo(-12973, -1787);
      a.lineTo(-13806, -2432);
      a.moveTo(-15699, -4051);
      a.lineTo(-16393, -4817);
      a.moveTo(-13686, -3719);
      a.lineTo(-14558, -4354);
      a.moveTo(-12025, -2819);
      a.lineTo(-13189, -3418)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11206);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-12542, -3851);
      a.quadraticCurveTo(-13765, -4327, -14748, -5193);
      a.quadraticCurveTo(-15543, -5892, -16050, -6786);
      a.quadraticCurveTo(-16332, -7281, -16526, -7836);
      a.quadraticCurveTo(-16782, -8569, -16875, -9320);
      a.lineTo(-16880, -9285);
      a.moveTo(-12611, -3372);
      a.lineTo(-12213, -3193);
      a.quadraticCurveTo(-10881, -2589, -9472, -2204);
      a.moveTo(-17158, -7515);
      a.quadraticCurveTo(-17299, -7535, -17420, -7435);
      a.lineTo(-17480, -7284);
      a.quadraticCurveTo(-17616, -6908, -17466, -6534);
      a.lineTo(-17505, -6614);
      a.quadraticCurveTo(-17827, -7305, -17532, -8001);
      a.quadraticCurveTo(-17511, -8052, -17470, -8100);
      a.quadraticCurveTo(-17386, -8197, -17244, -8265);
      a.quadraticCurveTo(-17332, -8509, -17515, -8444);
      a.quadraticCurveTo(-17698, -8380, -17811, -8174);
      a.lineTo(-17769, -8328);
      a.quadraticCurveTo(-17616, -8867, -17259, -9367);
      a.lineTo(-17236, -9402);
      a.quadraticCurveTo(-17142, -9541, -16963, -9645);
      a.lineTo(-16938, -9600);
      a.quadraticCurveTo(-16911, -9551, -16896, -9501);
      a.quadraticCurveTo(-16967, -10221, -16889, -10956);
      a.lineTo(-16619, -13093);
      a.lineTo(-16563, -13370);
      a.lineTo(-16644, -13192);
      a.quadraticCurveTo(-16885, -12634, -17114, -12071);
      a.quadraticCurveTo(-17901, -10145, -17883, -8071);
      a.quadraticCurveTo(-17876, -7206, -17658, -6394);
      a.quadraticCurveTo(-17446, -5601, -17033, -4860);
      a.quadraticCurveTo(-16470, -3850, -15719, -2965);
      a.quadraticCurveTo(-14995, -2110, -14146, -1379);
      a.quadraticCurveTo(-13519, -840, -12817, -409);
      a.quadraticCurveTo(-10735, 868, -8798, 2352);
      a.quadraticCurveTo(-8087, 2896, -7307, 3338);
      a.quadraticCurveTo(-6601, 3147, -5900, 2948);
      a.quadraticCurveTo(-4468, 2536, -2980, 2491);
      a.lineTo(-746, 2377);
      a.quadraticCurveTo(-492, 1925, -248, 1468);
      a.quadraticCurveTo(570, -64, -306, -1457);
      a.lineTo(-984, -1340);
      a.quadraticCurveTo(-2470, -1131, -3933, -1480);
      a.quadraticCurveTo(-5368, -1825, -6828, -2051);
      a.quadraticCurveTo(-8373, -2288, -9863, -2758);
      a.quadraticCurveTo(-11248, -3193, -12540, -3854);
      a.moveTo(-16875, -9320);
      a.quadraticCurveTo(-16868, -9412, -16896, -9501);
      a.lineTo(-16875, -9320);
      a.closePath();
      a.moveTo(-17158, -7515);
      a.quadraticCurveTo(-16811, -7467, -16291, -6708);
      a.lineTo(-16291, -6707);
      a.quadraticCurveTo(-16117, -6430, -15959, -6117);
      a.quadraticCurveTo(-15590, -5385, -14962, -4846);
      a.quadraticCurveTo(-13897, -3935, -12611, -3370);
      a.moveTo(-16291, -6708);
      a.lineTo(-16291, -6707)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11383);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(29, -2730);
      a.quadraticCurveTo(18, -2730, 8, -2730);
      a.quadraticCurveTo(-775, -2725, -1473, -2385);
      a.quadraticCurveTo(-1598, -2324, -1712, -2247);
      a.quadraticCurveTo(-1835, -2165, -1945, -2063);
      a.lineTo(-2105, -1920);
      a.quadraticCurveTo(-2051, -1145, -1854, -394);
      a.quadraticCurveTo(-1658, 357, -1281, 1029);
      a.lineTo(-1275, 1040);
      a.quadraticCurveTo(-893, 1719, -384, 2301);
      a.quadraticCurveTo(-137, 2582, 102, 2582);
      a.quadraticCurveTo(356, 2582, 602, 2267);
      a.quadraticCurveTo(800, 2015, 923, 1716);
      a.quadraticCurveTo(1200, 1045, 1441, 361);
      a.quadraticCurveTo(1694, -358, 1875, -1100);
      a.quadraticCurveTo(2015, -1676, 1895, -2258);
      a.lineTo(1717, -2349);
      a.quadraticCurveTo(1597, -2407, 1472, -2456);
      a.quadraticCurveTo(775, -2730, 29, -2730);
      a.closePath();
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031,
        2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1806, 2714, -1672, 2714);
      a.quadraticCurveTo(-1609, 2714, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.quadraticCurveTo(-1628, 2191, -1784, 2034);
      a.quadraticCurveTo(-1882, 1935, -1969, 1830);
      a.closePath();
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285);
      a.quadraticCurveTo(1453,
        2524, 1069, 2647);
      a.quadraticCurveTo(1240, 2920, 1464, 3159);
      a.lineTo(1495, 3185);
      a.quadraticCurveTo(1485, 2702, 1801, 2702);
      a.quadraticCurveTo(1871, 2702, 1958, 2726);
      a.quadraticCurveTo(2051, 2751, 2109, 2838);
      a.lineTo(2146, 2897);
      a.quadraticCurveTo(2234, 2453, 2090, 2025);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11383);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1895, -2258);
      a.quadraticCurveTo(2015, -1676, 1875, -1100);
      a.quadraticCurveTo(1694, -358, 1441, 361);
      a.quadraticCurveTo(1200, 1045, 923, 1716);
      a.quadraticCurveTo(800,
        2015, 602, 2267);
      a.quadraticCurveTo(356, 2582, 102, 2582);
      a.quadraticCurveTo(-137, 2582, -384, 2301);
      a.quadraticCurveTo(-893, 1719, -1275, 1040);
      a.lineTo(-1281, 1029);
      a.lineTo(-1281, 1029);
      a.quadraticCurveTo(-1281, 1029, -1281, 1029);
      a.quadraticCurveTo(-1658, 357, -1854, -394);
      a.quadraticCurveTo(-2051, -1145, -2105, -1920);
      a.quadraticCurveTo(-2607, -1485, -3179, -1168);
      a.lineTo(-3154, -913);
      a.quadraticCurveTo(-3092, -110, -3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882,
        1935, -1784, 2034);
      a.quadraticCurveTo(-1628, 2191, -1457, 2316);
      a.quadraticCurveTo(-1193, 2510, -895, 2627);
      a.quadraticCurveTo(-716, 2697, -524, 2739);
      a.quadraticCurveTo(-230, 2803, 76, 2803);
      a.quadraticCurveTo(518, 2803, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782, 2285);
      a.quadraticCurveTo(1942, 2169, 2090, 2025);
      a.quadraticCurveTo(2251, 1867, 2398, 1675);
      a.quadraticCurveTo(2848, 1083, 3270, 825);
      a.quadraticCurveTo(3289, 538, 3323, 253);
      a.quadraticCurveTo(3408, -448, 3399, -1154);
      a.quadraticCurveTo(3043, -1322,
        2763, -1603);
      a.quadraticCurveTo(2369, -1999, 1895, -2258);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11383);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1717, -2349);
      a.lineTo(1791, -2179);
      a.moveTo(1971, -1331);
      a.quadraticCurveTo(1976, -1189, 1966, -1044);
      a.moveTo(1884, -1896);
      a.quadraticCurveTo(1918, -1769, 1940, -1641);
      a.moveTo(1925, -735);
      a.lineTo(1908, -654);
      a.lineTo(1866, -463);
      a.moveTo(-1712, -2247);
      a.lineTo(-1741, -2148);
      a.moveTo(-1785, -1953);
      a.quadraticCurveTo(-1818, -1781, -1826, -1605);
      a.moveTo(-1281, 1029);
      a.lineTo(-1285, 1001);
      a.moveTo(-1715, -727);
      a.lineTo(-1688, -640);
      a.lineTo(-1626, -443);
      a.moveTo(-1821, -1306);
      a.quadraticCurveTo(-1810, -1147, -1778, -986);
      a.moveTo(-1400, 404);
      a.lineTo(-1338, 701);
      a.moveTo(-1262, 1557);
      a.quadraticCurveTo(-1273, 1698, -1300, 1834);
      a.moveTo(-1281, 1029);
      a.quadraticCurveTo(-1265, 1153, -1259, 1273);
      a.moveTo(-1457, 2316);
      a.quadraticCurveTo(-1410, 2213, -1373,
        2107);
      a.moveTo(1782, 2285);
      a.quadraticCurveTo(1730, 2222, 1688, 2157);
      a.moveTo(1484, 1644);
      a.quadraticCurveTo(1503, 1765, 1546, 1881);
      a.moveTo(1534, 1012);
      a.lineTo(1508, 1124);
      a.quadraticCurveTo(1484, 1229, 1475, 1330);
      a.moveTo(1665, 437);
      a.lineTo(1603, 712);
      a.moveTo(-1547, -174);
      a.lineTo(-1468, 121);
      a.moveTo(1798, -156);
      a.lineTo(1735, 128)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11383);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin =
        "round";
      a.beginPath();
      a.moveTo(-2105, -1920);
      a.lineTo(-1945, -2063);
      a.quadraticCurveTo(-1835, -2165, -1712, -2247);
      a.quadraticCurveTo(-1598, -2324, -1473, -2385);
      a.quadraticCurveTo(-775, -2725, 8, -2730);
      a.quadraticCurveTo(765, -2734, 1472, -2456);
      a.quadraticCurveTo(1597, -2407, 1717, -2349);
      a.lineTo(1895, -2258);
      a.quadraticCurveTo(2369, -1999, 2763, -1603);
      a.quadraticCurveTo(3043, -1322, 3399, -1154);
      a.lineTo(3461, -1126);
      a.moveTo(-3226, -1142);
      a.lineTo(-3179, -1168);
      a.quadraticCurveTo(-2607, -1485, -2105, -1920);
      a.moveTo(-3224,
        679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628, 2191, -1457, 2316);
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1749, 2657, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.moveTo(-895, 2627);
      a.quadraticCurveTo(-716, 2697, -524, 2739);
      a.quadraticCurveTo(190, 2895, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782, 2285);
      a.moveTo(-3242, 673);
      a.lineTo(-3224, 679);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(3391, 751, 3509, 704);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(2848, 1083, 2398, 1675);
      a.quadraticCurveTo(2251, 1867, 2090, 2025);
      a.quadraticCurveTo(2234, 2453, 2146, 2897);
      a.lineTo(2109, 2838);
      a.quadraticCurveTo(2051, 2751, 1958, 2726);
      a.quadraticCurveTo(1483, 2595, 1495, 3185);
      a.lineTo(1464,
        3159);
      a.quadraticCurveTo(1240, 2920, 1069, 2647);
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10751);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.quadraticCurveTo(1866, -1390, 1927, -1547);
      a.quadraticCurveTo(2065, -1909, 1846, -2264);
      a.closePath();
      a.moveTo(-1866, -2414);
      a.quadraticCurveTo(-1988, -2163, -1979, -1755);
      a.quadraticCurveTo(-1973, -1467, -1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.closePath();
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1187, -981, 1265, -981);
      a.quadraticCurveTo(1268, -981, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.quadraticCurveTo(1602, -2564, 1486, -2661);
      a.closePath();
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1591, -2730, -1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1398, -906, -1198, -906);
      a.quadraticCurveTo(-1195, -906, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.lineTo(-1158, -2446);
      a.quadraticCurveTo(-1266, -2592, -1444, -2773);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10751);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(1691, -2467);
      a.lineTo(1617, -2397);
      a.quadraticCurveTo(1036, -1774, 1540, -1045);
      a.quadraticCurveTo(1681, -1119,
        1789, -1277);
      a.lineTo(1766, -1339);
      a.quadraticCurveTo(1594, -1821, 1846, -2264);
      a.quadraticCurveTo(1783, -2366, 1691, -2467);
      a.closePath();
      a.moveTo(-1706, -2639);
      a.quadraticCurveTo(-1719, -2639, -1719, -2618);
      a.quadraticCurveTo(-1808, -2534, -1866, -2414);
      a.lineTo(-1839, -2375);
      a.quadraticCurveTo(-1463, -1799, -1881, -1276);
      a.quadraticCurveTo(-1828, -1165, -1546, -963);
      a.quadraticCurveTo(-1083, -1736, -1560, -2461);
      a.quadraticCurveTo(-1620, -2552, -1697, -2637);
      a.quadraticCurveTo(-1702, -2639, -1706, -2639);
      a.closePath()
    }, function(a) {
      a.transform(0.48,
        0, 0, 0.48, 14924, 10751);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(504, -7675);
      a.quadraticCurveTo(483, -7675, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.lineTo(72, -7173);
      a.quadraticCurveTo(-75, -6552, -84, -5920);
      a.lineTo(0, -5470);
      a.quadraticCurveTo(3, -5138, -4, -4806);
      a.lineTo(-55, -2986);
      a.quadraticCurveTo(-60, -2829, -132, -2714);
      a.quadraticCurveTo(-249, -2531, -379, -2531);
      a.quadraticCurveTo(-522, -2531, -683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.quadraticCurveTo(-1286, -3404, -1395, -3404);
      a.quadraticCurveTo(-1475, -3404, -1555, -3334);
      a.quadraticCurveTo(-1801, -3121, -1548, -2877);
      a.lineTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.quadraticCurveTo(-811, -1894, -769, -1831);
      a.quadraticCurveTo(-380, -1249, -298, -527);
      a.quadraticCurveTo(-189, 432, -50, 1385);
      a.lineTo(-38, 1575);
      a.quadraticCurveTo(14, 2265, -214, 2911);
      a.quadraticCurveTo(-140, 3258, -59, 3411);
      a.quadraticCurveTo(33,
        3510, 122, 3510);
      a.quadraticCurveTo(271, 3510, 409, 3232);
      a.quadraticCurveTo(627, 2788, 824, 1738);
      a.quadraticCurveTo(910, 1280, 991, 893);
      a.quadraticCurveTo(1073, 494, 1151, 169);
      a.lineTo(1190, 6);
      a.quadraticCurveTo(1359, -675, 1540, -1045);
      a.lineTo(1540, -1045);
      a.quadraticCurveTo(1419, -982, 1272, -982);
      a.quadraticCurveTo(1269, -981, 1265, -981);
      a.quadraticCurveTo(1187, -981, 1125, -1322);
      a.quadraticCurveTo(1059, -1678, 1060, -2423);
      a.quadraticCurveTo(1274, -2525, 1486, -2661);
      a.lineTo(1592, -2731);
      a.quadraticCurveTo(1934, -2966,
        1778, -3215);
      a.quadraticCurveTo(1683, -3365, 1533, -3365);
      a.quadraticCurveTo(1434, -3365, 1310, -3300);
      a.lineTo(1238, -3260);
      a.quadraticCurveTo(1248, -3864, 882, -4324);
      a.quadraticCurveTo(516, -4785, 384, -5168);
      a.quadraticCurveTo(251, -5551, 317, -6093);
      a.quadraticCurveTo(382, -6636, 557, -7180);
      a.quadraticCurveTo(608, -7337, 621, -7444);
      a.lineTo(621, -7444);
      a.quadraticCurveTo(621, -7444, 621, -7444);
      a.quadraticCurveTo(649, -7675, 504, -7675);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10751);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(110, -7354);
      a.quadraticCurveTo(-40, -7132, -215, -6755);
      a.quadraticCurveTo(-613, -5895, -596, -5022);
      a.quadraticCurveTo(-591, -4787, -614, -4479);
      a.lineTo(-635, -4248);
      a.quadraticCurveTo(-1077, -3768, -1179, -3274);
      a.quadraticCurveTo(-1125, -3208, -1071, -3109);
      a.quadraticCurveTo(-915, -2821, -683, -2750);
      a.quadraticCurveTo(-523, -2531, -379, -2531);
      a.quadraticCurveTo(-248, -2531, -132, -2714);
      a.quadraticCurveTo(-60, -2829, -55, -2986);
      a.lineTo(-4, -4806);
      a.quadraticCurveTo(3, -5138, 0, -5470);
      a.lineTo(-84, -5920);
      a.quadraticCurveTo(-75, -6552, 72, -7173);
      a.lineTo(110, -7354);
      a.closePath();
      a.moveTo(-1077, -2330);
      a.lineTo(-1048, -1864);
      a.quadraticCurveTo(-1025, -1437, -1191, -906);
      a.quadraticCurveTo(-1194, -906, -1198, -906);
      a.quadraticCurveTo(-1398, -906, -1546, -963);
      a.lineTo(-1546, -963);
      a.quadraticCurveTo(-1223, -398, -997, 123);
      a.quadraticCurveTo(-786, 610, -659, 1058);
      a.quadraticCurveTo(-565, 1388, -484, 1706);
      a.quadraticCurveTo(-338, 2281, -233, 2814);
      a.lineTo(-214, 2911);
      a.quadraticCurveTo(14, 2265, -38, 1575);
      a.lineTo(-50, 1385);
      a.quadraticCurveTo(-189,
        432, -298, -527);
      a.quadraticCurveTo(-380, -1249, -769, -1831);
      a.quadraticCurveTo(-811, -1894, -875, -1936);
      a.lineTo(-875, -1936);
      a.quadraticCurveTo(-875, -1936, -875, -1936);
      a.quadraticCurveTo(-901, -2012, -930, -2073);
      a.quadraticCurveTo(-993, -2202, -1077, -2330);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10751);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(621, -7444);
      a.quadraticCurveTo(653, -7709, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.moveTo(621, -7444);
      a.quadraticCurveTo(608, -7337, 557, -7180);
      a.quadraticCurveTo(382, -6636, 317, -6093);
      a.quadraticCurveTo(251, -5551, 384, -5168);
      a.quadraticCurveTo(516, -4785, 882, -4324);
      a.quadraticCurveTo(1248, -3864, 1238, -3260);
      a.lineTo(1310, -3300);
      a.quadraticCurveTo(1621, -3464, 1778, -3215);
      a.quadraticCurveTo(1934, -2966, 1592, -2731);
      a.lineTo(1486, -2661);
      a.quadraticCurveTo(1602, -2564, 1691, -2467);
      a.quadraticCurveTo(1783, -2366, 1846, -2264);
      a.quadraticCurveTo(2065, -1909, 1927, -1547);
      a.quadraticCurveTo(1866, -1390, 1789, -1277);
      a.quadraticCurveTo(1681, -1119, 1540, -1045);
      a.quadraticCurveTo(1359, -675, 1190, 6);
      a.lineTo(1151, 169);
      a.quadraticCurveTo(1073, 494, 991, 893);
      a.quadraticCurveTo(910, 1280, 824, 1738);
      a.quadraticCurveTo(627, 2788, 409, 3232);
      a.quadraticCurveTo(190, 3675, -59, 3411);
      a.quadraticCurveTo(-140, 3258, -214, 2911);
      a.lineTo(-233, 2814);
      a.quadraticCurveTo(-338, 2281, -484, 1706);
      a.quadraticCurveTo(-565, 1388, -659, 1058);
      a.quadraticCurveTo(-786, 610, -997, 123);
      a.quadraticCurveTo(-1223, -398, -1546, -963);
      a.quadraticCurveTo(-1828, -1165, -1881, -1276);
      a.quadraticCurveTo(-1973, -1467, -1979, -1755);
      a.quadraticCurveTo(-1988, -2163, -1866, -2414);
      a.quadraticCurveTo(-1808, -2534, -1719, -2618);
      a.moveTo(-1697, -2637);
      a.quadraticCurveTo(-1591, -2730, -1444, -2773);
      a.lineTo(-1548, -2877);
      a.quadraticCurveTo(-1801, -3121, -1555, -3334);
      a.quadraticCurveTo(-1365, -3500, -1179, -3274);
      a.quadraticCurveTo(-1077, -3768, -635, -4248);
      a.lineTo(-614, -4479);
      a.quadraticCurveTo(-591, -4787, -596, -5022);
      a.quadraticCurveTo(-613, -5895, -215, -6755);
      a.quadraticCurveTo(-40, -7132, 110, -7354);
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1190, -967, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.moveTo(1060, -2423);
      a.lineTo(901, -2353);
      a.quadraticCurveTo(553, -2210, 543, -1729);
      a.moveTo(483, -2694);
      a.quadraticCurveTo(941, -3088, 1238, -3260);
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.moveTo(-683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.moveTo(-421, -2734);
      a.quadraticCurveTo(-562, -2713, -683, -2750);
      a.moveTo(-1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.moveTo(-1719, -2618);
      a.lineTo(-1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1395, -905, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.moveTo(-875, -1936);
      a.quadraticCurveTo(-822, -1782, -783, -1568)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10751);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(436, -7172);
      a.quadraticCurveTo(526, -7323, 621, -7444);
      a.moveTo(-84, -5920);
      a.lineTo(-8, -6155);
      a.moveTo(128, -6531);
      a.quadraticCurveTo(192, -6693, 259, -6837);
      a.moveTo(683, -1206);
      a.lineTo(537, -1172);
      a.lineTo(538, -1065);
      a.quadraticCurveTo(536, -876, 594, -692);
      a.lineTo(683, -723);
      a.moveTo(362, -1145);
      a.lineTo(537, -1172);
      a.lineTo(563, -1508);
      a.moveTo(1151, 169);
      a.lineTo(790, -299);
      a.lineTo(643, -220);
      a.moveTo(594, -692);
      a.lineTo(790, -299);
      a.lineTo(945, -361);
      a.moveTo(482, -663);
      a.lineTo(594, -692);
      a.moveTo(813, 958);
      a.quadraticCurveTo(901, 924, 991, 893);
      a.moveTo(387, 1139);
      a.quadraticCurveTo(512, 1078, 641, 1025);
      a.moveTo(-50, 1385);
      a.quadraticCurveTo(33, 1331, 120, 1281);
      a.lineTo(147, 1266);
      a.moveTo(-302, -5223);
      a.lineTo(-203, -5526);
      a.moveTo(-88, -5905);
      a.lineTo(-84, -5920);
      a.moveTo(-614, -4479);
      a.quadraticCurveTo(-526, -4617, -410, -4920);
      a.moveTo(-764, -1206);
      a.lineTo(-724, -996);
      a.lineTo(-522, -965);
      a.moveTo(-997, 123);
      a.lineTo(-818, -377);
      a.lineTo(-905, -421);
      a.moveTo(-818, -377);
      a.lineTo(-779, -541);
      a.quadraticCurveTo(-726, -763, -724, -996);
      a.lineTo(-864, -1005);
      a.moveTo(-818, -377);
      a.lineTo(-643, -281);
      a.moveTo(-484, 1706);
      a.quadraticCurveTo(-405, 1633, -318, 1569);
      a.moveTo(-75, 1401);
      a.lineTo(-50, 1385)
    }]
  }
}

function make_adult_4(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11191);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-17664, -3325);
      a.quadraticCurveTo(-17235, -3325, -17058, -2828);
      a.quadraticCurveTo(-17032, -2757, -16560, -1712);
      a.quadraticCurveTo(-16403, -1456, -16250, -1172);
      a.quadraticCurveTo(-15863, -436, -15184, 123);
      a.quadraticCurveTo(-13987, 1133, -12573, 1779);
      a.lineTo(-12573, 1776);
      a.lineTo(-12145, 1968);
      a.quadraticCurveTo(-10717, 2618, -9401, 2735);
      a.quadraticCurveTo(-9212, 2745, -9009, 2745);
      a.quadraticCurveTo(-8840, 2745, -8660, 2738);
      a.quadraticCurveTo(-8302, 2669, -7952, 2555);
      a.quadraticCurveTo(-7632, 2449, -7323, 2315);
      a.quadraticCurveTo(-5749, 1491, -4310, 886);
      a.quadraticCurveTo(-3009, 346, -1600, -197);
      a.lineTo(-1600, -197);
      a.quadraticCurveTo(-3562, 1518, -5164, 3845);
      a.lineTo(-5555, 4365);
      a.quadraticCurveTo(-5856, 4262, -5952, 3887);
      a.quadraticCurveTo(-6106, 3250, -6640, 3029);
      a.quadraticCurveTo(-6777, 2973, -6939, 2973);
      a.quadraticCurveTo(-7062, 2973, -7199, 3005);
      a.quadraticCurveTo(-7880, 3164, -8520, 3164);
      a.quadraticCurveTo(-9063, 3164, -9576, 3049);
      a.quadraticCurveTo(-10687, 2838, -11909, 2394);
      a.quadraticCurveTo(-12260, 2271, -12622, 2128);
      a.quadraticCurveTo(-15359, 957, -16871, -1185);
      a.quadraticCurveTo(-16991, -1362, -17696, -3324);
      a.quadraticCurveTo(-17680, -3325, -17664, -3325);
      a.closePath();
      a.moveTo(-13958, 2593);
      a.lineTo(-13958, 2593);
      a.quadraticCurveTo(-13438, 2893, -12929, 3137);
      a.quadraticCurveTo(-11408, 3894, -10138, 4554);
      a.quadraticCurveTo(-8912, 5228, -7653, 5553);
      a.quadraticCurveTo(-7660, 5353, -7694,
        5164);
      a.quadraticCurveTo(-7809, 4408, -8316, 3832);
      a.lineTo(-7844, 3808);
      a.lineTo(-7469, 4167);
      a.lineTo(-7429, 4193);
      a.quadraticCurveTo(-7271, 4298, -7241, 4511);
      a.quadraticCurveTo(-6883, 5198, -6544, 5704);
      a.quadraticCurveTo(-6245, 5751, -5961, 5770);
      a.quadraticCurveTo(-5470, 5251, -4938, 4760);
      a.quadraticCurveTo(-4456, 4155, -3421, 3099);
      a.quadraticCurveTo(-3292, 3149, -3166, 3184);
      a.quadraticCurveTo(-3059, 3215, -3011, 3286);
      a.lineTo(-3018, 3284);
      a.quadraticCurveTo(-3034, 3277, -3057, 3277);
      a.quadraticCurveTo(-3371, 3530, -3684,
        3803);
      a.quadraticCurveTo(-3912, 4086, -4188, 4277);
      a.lineTo(-4262, 4326);
      a.lineTo(-4907, 4935);
      a.quadraticCurveTo(-5192, 5324, -5564, 5564);
      a.lineTo(-5613, 5596);
      a.quadraticCurveTo(-5946, 5899, -6279, 6181);
      a.quadraticCurveTo(-6529, 6287, -6786, 6385);
      a.quadraticCurveTo(-6976, 6394, -7177, 6394);
      a.lineTo(-7220, 6384);
      a.quadraticCurveTo(-8057, 6306, -8941, 6088);
      a.lineTo(-9125, 6031);
      a.quadraticCurveTo(-9249, 5982, -9369, 5928);
      a.quadraticCurveTo(-11650, 5245, -13958, 2593);
      a.closePath();
      a.moveTo(-16370, -8040);
      a.lineTo(-16470, -7881);
      a.quadraticCurveTo(-16767, -7383, -17024, -6876);
      a.quadraticCurveTo(-17873, -5131, -17970, -3134);
      a.quadraticCurveTo(-18030, -2228, -17815, -1361);
      a.quadraticCurveTo(-17638, -648, -17274, 39);
      a.quadraticCurveTo(-16674, 1135, -15673, 2286);
      a.quadraticCurveTo(-14713, 3384, -13661, 4250);
      a.quadraticCurveTo(-12888, 4882, -12134, 5289);
      a.quadraticCurveTo(-9955, 6554, -8075, 6806);
      a.quadraticCurveTo(-7941, 6814, -7808, 6814);
      a.quadraticCurveTo(-7175, 6814, -6557, 6641);
      a.quadraticCurveTo(-5949, 6162, -5357, 5594);
      a.quadraticCurveTo(-4150,
        4379, -2819, 3487);
      a.quadraticCurveTo(-1820, 2823, -740, 2498);
      a.quadraticCurveTo(-502, 2E3, -256, 1509);
      a.quadraticCurveTo(587, -104, -340, -1410);
      a.quadraticCurveTo(-2492, -806, -3910, 119);
      a.quadraticCurveTo(-5328, 1045, -6773, 1781);
      a.quadraticCurveTo(-7537, 2151, -8341, 2264);
      a.quadraticCurveTo(-8630, 2292, -8902, 2292);
      a.quadraticCurveTo(-9385, 2292, -9811, 2203);
      a.quadraticCurveTo(-11136, 1952, -12545, 1224);
      a.lineTo(-12548, 1227);
      a.quadraticCurveTo(-13882, 692, -14963, -214);
      a.quadraticCurveTo(-15814, -924, -16327, -1795);
      a.quadraticCurveTo(-16627, -2305, -16812, -2871);
      a.quadraticCurveTo(-17035, -3583, -17081, -4293);
      a.quadraticCurveTo(-17131, -5068, -16971, -5841);
      a.lineTo(-16955, -5909);
      a.quadraticCurveTo(-16740, -6864, -16464, -7791);
      a.lineTo(-16370, -8040);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11191);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-17664, -3325);
      a.quadraticCurveTo(-17680, -3325, -17696, -3324);
      a.quadraticCurveTo(-16991, -1362, -16871, -1185);
      a.quadraticCurveTo(-15359, 957, -12622, 2128);
      a.quadraticCurveTo(-12260, 2271, -11909, 2394);
      a.quadraticCurveTo(-10687, 2838, -9576, 3049);
      a.quadraticCurveTo(-9063, 3164, -8520, 3164);
      a.quadraticCurveTo(-7881, 3164, -7199, 3005);
      a.quadraticCurveTo(-7062, 2973, -6939, 2973);
      a.quadraticCurveTo(-6777, 2973, -6640, 3029);
      a.quadraticCurveTo(-6106, 3250, -5952, 3887);
      a.quadraticCurveTo(-5856, 4262, -5555, 4365);
      a.lineTo(-5164, 3845);
      a.quadraticCurveTo(-3562, 1518, -1600, -197);
      a.lineTo(-1600, -197);
      a.quadraticCurveTo(-3009, 346, -4310, 886);
      a.quadraticCurveTo(-5749, 1491, -7323, 2315);
      a.quadraticCurveTo(-7632, 2449, -7952, 2555);
      a.quadraticCurveTo(-8302, 2669, -8660, 2738);
      a.quadraticCurveTo(-8840, 2745, -9009, 2745);
      a.quadraticCurveTo(-9212, 2745, -9401, 2735);
      a.quadraticCurveTo(-10717, 2618, -12145, 1968);
      a.lineTo(-12573, 1776);
      a.lineTo(-12573, 1779);
      a.quadraticCurveTo(-13987, 1133, -15184, 123);
      a.quadraticCurveTo(-15863, -436, -16250, -1172);
      a.quadraticCurveTo(-16403, -1456, -16560, -1712);
      a.quadraticCurveTo(-17032, -2757, -17058, -2828);
      a.quadraticCurveTo(-17235, -3325, -17664, -3325);
      a.closePath();
      a.moveTo(-13958, 2593);
      a.lineTo(-13958, 2593);
      a.quadraticCurveTo(-11650,
        5245, -9369, 5928);
      a.quadraticCurveTo(-9249, 5982, -9125, 6031);
      a.lineTo(-8941, 6088);
      a.quadraticCurveTo(-8057, 6306, -7220, 6384);
      a.lineTo(-7177, 6394);
      a.quadraticCurveTo(-6976, 6394, -6786, 6385);
      a.quadraticCurveTo(-6529, 6287, -6279, 6181);
      a.quadraticCurveTo(-5946, 5899, -5613, 5596);
      a.lineTo(-5564, 5564);
      a.quadraticCurveTo(-5192, 5324, -4907, 4935);
      a.lineTo(-4262, 4326);
      a.lineTo(-4188, 4277);
      a.quadraticCurveTo(-3912, 4086, -3684, 3803);
      a.quadraticCurveTo(-3371, 3530, -3057, 3277);
      a.quadraticCurveTo(-3034, 3277, -3018, 3284);
      a.lineTo(-3011,
        3286);
      a.quadraticCurveTo(-3059, 3215, -3166, 3184);
      a.quadraticCurveTo(-3292, 3149, -3421, 3099);
      a.quadraticCurveTo(-4456, 4155, -4938, 4760);
      a.quadraticCurveTo(-5470, 5251, -5961, 5770);
      a.quadraticCurveTo(-6245, 5751, -6544, 5704);
      a.quadraticCurveTo(-6883, 5198, -7241, 4511);
      a.quadraticCurveTo(-7271, 4298, -7429, 4193);
      a.lineTo(-7469, 4167);
      a.lineTo(-7844, 3808);
      a.lineTo(-8316, 3832);
      a.quadraticCurveTo(-7809, 4408, -7694, 5164);
      a.quadraticCurveTo(-7660, 5353, -7653, 5553);
      a.quadraticCurveTo(-8912, 5228, -10138, 4554);
      a.quadraticCurveTo(-11408,
        3894, -12929, 3137);
      a.quadraticCurveTo(-13438, 2893, -13958, 2593);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11191);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-12573, 1779);
      a.lineTo(-12573, 1776);
      a.moveTo(-8660, 2738);
      a.quadraticCurveTo(-8302, 2669, -7952, 2555);
      a.moveTo(-17002, -367);
      a.quadraticCurveTo(-17232, -740, -17445, -1112);
      a.moveTo(-3134, 726);
      a.quadraticCurveTo(-2807,
        518, -2479, 333);
      a.moveTo(-6544, 5704);
      a.quadraticCurveTo(-6883, 5198, -7241, 4511);
      a.moveTo(-7469, 4167);
      a.lineTo(-7844, 3808);
      a.moveTo(-9369, 5928);
      a.quadraticCurveTo(-9683, 5756, -10005, 5548);
      a.moveTo(-1458, 2266);
      a.quadraticCurveTo(-1935, 2497, -2396, 2796);
      a.moveTo(-4267, 1237);
      a.quadraticCurveTo(-3869, 1057, -3471, 897);
      a.moveTo(-5662, 1717);
      a.quadraticCurveTo(-5963, 1808, -6268, 1886);
      a.moveTo(-5167, 1486);
      a.lineTo(-4539, 1312);
      a.moveTo(-4262, 4326);
      a.lineTo(-4907, 4935);
      a.moveTo(-5613, 5596);
      a.quadraticCurveTo(-5946,
        5899, -6279, 6181);
      a.moveTo(-6786, 6385);
      a.quadraticCurveTo(-6976, 6394, -7177, 6394);
      a.moveTo(-8941, 6088);
      a.quadraticCurveTo(-8741, 6156, -8541, 6208);
      a.moveTo(-3057, 3277);
      a.quadraticCurveTo(-3371, 3530, -3684, 3803);
      a.moveTo(-8231, 3615);
      a.quadraticCurveTo(-8605, 3550, -8934, 3429);
      a.moveTo(-6648, 2035);
      a.quadraticCurveTo(-6980, 2187, -7323, 2315);
      a.moveTo(-10092, 3098);
      a.lineTo(-10559, 2930);
      a.moveTo(-10286, 5371);
      a.quadraticCurveTo(-10640, 5142, -11009, 4877);
      a.moveTo(-11353, 4638);
      a.quadraticCurveTo(-11731, 4375, -12125,
        4083);
      a.moveTo(-9125, 6031);
      a.lineTo(-8941, 6088);
      a.moveTo(-13734, 1389);
      a.lineTo(-14724, 658);
      a.moveTo(-14227, 2445);
      a.lineTo(-15328, 1483);
      a.moveTo(-15876, 969);
      a.lineTo(-16654, 102);
      a.moveTo(-11909, 2394);
      a.quadraticCurveTo(-12532, 2082, -13175, 1737);
      a.moveTo(-12647, 3693);
      a.quadraticCurveTo(-13126, 3329, -13620, 2941)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11191);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-17081, -4293);
      a.quadraticCurveTo(-17131, -5068, -16971, -5841);
      a.lineTo(-16955, -5909);
      a.quadraticCurveTo(-16740, -6864, -16464, -7791);
      a.lineTo(-16370, -8040);
      a.lineTo(-16470, -7881);
      a.quadraticCurveTo(-16767, -7383, -17024, -6876);
      a.quadraticCurveTo(-17873, -5131, -17970, -3134);
      a.quadraticCurveTo(-18030, -2228, -17815, -1361);
      a.quadraticCurveTo(-17638, -648, -17274, 39);
      a.quadraticCurveTo(-16674, 1135, -15673, 2286);
      a.quadraticCurveTo(-14713, 3384, -13661, 4250);
      a.quadraticCurveTo(-12888, 4882, -12134,
        5289);
      a.quadraticCurveTo(-9955, 6554, -8075, 6806);
      a.quadraticCurveTo(-7304, 6850, -6557, 6641);
      a.quadraticCurveTo(-5949, 6162, -5357, 5594);
      a.quadraticCurveTo(-4150, 4379, -2819, 3487);
      a.quadraticCurveTo(-1820, 2823, -740, 2498);
      a.quadraticCurveTo(-502, 2E3, -256, 1509);
      a.quadraticCurveTo(587, -104, -340, -1410);
      a.quadraticCurveTo(-2492, -806, -3910, 119);
      a.quadraticCurveTo(-5328, 1045, -6773, 1781);
      a.quadraticCurveTo(-7537, 2151, -8341, 2264);
      a.quadraticCurveTo(-9146, 2342, -9811, 2203);
      a.quadraticCurveTo(-11136, 1952, -12545, 1224);
      a.moveTo(-12548, 1227);
      a.quadraticCurveTo(-13882, 692, -14963, -214);
      a.quadraticCurveTo(-15814, -924, -16327, -1795);
      a.quadraticCurveTo(-16627, -2305, -16812, -2871);
      a.quadraticCurveTo(-17035, -3583, -17081, -4293);
      a.quadraticCurveTo(-17596, -4474, -17781, -4122);
      a.quadraticCurveTo(-17834, -4020, -17843, -3890);
      a.quadraticCurveTo(-17752, -3977, -17637, -3948);
      a.quadraticCurveTo(-17540, -3921, -17477, -3825);
      a.quadraticCurveTo(-17535, -3853, -17599, -3860);
      a.lineTo(-17656, -3854);
      a.lineTo(-17662, -3852);
      a.quadraticCurveTo(-18105, -3325, -17744, -2647);
      a.quadraticCurveTo(-17826, -2995, -17696, -3324);
      a.quadraticCurveTo(-17242, -3343, -17058, -2828);
      a.quadraticCurveTo(-17032, -2757, -16560, -1712);
      a.quadraticCurveTo(-16403, -1456, -16250, -1172);
      a.quadraticCurveTo(-15863, -436, -15184, 123);
      a.quadraticCurveTo(-13987, 1133, -12573, 1779);
      a.moveTo(-12573, 1776);
      a.lineTo(-12145, 1968);
      a.quadraticCurveTo(-10717, 2618, -9401, 2735)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11191);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-17664, -3325);
      a.quadraticCurveTo(-17235, -3325, -17058, -2828);
      a.quadraticCurveTo(-17032, -2757, -16560, -1712);
      a.quadraticCurveTo(-16403, -1456, -16250, -1172);
      a.quadraticCurveTo(-15863, -436, -15184, 123);
      a.quadraticCurveTo(-13987, 1133, -12573, 1779);
      a.lineTo(-12573, 1776);
      a.lineTo(-12145, 1968);
      a.quadraticCurveTo(-10717, 2618, -9401, 2735);
      a.quadraticCurveTo(-9212, 2745, -9009, 2745);
      a.quadraticCurveTo(-8840, 2745, -8660, 2738);
      a.quadraticCurveTo(-8302, 2669, -7952, 2555);
      a.quadraticCurveTo(-7632, 2449, -7323, 2315);
      a.quadraticCurveTo(-5749, 1491, -4310, 886);
      a.quadraticCurveTo(-3009,
        346, -1600, -197);
      a.lineTo(-1600, -197);
      a.quadraticCurveTo(-3562, 1518, -5164, 3845);
      a.lineTo(-5555, 4365);
      a.quadraticCurveTo(-5856, 4262, -5952, 3887);
      a.quadraticCurveTo(-6106, 3250, -6640, 3029);
      a.quadraticCurveTo(-6777, 2973, -6939, 2973);
      a.quadraticCurveTo(-7062, 2973, -7199, 3005);
      a.quadraticCurveTo(-7880, 3164, -8520, 3164);
      a.quadraticCurveTo(-9063, 3164, -9576, 3049);
      a.quadraticCurveTo(-10687, 2838, -11909, 2394);
      a.quadraticCurveTo(-12260, 2271, -12622, 2128);
      a.quadraticCurveTo(-15359, 957, -16871, -1185);
      a.quadraticCurveTo(-16991, -1362, -17696, -3324);
      a.quadraticCurveTo(-17680, -3325, -17664, -3325);
      a.closePath();
      a.moveTo(-13958, 2593);
      a.lineTo(-13958, 2593);
      a.quadraticCurveTo(-13438, 2893, -12929, 3137);
      a.quadraticCurveTo(-11408, 3894, -10138, 4554);
      a.quadraticCurveTo(-8912, 5228, -7653, 5553);
      a.quadraticCurveTo(-7660, 5353, -7694, 5164);
      a.quadraticCurveTo(-7809, 4408, -8316, 3832);
      a.lineTo(-7844, 3808);
      a.lineTo(-7469, 4167);
      a.lineTo(-7429, 4193);
      a.quadraticCurveTo(-7271, 4298, -7241, 4511);
      a.quadraticCurveTo(-6883, 5198, -6544, 5704);
      a.quadraticCurveTo(-6245,
        5751, -5961, 5770);
      a.quadraticCurveTo(-5470, 5251, -4938, 4760);
      a.quadraticCurveTo(-4456, 4155, -3421, 3099);
      a.quadraticCurveTo(-3292, 3149, -3166, 3184);
      a.quadraticCurveTo(-3059, 3215, -3011, 3286);
      a.lineTo(-3018, 3284);
      a.quadraticCurveTo(-3034, 3277, -3057, 3277);
      a.quadraticCurveTo(-3371, 3530, -3684, 3803);
      a.quadraticCurveTo(-3912, 4086, -4188, 4277);
      a.lineTo(-4262, 4326);
      a.lineTo(-4907, 4935);
      a.quadraticCurveTo(-5192, 5324, -5564, 5564);
      a.lineTo(-5613, 5596);
      a.quadraticCurveTo(-5946, 5899, -6279, 6181);
      a.quadraticCurveTo(-6529,
        6287, -6786, 6385);
      a.quadraticCurveTo(-6976, 6394, -7177, 6394);
      a.lineTo(-7220, 6384);
      a.quadraticCurveTo(-8057, 6306, -8941, 6088);
      a.lineTo(-9125, 6031);
      a.quadraticCurveTo(-9249, 5982, -9369, 5928);
      a.quadraticCurveTo(-11650, 5245, -13958, 2593);
      a.closePath();
      a.moveTo(-16370, -8040);
      a.lineTo(-16470, -7881);
      a.quadraticCurveTo(-16767, -7383, -17024, -6876);
      a.quadraticCurveTo(-17873, -5131, -17970, -3134);
      a.quadraticCurveTo(-18030, -2228, -17815, -1361);
      a.quadraticCurveTo(-17638, -648, -17274, 39);
      a.quadraticCurveTo(-16674, 1135, -15673,
        2286);
      a.quadraticCurveTo(-14713, 3384, -13661, 4250);
      a.quadraticCurveTo(-12888, 4882, -12134, 5289);
      a.quadraticCurveTo(-9955, 6554, -8075, 6806);
      a.quadraticCurveTo(-7941, 6814, -7808, 6814);
      a.quadraticCurveTo(-7175, 6814, -6557, 6641);
      a.quadraticCurveTo(-5949, 6162, -5357, 5594);
      a.quadraticCurveTo(-4150, 4379, -2819, 3487);
      a.quadraticCurveTo(-1820, 2823, -740, 2498);
      a.quadraticCurveTo(-502, 2E3, -256, 1509);
      a.quadraticCurveTo(587, -104, -340, -1410);
      a.quadraticCurveTo(-2492, -806, -3910, 119);
      a.quadraticCurveTo(-5328, 1045, -6773,
        1781);
      a.quadraticCurveTo(-7537, 2151, -8341, 2264);
      a.quadraticCurveTo(-8630, 2292, -8902, 2292);
      a.quadraticCurveTo(-9385, 2292, -9811, 2203);
      a.quadraticCurveTo(-11136, 1952, -12545, 1224);
      a.lineTo(-12548, 1227);
      a.quadraticCurveTo(-13882, 692, -14963, -214);
      a.quadraticCurveTo(-15814, -924, -16327, -1795);
      a.quadraticCurveTo(-16627, -2305, -16812, -2871);
      a.quadraticCurveTo(-17035, -3583, -17081, -4293);
      a.quadraticCurveTo(-17131, -5068, -16971, -5841);
      a.lineTo(-16955, -5909);
      a.quadraticCurveTo(-16740, -6864, -16464, -7791);
      a.lineTo(-16370, -8040);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11191);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-17664, -3325);
      a.quadraticCurveTo(-17680, -3325, -17696, -3324);
      a.quadraticCurveTo(-16991, -1362, -16871, -1185);
      a.quadraticCurveTo(-15359, 957, -12622, 2128);
      a.quadraticCurveTo(-12260, 2271, -11909, 2394);
      a.quadraticCurveTo(-10687, 2838, -9576, 3049);
      a.quadraticCurveTo(-9063, 3164, -8520, 3164);
      a.quadraticCurveTo(-7881, 3164, -7199, 3005);
      a.quadraticCurveTo(-7062, 2973, -6939, 2973);
      a.quadraticCurveTo(-6777, 2973, -6640, 3029);
      a.quadraticCurveTo(-6106, 3250, -5952, 3887);
      a.quadraticCurveTo(-5856, 4262, -5555, 4365);
      a.lineTo(-5164, 3845);
      a.quadraticCurveTo(-3562, 1518, -1600, -197);
      a.lineTo(-1600, -197);
      a.quadraticCurveTo(-3009, 346, -4310, 886);
      a.quadraticCurveTo(-5749, 1491, -7323, 2315);
      a.quadraticCurveTo(-7632, 2449, -7952, 2555);
      a.quadraticCurveTo(-8302, 2669, -8660, 2738);
      a.quadraticCurveTo(-8840, 2745, -9009, 2745);
      a.quadraticCurveTo(-9212, 2745, -9401, 2735);
      a.quadraticCurveTo(-10717, 2618, -12145, 1968);
      a.lineTo(-12573, 1776);
      a.lineTo(-12573,
        1779);
      a.quadraticCurveTo(-13987, 1133, -15184, 123);
      a.quadraticCurveTo(-15863, -436, -16250, -1172);
      a.quadraticCurveTo(-16403, -1456, -16560, -1712);
      a.quadraticCurveTo(-17032, -2757, -17058, -2828);
      a.quadraticCurveTo(-17235, -3325, -17664, -3325);
      a.closePath();
      a.moveTo(-13958, 2593);
      a.lineTo(-13958, 2593);
      a.quadraticCurveTo(-11650, 5245, -9369, 5928);
      a.quadraticCurveTo(-9249, 5982, -9125, 6031);
      a.lineTo(-8941, 6088);
      a.quadraticCurveTo(-8057, 6306, -7220, 6384);
      a.lineTo(-7177, 6394);
      a.quadraticCurveTo(-6976, 6394, -6786, 6385);
      a.quadraticCurveTo(-6529, 6287, -6279, 6181);
      a.quadraticCurveTo(-5946, 5899, -5613, 5596);
      a.lineTo(-5564, 5564);
      a.quadraticCurveTo(-5192, 5324, -4907, 4935);
      a.lineTo(-4262, 4326);
      a.lineTo(-4188, 4277);
      a.quadraticCurveTo(-3912, 4086, -3684, 3803);
      a.quadraticCurveTo(-3371, 3530, -3057, 3277);
      a.quadraticCurveTo(-3034, 3277, -3018, 3284);
      a.lineTo(-3011, 3286);
      a.quadraticCurveTo(-3059, 3215, -3166, 3184);
      a.quadraticCurveTo(-3292, 3149, -3421, 3099);
      a.quadraticCurveTo(-4456, 4155, -4938, 4760);
      a.quadraticCurveTo(-5470, 5251, -5961, 5770);
      a.quadraticCurveTo(-6245, 5751, -6544, 5704);
      a.quadraticCurveTo(-6883, 5198, -7241, 4511);
      a.quadraticCurveTo(-7271, 4298, -7429, 4193);
      a.lineTo(-7469, 4167);
      a.lineTo(-7844, 3808);
      a.lineTo(-8316, 3832);
      a.quadraticCurveTo(-7809, 4408, -7694, 5164);
      a.quadraticCurveTo(-7660, 5353, -7653, 5553);
      a.quadraticCurveTo(-8912, 5228, -10138, 4554);
      a.quadraticCurveTo(-11408, 3894, -12929, 3137);
      a.quadraticCurveTo(-13438, 2893, -13958, 2593);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11191);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle =
        "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-12573, 1779);
      a.lineTo(-12573, 1776);
      a.moveTo(-8660, 2738);
      a.quadraticCurveTo(-8302, 2669, -7952, 2555);
      a.moveTo(-17002, -367);
      a.quadraticCurveTo(-17232, -740, -17445, -1112);
      a.moveTo(-3134, 726);
      a.quadraticCurveTo(-2807, 518, -2479, 333);
      a.moveTo(-6544, 5704);
      a.quadraticCurveTo(-6883, 5198, -7241, 4511);
      a.moveTo(-7469, 4167);
      a.lineTo(-7844, 3808);
      a.moveTo(-9369, 5928);
      a.quadraticCurveTo(-9683,
        5756, -10005, 5548);
      a.moveTo(-1458, 2266);
      a.quadraticCurveTo(-1935, 2497, -2396, 2796);
      a.moveTo(-4267, 1237);
      a.quadraticCurveTo(-3869, 1057, -3471, 897);
      a.moveTo(-5662, 1717);
      a.quadraticCurveTo(-5963, 1808, -6268, 1886);
      a.moveTo(-5167, 1486);
      a.lineTo(-4539, 1312);
      a.moveTo(-4262, 4326);
      a.lineTo(-4907, 4935);
      a.moveTo(-5613, 5596);
      a.quadraticCurveTo(-5946, 5899, -6279, 6181);
      a.moveTo(-6786, 6385);
      a.quadraticCurveTo(-6976, 6394, -7177, 6394);
      a.moveTo(-8941, 6088);
      a.quadraticCurveTo(-8741, 6156, -8541, 6208);
      a.moveTo(-3057, 3277);
      a.quadraticCurveTo(-3371,
        3530, -3684, 3803);
      a.moveTo(-8231, 3615);
      a.quadraticCurveTo(-8605, 3550, -8934, 3429);
      a.moveTo(-6648, 2035);
      a.quadraticCurveTo(-6980, 2187, -7323, 2315);
      a.moveTo(-10092, 3098);
      a.lineTo(-10559, 2930);
      a.moveTo(-10286, 5371);
      a.quadraticCurveTo(-10640, 5142, -11009, 4877);
      a.moveTo(-11353, 4638);
      a.quadraticCurveTo(-11731, 4375, -12125, 4083);
      a.moveTo(-9125, 6031);
      a.lineTo(-8941, 6088);
      a.moveTo(-13734, 1389);
      a.lineTo(-14724, 658);
      a.moveTo(-14227, 2445);
      a.lineTo(-15328, 1483);
      a.moveTo(-15876, 969);
      a.lineTo(-16654, 102);
      a.moveTo(-11909,
        2394);
      a.quadraticCurveTo(-12532, 2082, -13175, 1737);
      a.moveTo(-12647, 3693);
      a.quadraticCurveTo(-13126, 3329, -13620, 2941)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11191);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-17081, -4293);
      a.quadraticCurveTo(-17131, -5068, -16971, -5841);
      a.lineTo(-16955, -5909);
      a.quadraticCurveTo(-16740, -6864, -16464, -7791);
      a.lineTo(-16370, -8040);
      a.lineTo(-16470, -7881);
      a.quadraticCurveTo(-16767, -7383, -17024, -6876);
      a.quadraticCurveTo(-17873, -5131, -17970, -3134);
      a.quadraticCurveTo(-18030, -2228, -17815, -1361);
      a.quadraticCurveTo(-17638, -648, -17274, 39);
      a.quadraticCurveTo(-16674, 1135, -15673, 2286);
      a.quadraticCurveTo(-14713, 3384, -13661, 4250);
      a.quadraticCurveTo(-12888, 4882, -12134, 5289);
      a.quadraticCurveTo(-9955, 6554, -8075, 6806);
      a.quadraticCurveTo(-7304, 6850, -6557, 6641);
      a.quadraticCurveTo(-5949, 6162, -5357, 5594);
      a.quadraticCurveTo(-4150, 4379, -2819, 3487);
      a.quadraticCurveTo(-1820,
        2823, -740, 2498);
      a.quadraticCurveTo(-502, 2E3, -256, 1509);
      a.quadraticCurveTo(587, -104, -340, -1410);
      a.quadraticCurveTo(-2492, -806, -3910, 119);
      a.quadraticCurveTo(-5328, 1045, -6773, 1781);
      a.quadraticCurveTo(-7537, 2151, -8341, 2264);
      a.quadraticCurveTo(-9146, 2342, -9811, 2203);
      a.quadraticCurveTo(-11136, 1952, -12545, 1224);
      a.moveTo(-12548, 1227);
      a.quadraticCurveTo(-13882, 692, -14963, -214);
      a.quadraticCurveTo(-15814, -924, -16327, -1795);
      a.quadraticCurveTo(-16627, -2305, -16812, -2871);
      a.quadraticCurveTo(-17035, -3583, -17081, -4293);
      a.quadraticCurveTo(-17596, -4474, -17781, -4122);
      a.quadraticCurveTo(-17834, -4020, -17843, -3890);
      a.quadraticCurveTo(-17752, -3977, -17637, -3948);
      a.quadraticCurveTo(-17540, -3921, -17477, -3825);
      a.quadraticCurveTo(-17535, -3853, -17599, -3860);
      a.lineTo(-17656, -3854);
      a.lineTo(-17662, -3852);
      a.quadraticCurveTo(-18105, -3325, -17744, -2647);
      a.quadraticCurveTo(-17826, -2995, -17696, -3324);
      a.quadraticCurveTo(-17242, -3343, -17058, -2828);
      a.quadraticCurveTo(-17032, -2757, -16560, -1712);
      a.quadraticCurveTo(-16403, -1456, -16250, -1172);
      a.quadraticCurveTo(-15863, -436, -15184, 123);
      a.quadraticCurveTo(-13987, 1133, -12573, 1779);
      a.moveTo(-12573, 1776);
      a.lineTo(-12145, 1968);
      a.quadraticCurveTo(-10717, 2618, -9401, 2735)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11367);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(29, -2730);
      a.quadraticCurveTo(18, -2730, 8, -2730);
      a.quadraticCurveTo(-775, -2725, -1473, -2385);
      a.quadraticCurveTo(-1598, -2324, -1712, -2247);
      a.quadraticCurveTo(-1835, -2165, -1945, -2063);
      a.lineTo(-2105, -1920);
      a.quadraticCurveTo(-2051, -1145, -1854, -394);
      a.quadraticCurveTo(-1658, 357, -1281, 1029);
      a.lineTo(-1275, 1040);
      a.quadraticCurveTo(-893, 1719, -384, 2301);
      a.quadraticCurveTo(-137, 2582, 102, 2582);
      a.quadraticCurveTo(356, 2582, 602, 2267);
      a.quadraticCurveTo(800, 2015, 923, 1716);
      a.quadraticCurveTo(1200, 1045, 1441, 361);
      a.quadraticCurveTo(1694, -358, 1875, -1100);
      a.quadraticCurveTo(2015, -1676, 1895, -2258);
      a.lineTo(1717, -2349);
      a.quadraticCurveTo(1597, -2407, 1472, -2456);
      a.quadraticCurveTo(775, -2730, 29, -2730);
      a.closePath();
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031,
        2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1806, 2714, -1672, 2714);
      a.quadraticCurveTo(-1609, 2714, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.quadraticCurveTo(-1628, 2191, -1784, 2034);
      a.quadraticCurveTo(-1882, 1935, -1969, 1830);
      a.closePath();
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285);
      a.quadraticCurveTo(1453,
        2524, 1069, 2647);
      a.quadraticCurveTo(1240, 2920, 1464, 3159);
      a.lineTo(1495, 3185);
      a.quadraticCurveTo(1485, 2702, 1801, 2702);
      a.quadraticCurveTo(1871, 2702, 1958, 2726);
      a.quadraticCurveTo(2051, 2751, 2109, 2838);
      a.lineTo(2146, 2897);
      a.quadraticCurveTo(2234, 2453, 2090, 2025);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11367);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1895, -2258);
      a.quadraticCurveTo(2015, -1676, 1875, -1100);
      a.quadraticCurveTo(1694, -358, 1441, 361);
      a.quadraticCurveTo(1200, 1045, 923, 1716);
      a.quadraticCurveTo(800,
        2015, 602, 2267);
      a.quadraticCurveTo(356, 2582, 102, 2582);
      a.quadraticCurveTo(-137, 2582, -384, 2301);
      a.quadraticCurveTo(-893, 1719, -1275, 1040);
      a.lineTo(-1281, 1029);
      a.lineTo(-1281, 1029);
      a.quadraticCurveTo(-1281, 1029, -1281, 1029);
      a.quadraticCurveTo(-1658, 357, -1854, -394);
      a.quadraticCurveTo(-2051, -1145, -2105, -1920);
      a.quadraticCurveTo(-2607, -1485, -3179, -1168);
      a.lineTo(-3154, -913);
      a.quadraticCurveTo(-3092, -110, -3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882,
        1935, -1784, 2034);
      a.quadraticCurveTo(-1628, 2191, -1457, 2316);
      a.quadraticCurveTo(-1193, 2510, -895, 2627);
      a.quadraticCurveTo(-716, 2697, -524, 2739);
      a.quadraticCurveTo(-230, 2803, 76, 2803);
      a.quadraticCurveTo(518, 2803, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782, 2285);
      a.quadraticCurveTo(1942, 2169, 2090, 2025);
      a.quadraticCurveTo(2251, 1867, 2398, 1675);
      a.quadraticCurveTo(2848, 1083, 3270, 825);
      a.quadraticCurveTo(3289, 538, 3323, 253);
      a.quadraticCurveTo(3408, -448, 3399, -1154);
      a.quadraticCurveTo(3043, -1322,
        2763, -1603);
      a.quadraticCurveTo(2369, -1999, 1895, -2258);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11367);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1717, -2349);
      a.lineTo(1791, -2179);
      a.moveTo(1971, -1331);
      a.quadraticCurveTo(1976, -1189, 1966, -1044);
      a.moveTo(1884, -1896);
      a.quadraticCurveTo(1918, -1769, 1940, -1641);
      a.moveTo(1925, -735);
      a.lineTo(1908, -654);
      a.lineTo(1866, -463);
      a.moveTo(-1712, -2247);
      a.lineTo(-1741, -2148);
      a.moveTo(-1785, -1953);
      a.quadraticCurveTo(-1818, -1781, -1826, -1605);
      a.moveTo(-1281, 1029);
      a.lineTo(-1285, 1001);
      a.moveTo(-1715, -727);
      a.lineTo(-1688, -640);
      a.lineTo(-1626, -443);
      a.moveTo(-1821, -1306);
      a.quadraticCurveTo(-1810, -1147, -1778, -986);
      a.moveTo(-1400, 404);
      a.lineTo(-1338, 701);
      a.moveTo(-1262, 1557);
      a.quadraticCurveTo(-1273, 1698, -1300, 1834);
      a.moveTo(-1281, 1029);
      a.quadraticCurveTo(-1265, 1153, -1259, 1273);
      a.moveTo(-1457, 2316);
      a.quadraticCurveTo(-1410, 2213, -1373,
        2107);
      a.moveTo(1782, 2285);
      a.quadraticCurveTo(1730, 2222, 1688, 2157);
      a.moveTo(1484, 1644);
      a.quadraticCurveTo(1503, 1765, 1546, 1881);
      a.moveTo(1534, 1012);
      a.lineTo(1508, 1124);
      a.quadraticCurveTo(1484, 1229, 1475, 1330);
      a.moveTo(1665, 437);
      a.lineTo(1603, 712);
      a.moveTo(-1547, -174);
      a.lineTo(-1468, 121);
      a.moveTo(1798, -156);
      a.lineTo(1735, 128)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11367);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin =
        "round";
      a.beginPath();
      a.moveTo(-2105, -1920);
      a.lineTo(-1945, -2063);
      a.quadraticCurveTo(-1835, -2165, -1712, -2247);
      a.quadraticCurveTo(-1598, -2324, -1473, -2385);
      a.quadraticCurveTo(-775, -2725, 8, -2730);
      a.quadraticCurveTo(765, -2734, 1472, -2456);
      a.quadraticCurveTo(1597, -2407, 1717, -2349);
      a.lineTo(1895, -2258);
      a.quadraticCurveTo(2369, -1999, 2763, -1603);
      a.quadraticCurveTo(3043, -1322, 3399, -1154);
      a.lineTo(3461, -1126);
      a.moveTo(-3226, -1142);
      a.lineTo(-3179, -1168);
      a.quadraticCurveTo(-2607, -1485, -2105, -1920);
      a.moveTo(-3224,
        679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628, 2191, -1457, 2316);
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1749, 2657, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.moveTo(-895, 2627);
      a.quadraticCurveTo(-716, 2697, -524, 2739);
      a.quadraticCurveTo(190, 2895, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782, 2285);
      a.moveTo(-3242, 673);
      a.lineTo(-3224, 679);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(3391, 751, 3509, 704);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(2848, 1083, 2398, 1675);
      a.quadraticCurveTo(2251, 1867, 2090, 2025);
      a.quadraticCurveTo(2234, 2453, 2146, 2897);
      a.lineTo(2109, 2838);
      a.quadraticCurveTo(2051, 2751, 1958, 2726);
      a.quadraticCurveTo(1483, 2595, 1495, 3185);
      a.lineTo(1464,
        3159);
      a.quadraticCurveTo(1240, 2920, 1069, 2647);
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10754);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.quadraticCurveTo(1866, -1390, 1927, -1547);
      a.quadraticCurveTo(2065, -1909, 1846, -2264);
      a.closePath();
      a.moveTo(-1866, -2414);
      a.quadraticCurveTo(-1988, -2163, -1979, -1755);
      a.quadraticCurveTo(-1973, -1467, -1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.closePath();
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1187, -981, 1265, -981);
      a.quadraticCurveTo(1268, -981, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.quadraticCurveTo(1602, -2564, 1486, -2661);
      a.closePath();
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1591, -2730, -1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1398, -906, -1198, -906);
      a.quadraticCurveTo(-1195, -906, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.lineTo(-1158, -2446);
      a.quadraticCurveTo(-1266, -2592, -1444, -2773);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10754);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(1691, -2467);
      a.lineTo(1617, -2397);
      a.quadraticCurveTo(1036, -1774, 1540, -1045);
      a.quadraticCurveTo(1681, -1119,
        1789, -1277);
      a.lineTo(1766, -1339);
      a.quadraticCurveTo(1594, -1821, 1846, -2264);
      a.quadraticCurveTo(1783, -2366, 1691, -2467);
      a.closePath();
      a.moveTo(-1706, -2639);
      a.quadraticCurveTo(-1719, -2639, -1719, -2618);
      a.quadraticCurveTo(-1808, -2534, -1866, -2414);
      a.lineTo(-1839, -2375);
      a.quadraticCurveTo(-1463, -1799, -1881, -1276);
      a.quadraticCurveTo(-1828, -1165, -1546, -963);
      a.quadraticCurveTo(-1083, -1736, -1560, -2461);
      a.quadraticCurveTo(-1620, -2552, -1697, -2637);
      a.quadraticCurveTo(-1702, -2639, -1706, -2639);
      a.closePath()
    }, function(a) {
      a.transform(0.48,
        0, 0, 0.48, 14924, 10754);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(504, -7675);
      a.quadraticCurveTo(483, -7675, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.lineTo(72, -7173);
      a.quadraticCurveTo(-75, -6552, -84, -5920);
      a.lineTo(0, -5470);
      a.quadraticCurveTo(3, -5138, -4, -4806);
      a.lineTo(-55, -2986);
      a.quadraticCurveTo(-60, -2829, -132, -2714);
      a.quadraticCurveTo(-249, -2531, -379, -2531);
      a.quadraticCurveTo(-522, -2531, -683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.quadraticCurveTo(-1286, -3404, -1395, -3404);
      a.quadraticCurveTo(-1475, -3404, -1555, -3334);
      a.quadraticCurveTo(-1801, -3121, -1548, -2877);
      a.lineTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.quadraticCurveTo(-811, -1894, -769, -1831);
      a.quadraticCurveTo(-380, -1249, -298, -527);
      a.quadraticCurveTo(-189, 432, -50, 1385);
      a.lineTo(-38, 1575);
      a.quadraticCurveTo(14, 2265, -214, 2911);
      a.quadraticCurveTo(-140, 3258, -59, 3411);
      a.quadraticCurveTo(33,
        3510, 122, 3510);
      a.quadraticCurveTo(271, 3510, 409, 3232);
      a.quadraticCurveTo(627, 2788, 824, 1738);
      a.quadraticCurveTo(910, 1280, 991, 893);
      a.quadraticCurveTo(1073, 494, 1151, 169);
      a.lineTo(1190, 6);
      a.quadraticCurveTo(1359, -675, 1540, -1045);
      a.lineTo(1540, -1045);
      a.quadraticCurveTo(1419, -982, 1272, -982);
      a.quadraticCurveTo(1269, -981, 1265, -981);
      a.quadraticCurveTo(1187, -981, 1125, -1322);
      a.quadraticCurveTo(1059, -1678, 1060, -2423);
      a.quadraticCurveTo(1274, -2525, 1486, -2661);
      a.lineTo(1592, -2731);
      a.quadraticCurveTo(1934, -2966,
        1778, -3215);
      a.quadraticCurveTo(1683, -3365, 1533, -3365);
      a.quadraticCurveTo(1434, -3365, 1310, -3300);
      a.lineTo(1238, -3260);
      a.quadraticCurveTo(1248, -3864, 882, -4324);
      a.quadraticCurveTo(516, -4785, 384, -5168);
      a.quadraticCurveTo(251, -5551, 317, -6093);
      a.quadraticCurveTo(382, -6636, 557, -7180);
      a.quadraticCurveTo(608, -7337, 621, -7444);
      a.lineTo(621, -7444);
      a.quadraticCurveTo(621, -7444, 621, -7444);
      a.quadraticCurveTo(649, -7675, 504, -7675);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10754);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(110, -7354);
      a.quadraticCurveTo(-40, -7132, -215, -6755);
      a.quadraticCurveTo(-613, -5895, -596, -5022);
      a.quadraticCurveTo(-591, -4787, -614, -4479);
      a.lineTo(-635, -4248);
      a.quadraticCurveTo(-1077, -3768, -1179, -3274);
      a.quadraticCurveTo(-1125, -3208, -1071, -3109);
      a.quadraticCurveTo(-915, -2821, -683, -2750);
      a.quadraticCurveTo(-523, -2531, -379, -2531);
      a.quadraticCurveTo(-248, -2531, -132, -2714);
      a.quadraticCurveTo(-60, -2829, -55, -2986);
      a.lineTo(-4, -4806);
      a.quadraticCurveTo(3, -5138, 0, -5470);
      a.lineTo(-84, -5920);
      a.quadraticCurveTo(-75, -6552, 72, -7173);
      a.lineTo(110, -7354);
      a.closePath();
      a.moveTo(-1077, -2330);
      a.lineTo(-1048, -1864);
      a.quadraticCurveTo(-1025, -1437, -1191, -906);
      a.quadraticCurveTo(-1194, -906, -1198, -906);
      a.quadraticCurveTo(-1398, -906, -1546, -963);
      a.lineTo(-1546, -963);
      a.quadraticCurveTo(-1223, -398, -997, 123);
      a.quadraticCurveTo(-786, 610, -659, 1058);
      a.quadraticCurveTo(-565, 1388, -484, 1706);
      a.quadraticCurveTo(-338, 2281, -233, 2814);
      a.lineTo(-214, 2911);
      a.quadraticCurveTo(14, 2265, -38, 1575);
      a.lineTo(-50, 1385);
      a.quadraticCurveTo(-189,
        432, -298, -527);
      a.quadraticCurveTo(-380, -1249, -769, -1831);
      a.quadraticCurveTo(-811, -1894, -875, -1936);
      a.lineTo(-875, -1936);
      a.quadraticCurveTo(-875, -1936, -875, -1936);
      a.quadraticCurveTo(-901, -2012, -930, -2073);
      a.quadraticCurveTo(-993, -2202, -1077, -2330);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10754);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(621, -7444);
      a.quadraticCurveTo(653, -7709, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.moveTo(621, -7444);
      a.quadraticCurveTo(608, -7337, 557, -7180);
      a.quadraticCurveTo(382, -6636, 317, -6093);
      a.quadraticCurveTo(251, -5551, 384, -5168);
      a.quadraticCurveTo(516, -4785, 882, -4324);
      a.quadraticCurveTo(1248, -3864, 1238, -3260);
      a.lineTo(1310, -3300);
      a.quadraticCurveTo(1621, -3464, 1778, -3215);
      a.quadraticCurveTo(1934, -2966, 1592, -2731);
      a.lineTo(1486, -2661);
      a.quadraticCurveTo(1602, -2564, 1691, -2467);
      a.quadraticCurveTo(1783, -2366, 1846, -2264);
      a.quadraticCurveTo(2065, -1909, 1927, -1547);
      a.quadraticCurveTo(1866, -1390, 1789, -1277);
      a.quadraticCurveTo(1681, -1119, 1540, -1045);
      a.quadraticCurveTo(1359, -675, 1190, 6);
      a.lineTo(1151, 169);
      a.quadraticCurveTo(1073, 494, 991, 893);
      a.quadraticCurveTo(910, 1280, 824, 1738);
      a.quadraticCurveTo(627, 2788, 409, 3232);
      a.quadraticCurveTo(190, 3675, -59, 3411);
      a.quadraticCurveTo(-140, 3258, -214, 2911);
      a.lineTo(-233, 2814);
      a.quadraticCurveTo(-338, 2281, -484, 1706);
      a.quadraticCurveTo(-565, 1388, -659, 1058);
      a.quadraticCurveTo(-786, 610, -997, 123);
      a.quadraticCurveTo(-1223, -398, -1546, -963);
      a.quadraticCurveTo(-1828, -1165, -1881, -1276);
      a.quadraticCurveTo(-1973, -1467, -1979, -1755);
      a.quadraticCurveTo(-1988, -2163, -1866, -2414);
      a.quadraticCurveTo(-1808, -2534, -1719, -2618);
      a.moveTo(-1697, -2637);
      a.quadraticCurveTo(-1591, -2730, -1444, -2773);
      a.lineTo(-1548, -2877);
      a.quadraticCurveTo(-1801, -3121, -1555, -3334);
      a.quadraticCurveTo(-1365, -3500, -1179, -3274);
      a.quadraticCurveTo(-1077, -3768, -635, -4248);
      a.lineTo(-614, -4479);
      a.quadraticCurveTo(-591, -4787, -596, -5022);
      a.quadraticCurveTo(-613, -5895, -215, -6755);
      a.quadraticCurveTo(-40, -7132, 110, -7354);
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1190, -967, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.moveTo(1060, -2423);
      a.lineTo(901, -2353);
      a.quadraticCurveTo(553, -2210, 543, -1729);
      a.moveTo(483, -2694);
      a.quadraticCurveTo(941, -3088, 1238, -3260);
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.moveTo(-683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.moveTo(-421, -2734);
      a.quadraticCurveTo(-562, -2713, -683, -2750);
      a.moveTo(-1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.moveTo(-1719, -2618);
      a.lineTo(-1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1395, -905, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.moveTo(-875, -1936);
      a.quadraticCurveTo(-822, -1782, -783, -1568)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10754);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(436, -7172);
      a.quadraticCurveTo(526, -7323, 621, -7444);
      a.moveTo(-84, -5920);
      a.lineTo(-8, -6155);
      a.moveTo(128, -6531);
      a.quadraticCurveTo(192, -6693, 259, -6837);
      a.moveTo(683, -1206);
      a.lineTo(537, -1172);
      a.lineTo(538, -1065);
      a.quadraticCurveTo(536, -876, 594, -692);
      a.lineTo(683, -723);
      a.moveTo(362, -1145);
      a.lineTo(537, -1172);
      a.lineTo(563, -1508);
      a.moveTo(1151, 169);
      a.lineTo(790, -299);
      a.lineTo(643, -220);
      a.moveTo(594, -692);
      a.lineTo(790, -299);
      a.lineTo(945, -361);
      a.moveTo(482, -663);
      a.lineTo(594, -692);
      a.moveTo(813, 958);
      a.quadraticCurveTo(901, 924, 991, 893);
      a.moveTo(387, 1139);
      a.quadraticCurveTo(512, 1078, 641, 1025);
      a.moveTo(-50, 1385);
      a.quadraticCurveTo(33, 1331, 120, 1281);
      a.lineTo(147, 1266);
      a.moveTo(-302, -5223);
      a.lineTo(-203, -5526);
      a.moveTo(-88, -5905);
      a.lineTo(-84, -5920);
      a.moveTo(-614, -4479);
      a.quadraticCurveTo(-526, -4617, -410, -4920);
      a.moveTo(-764, -1206);
      a.lineTo(-724, -996);
      a.lineTo(-522, -965);
      a.moveTo(-997, 123);
      a.lineTo(-818, -377);
      a.lineTo(-905, -421);
      a.moveTo(-818, -377);
      a.lineTo(-779, -541);
      a.quadraticCurveTo(-726, -763, -724, -996);
      a.lineTo(-864, -1005);
      a.moveTo(-818, -377);
      a.lineTo(-643, -281);
      a.moveTo(-484, 1706);
      a.quadraticCurveTo(-405, 1633, -318, 1569);
      a.moveTo(-75, 1401);
      a.lineTo(-50, 1385)
    }]
  }
}

function make_adult_5(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
        a.transform(-0.49, 0, 0, 0.48, 15497, 11068);
        a.fillStyle = c;
        a.beginPath();
        a.moveTo(-1871, 2339);
        a.lineTo(-1874, 2355);
        a.lineTo(-1954, 2521);
        a.quadraticCurveTo(-2130, 2899, -2255, 3298);
        a.quadraticCurveTo(-2624, 4466, -3400, 5396);
        a.quadraticCurveTo(-4134, 6275, -4967, 7066);
        a.quadraticCurveTo(-5358, 7437, -5517, 7695);
        a.lineTo(-5743, 8054);
        a.quadraticCurveTo(-5810, 8154, -5997, 8887);
        a.quadraticCurveTo(-6184, 9619, -6025, 11124);
        a.lineTo(-6127, 11060);
        a.lineTo(-6168,
          11034);
        a.quadraticCurveTo(-6524, 9889, -6296, 8695);
        a.quadraticCurveTo(-6062, 7470, -5192, 6534);
        a.lineTo(-4384, 5667);
        a.quadraticCurveTo(-4474, 5509, -4657, 5483);
        a.lineTo(-5096, 5425);
        a.quadraticCurveTo(-4276, 5125, -3524, 4697);
        a.quadraticCurveTo(-3248, 4539, -3165, 4233);
        a.quadraticCurveTo(-2979, 3545, -2595, 2956);
        a.quadraticCurveTo(-2325, 2541, -1871, 2339);
        a.closePath();
        a.moveTo(-2420, 370);
        a.quadraticCurveTo(-2533, 1293, -2974, 2134);
        a.quadraticCurveTo(-3462, 3065, -3458, 4121);
        a.quadraticCurveTo(-3952, 4003, -4431, 4003);
        a.quadraticCurveTo(-5370, 4003, -6248, 4457);
        a.quadraticCurveTo(-7163, 4930, -7809, 5733);
        a.quadraticCurveTo(-8302, 6345, -8611, 7070);
        a.quadraticCurveTo(-8782, 7470, -8861, 7900);
        a.quadraticCurveTo(-9118, 9289, -8646, 10627);
        a.quadraticCurveTo(-8205, 11879, -7347, 12893);
        a.quadraticCurveTo(-9655, 11001, -9612, 8204);
        a.quadraticCurveTo(-9857, 7019, -9280, 5942);
        a.quadraticCurveTo(-8692, 4846, -7823, 3979);
        a.quadraticCurveTo(-6990, 3149, -6077, 2404);
        a.quadraticCurveTo(-5147, 1644, -4118, 1015);
        a.quadraticCurveTo(-3330, 532, -2420,
          370);
        a.closePath();
        a.moveTo(-5285, 14089);
        a.quadraticCurveTo(-5316, 14131, -5300, 14140);
        a.lineTo(-5274, 14142);
        a.quadraticCurveTo(-5260, 14158, -5466, 14289);
        a.lineTo(-5397, 14213);
        a.lineTo(-5329, 14138);
        a.lineTo(-5285, 14089);
        a.closePath();
        a.moveTo(-573, -1619);
        a.quadraticCurveTo(-775, -1533, -1139, -1351);
        a.quadraticCurveTo(-1868, -987, -2682, -504);
        a.quadraticCurveTo(-3141, -231, -3597, 59);
        a.quadraticCurveTo(-5723, 1419, -7761, 3188);
        a.lineTo(-7878, 3286);
        a.quadraticCurveTo(-8028, 3415, -8186, 3570);
        a.quadraticCurveTo(-8694,
          4068, -9106, 4647);
        a.quadraticCurveTo(-9683, 5457, -9986, 6313);
        a.quadraticCurveTo(-10046, 6482, -10094, 6651);
        a.quadraticCurveTo(-10353, 7554, -10291, 8465);
        a.lineTo(-10291, 8466);
        a.quadraticCurveTo(-10144, 10632, -8203, 12709);
        a.quadraticCurveTo(-7449, 13515, -6433, 14297);
        a.quadraticCurveTo(-4467, 15811, -1521, 17233);
        a.lineTo(-1503, 17200);
        a.quadraticCurveTo(-1632, 17123, -2554, 16305);
        a.quadraticCurveTo(-3477, 15486, -4267, 14520);
        a.quadraticCurveTo(-5058, 13553, -5391, 12691);
        a.quadraticCurveTo(-5725, 11828, -5797, 11337);
        a.quadraticCurveTo(-6034,
          9721, -5539, 7934);
        a.lineTo(-5538, 7931);
        a.lineTo(-5537, 7930);
        a.quadraticCurveTo(-5132, 7476, -4527, 6896);
        a.quadraticCurveTo(-3314, 5734, -2303, 5100);
        a.quadraticCurveTo(-2340, 4928, -2355, 4667);
        a.quadraticCurveTo(-2384, 4145, -2269, 3700);
        a.quadraticCurveTo(-2208, 3462, -2107, 3260);
        a.quadraticCurveTo(-1945, 2932, -1682, 2697);
        a.quadraticCurveTo(-1151, 2222, -234, 2155);
        a.quadraticCurveTo(-170, 2023, -96, 1800);
        a.quadraticCurveTo(51, 1352, 104, 893);
        a.quadraticCurveTo(273, -577, -573, -1619);
        a.closePath()
      }, function(a) {
        a.transform(-0.49,
          0, 0, 0.48, 15497, 11068);
        a.fillStyle = b;
        a.beginPath();
        a.moveTo(-1871, 2339);
        a.quadraticCurveTo(-2325, 2541, -2595, 2956);
        a.quadraticCurveTo(-2979, 3545, -3165, 4233);
        a.quadraticCurveTo(-3248, 4539, -3524, 4697);
        a.quadraticCurveTo(-4276, 5125, -5096, 5425);
        a.lineTo(-4657, 5483);
        a.quadraticCurveTo(-4474, 5509, -4384, 5667);
        a.lineTo(-5192, 6534);
        a.quadraticCurveTo(-6062, 7470, -6296, 8695);
        a.quadraticCurveTo(-6524, 9889, -6168, 11034);
        a.lineTo(-6127, 11060);
        a.lineTo(-6025, 11124);
        a.quadraticCurveTo(-6184, 9619, -5997, 8887);
        a.quadraticCurveTo(-5810,
          8154, -5743, 8054);
        a.lineTo(-5517, 7695);
        a.quadraticCurveTo(-5358, 7437, -4967, 7066);
        a.quadraticCurveTo(-4134, 6275, -3400, 5396);
        a.quadraticCurveTo(-2624, 4466, -2255, 3298);
        a.quadraticCurveTo(-2130, 2899, -1954, 2521);
        a.lineTo(-1874, 2355);
        a.lineTo(-1871, 2339);
        a.closePath();
        a.moveTo(-2420, 370);
        a.quadraticCurveTo(-3330, 532, -4118, 1015);
        a.quadraticCurveTo(-5147, 1644, -6077, 2404);
        a.quadraticCurveTo(-6990, 3149, -7823, 3979);
        a.quadraticCurveTo(-8692, 4846, -9280, 5942);
        a.quadraticCurveTo(-9857, 7019, -9612, 8204);
        a.quadraticCurveTo(-9655,
          11001, -7347, 12893);
        a.quadraticCurveTo(-8205, 11879, -8646, 10627);
        a.quadraticCurveTo(-9118, 9289, -8861, 7900);
        a.quadraticCurveTo(-8782, 7470, -8611, 7070);
        a.quadraticCurveTo(-8302, 6345, -7809, 5733);
        a.quadraticCurveTo(-7163, 4930, -6248, 4457);
        a.quadraticCurveTo(-5370, 4003, -4431, 4003);
        a.quadraticCurveTo(-3953, 4003, -3458, 4121);
        a.quadraticCurveTo(-3462, 3065, -2974, 2134);
        a.quadraticCurveTo(-2533, 1293, -2420, 370);
        a.closePath()
      }, function(a) {
        a.transform(-0.49, 0, 0, 0.48, 15497, 11068);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle =
          "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 40;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(-1503, 17200);
        a.quadraticCurveTo(-1632, 17123, -2554, 16305);
        a.quadraticCurveTo(-3477, 15486, -4267, 14520);
        a.quadraticCurveTo(-5058, 13553, -5391, 12691);
        a.quadraticCurveTo(-5725, 11828, -5797, 11337);
        a.quadraticCurveTo(-6034, 9721, -5539, 7934);
        a.lineTo(-5538, 7931);
        a.lineTo(-5537, 7930);
        a.quadraticCurveTo(-5132, 7476, -4527, 6896);
        a.quadraticCurveTo(-3314, 5734, -2303, 5100);
        a.quadraticCurveTo(-2340,
          4928, -2355, 4667);
        a.quadraticCurveTo(-2384, 4145, -2269, 3700);
        a.quadraticCurveTo(-2208, 3462, -2107, 3260);
        a.quadraticCurveTo(-1945, 2932, -1682, 2697);
        a.quadraticCurveTo(-1151, 2222, -234, 2155);
        a.quadraticCurveTo(-170, 2023, -96, 1800);
        a.quadraticCurveTo(51, 1352, 104, 893);
        a.quadraticCurveTo(273, -577, -573, -1619);
        a.quadraticCurveTo(-775, -1533, -1139, -1351);
        a.quadraticCurveTo(-1868, -987, -2682, -504);
        a.quadraticCurveTo(-3141, -231, -3597, 59);
        a.quadraticCurveTo(-5723, 1419, -7761, 3188);
        a.lineTo(-7878, 3286);
        a.quadraticCurveTo(-8028,
          3415, -8186, 3570);
        a.quadraticCurveTo(-8694, 4068, -9106, 4647);
        a.quadraticCurveTo(-9683, 5457, -9986, 6313);
        a.quadraticCurveTo(-10046, 6482, -10094, 6651);
        a.quadraticCurveTo(-10353, 7554, -10291, 8465);
        a.lineTo(-10291, 8466);
        a.quadraticCurveTo(-10144, 10632, -8203, 12709);
        a.quadraticCurveTo(-7449, 13515, -6433, 14297);
        a.quadraticCurveTo(-5846, 14457, -5495, 14268);
        a.lineTo(-5397, 14213);
        a.lineTo(-5329, 14138);
        a.quadraticCurveTo(-6024, 14088, -6271, 13960);
        a.quadraticCurveTo(-6529, 13826, -6703, 13641);
        a.quadraticCurveTo(-6297,
          13641, -6165, 13434);
        a.quadraticCurveTo(-6124, 13369, -6115, 13292);
        a.lineTo(-6114, 13227);
        a.quadraticCurveTo(-6544, 13311, -6915, 13162);
        a.quadraticCurveTo(-7145, 13050, -7252, 12970);
        a.lineTo(-7297, 12934);
        a.lineTo(-7347, 12893);
        a.quadraticCurveTo(-9655, 11001, -9612, 8204);
        a.moveTo(-9597, 7840);
        a.lineTo(-9606, 7997);
        a.lineTo(-9612, 8204);
        a.moveTo(-5329, 14138);
        a.lineTo(-5300, 14140);
        a.lineTo(-5274, 14142);
        a.moveTo(-5397, 14213);
        a.lineTo(-5274, 14142);
        a.moveTo(-1521, 17233);
        a.quadraticCurveTo(-4467, 15811, -6433, 14297)
      }, function(a) {
        a.transform(-0.49,
          0, 0, 0.48, 15497, 11068);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 28.57;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(-2844, 292);
        a.lineTo(-2748, 234);
        a.lineTo(-2291, -37);
        a.moveTo(-1954, 2521);
        a.lineTo(-1831, 2398);
        a.lineTo(-1814, 2381);
        a.lineTo(-1599, 2184);
        a.moveTo(-6127, 11060);
        a.lineTo(-6138, 10941);
        a.moveTo(-1993, 2562);
        a.lineTo(-1954, 2521);
        a.moveTo(-6127, 11060);
        a.lineTo(-6125, 11077);
        a.quadraticCurveTo(-6093, 11398, -6038, 11696);
        a.moveTo(-2569,
          3348);
        a.quadraticCurveTo(-2463, 3149, -2319, 2953);
        a.moveTo(-4546, 1392);
        a.quadraticCurveTo(-4142, 1113, -3708, 833);
        a.moveTo(-6300, 2715);
        a.lineTo(-6029, 2494);
        a.quadraticCurveTo(-5707, 2235, -5359, 1976);
        a.moveTo(-3401, 4263);
        a.lineTo(-3588, 4275);
        a.quadraticCurveTo(-3829, 4297, -4093, 4349);
        a.lineTo(-4167, 4364);
        a.moveTo(-5632, 7514);
        a.lineTo(-4839, 6699);
        a.moveTo(-4325, 6158);
        a.lineTo(-3819, 5611);
        a.moveTo(-4788, 4527);
        a.quadraticCurveTo(-5117, 4631, -5432, 4774);
        a.moveTo(-3042, 4706);
        a.quadraticCurveTo(-2916, 4544, -2837,
          4425);
        a.quadraticCurveTo(-2848, 4362, -2843, 4249);
        a.quadraticCurveTo(-2836, 4106, -2800, 3952);
        a.moveTo(-8856, 5460);
        a.quadraticCurveTo(-8725, 5256, -8570, 5045);
        a.lineTo(-8365, 4777);
        a.moveTo(-9534, 7272);
        a.quadraticCurveTo(-9553, 7069, -9442, 6689);
        a.quadraticCurveTo(-9376, 6463, -9271, 6225);
        a.moveTo(-7522, 6364);
        a.lineTo(-7533, 6377);
        a.quadraticCurveTo(-7730, 6617, -7903, 6880);
        a.moveTo(-7828, 4150);
        a.quadraticCurveTo(-7456, 3747, -7010, 3336);
        a.moveTo(-8762, 8754);
        a.lineTo(-8828, 8987);
        a.lineTo(-8887, 9217);
        a.moveTo(-6105,
          8817);
        a.quadraticCurveTo(-6073, 8490, -6026, 8148);
        a.moveTo(-6171, 10247);
        a.lineTo(-6172, 10082);
        a.quadraticCurveTo(-6172, 9835, -6160, 9576);
        a.moveTo(-5317, 13464);
        a.quadraticCurveTo(-5402, 13383, -5518, 13192);
        a.quadraticCurveTo(-5660, 12958, -5773, 12662);
        a.moveTo(-8304, 7580);
        a.quadraticCurveTo(-8432, 7837, -8540, 8113);
        a.moveTo(-6242, 5217);
        a.quadraticCurveTo(-6621, 5464, -6953, 5766)
      }, function(a) {
        a.transform(0.48, 0, 0, 0.48, 14397, 11068);
        a.fillStyle = c;
        a.beginPath();
        a.moveTo(-1871, 2339);
        a.lineTo(-1874, 2355);
        a.lineTo(-1954,
          2521);
        a.quadraticCurveTo(-2130, 2899, -2255, 3298);
        a.quadraticCurveTo(-2624, 4466, -3400, 5396);
        a.quadraticCurveTo(-4134, 6275, -4967, 7066);
        a.quadraticCurveTo(-5358, 7437, -5517, 7695);
        a.lineTo(-5743, 8054);
        a.quadraticCurveTo(-5810, 8154, -5997, 8887);
        a.quadraticCurveTo(-6184, 9619, -6025, 11124);
        a.lineTo(-6127, 11060);
        a.lineTo(-6168, 11034);
        a.quadraticCurveTo(-6524, 9889, -6296, 8695);
        a.quadraticCurveTo(-6062, 7470, -5192, 6534);
        a.lineTo(-4384, 5667);
        a.quadraticCurveTo(-4474, 5509, -4657, 5483);
        a.lineTo(-5096, 5425);
        a.quadraticCurveTo(-4276,
          5125, -3524, 4697);
        a.quadraticCurveTo(-3248, 4539, -3165, 4233);
        a.quadraticCurveTo(-2979, 3545, -2595, 2956);
        a.quadraticCurveTo(-2325, 2541, -1871, 2339);
        a.closePath();
        a.moveTo(-2420, 370);
        a.quadraticCurveTo(-2533, 1293, -2974, 2134);
        a.quadraticCurveTo(-3462, 3065, -3458, 4121);
        a.quadraticCurveTo(-3952, 4003, -4431, 4003);
        a.quadraticCurveTo(-5370, 4003, -6248, 4457);
        a.quadraticCurveTo(-7163, 4930, -7809, 5733);
        a.quadraticCurveTo(-8302, 6345, -8611, 7070);
        a.quadraticCurveTo(-8782, 7470, -8861, 7900);
        a.quadraticCurveTo(-9118, 9289, -8646, 10627);
        a.quadraticCurveTo(-8205, 11879, -7347, 12893);
        a.quadraticCurveTo(-9655, 11001, -9612, 8204);
        a.quadraticCurveTo(-9857, 7019, -9280, 5942);
        a.quadraticCurveTo(-8692, 4846, -7823, 3979);
        a.quadraticCurveTo(-6990, 3149, -6077, 2404);
        a.quadraticCurveTo(-5147, 1644, -4118, 1015);
        a.quadraticCurveTo(-3330, 532, -2420, 370);
        a.closePath();
        a.moveTo(-5285, 14089);
        a.quadraticCurveTo(-5316, 14131, -5300, 14140);
        a.lineTo(-5274, 14142);
        a.quadraticCurveTo(-5260, 14158, -5466, 14289);
        a.lineTo(-5397, 14213);
        a.lineTo(-5329, 14138);
        a.lineTo(-5285,
          14089);
        a.closePath();
        a.moveTo(-573, -1619);
        a.quadraticCurveTo(-775, -1533, -1139, -1351);
        a.quadraticCurveTo(-1868, -987, -2682, -504);
        a.quadraticCurveTo(-3141, -231, -3597, 59);
        a.quadraticCurveTo(-5723, 1419, -7761, 3188);
        a.lineTo(-7878, 3286);
        a.quadraticCurveTo(-8028, 3415, -8186, 3570);
        a.quadraticCurveTo(-8694, 4068, -9106, 4647);
        a.quadraticCurveTo(-9683, 5457, -9986, 6313);
        a.quadraticCurveTo(-10046, 6482, -10094, 6651);
        a.quadraticCurveTo(-10353, 7554, -10291, 8465);
        a.lineTo(-10291, 8466);
        a.quadraticCurveTo(-10144, 10632, -8203,
          12709);
        a.quadraticCurveTo(-7449, 13515, -6433, 14297);
        a.quadraticCurveTo(-4467, 15811, -1521, 17233);
        a.lineTo(-1503, 17200);
        a.quadraticCurveTo(-1632, 17123, -2554, 16305);
        a.quadraticCurveTo(-3477, 15486, -4267, 14520);
        a.quadraticCurveTo(-5058, 13553, -5391, 12691);
        a.quadraticCurveTo(-5725, 11828, -5797, 11337);
        a.quadraticCurveTo(-6034, 9721, -5539, 7934);
        a.lineTo(-5538, 7931);
        a.lineTo(-5537, 7930);
        a.quadraticCurveTo(-5132, 7476, -4527, 6896);
        a.quadraticCurveTo(-3314, 5734, -2303, 5100);
        a.quadraticCurveTo(-2340, 4928, -2355, 4667);
        a.quadraticCurveTo(-2384, 4145, -2269, 3700);
        a.quadraticCurveTo(-2208, 3462, -2107, 3260);
        a.quadraticCurveTo(-1945, 2932, -1682, 2697);
        a.quadraticCurveTo(-1151, 2222, -234, 2155);
        a.quadraticCurveTo(-170, 2023, -96, 1800);
        a.quadraticCurveTo(51, 1352, 104, 893);
        a.quadraticCurveTo(273, -577, -573, -1619);
        a.closePath()
      }, function(a) {
        a.transform(0.48, 0, 0, 0.48, 14397, 11068);
        a.fillStyle = b;
        a.beginPath();
        a.moveTo(-1871, 2339);
        a.quadraticCurveTo(-2325, 2541, -2595, 2956);
        a.quadraticCurveTo(-2979, 3545, -3165, 4233);
        a.quadraticCurveTo(-3248,
          4539, -3524, 4697);
        a.quadraticCurveTo(-4276, 5125, -5096, 5425);
        a.lineTo(-4657, 5483);
        a.quadraticCurveTo(-4474, 5509, -4384, 5667);
        a.lineTo(-5192, 6534);
        a.quadraticCurveTo(-6062, 7470, -6296, 8695);
        a.quadraticCurveTo(-6524, 9889, -6168, 11034);
        a.lineTo(-6127, 11060);
        a.lineTo(-6025, 11124);
        a.quadraticCurveTo(-6184, 9619, -5997, 8887);
        a.quadraticCurveTo(-5810, 8154, -5743, 8054);
        a.lineTo(-5517, 7695);
        a.quadraticCurveTo(-5358, 7437, -4967, 7066);
        a.quadraticCurveTo(-4134, 6275, -3400, 5396);
        a.quadraticCurveTo(-2624, 4466, -2255, 3298);
        a.quadraticCurveTo(-2130, 2899, -1954, 2521);
        a.lineTo(-1874, 2355);
        a.lineTo(-1871, 2339);
        a.closePath();
        a.moveTo(-2420, 370);
        a.quadraticCurveTo(-3330, 532, -4118, 1015);
        a.quadraticCurveTo(-5147, 1644, -6077, 2404);
        a.quadraticCurveTo(-6990, 3149, -7823, 3979);
        a.quadraticCurveTo(-8692, 4846, -9280, 5942);
        a.quadraticCurveTo(-9857, 7019, -9612, 8204);
        a.quadraticCurveTo(-9655, 11001, -7347, 12893);
        a.quadraticCurveTo(-8205, 11879, -8646, 10627);
        a.quadraticCurveTo(-9118, 9289, -8861, 7900);
        a.quadraticCurveTo(-8782, 7470, -8611, 7070);
        a.quadraticCurveTo(-8302,
          6345, -7809, 5733);
        a.quadraticCurveTo(-7163, 4930, -6248, 4457);
        a.quadraticCurveTo(-5370, 4003, -4431, 4003);
        a.quadraticCurveTo(-3953, 4003, -3458, 4121);
        a.quadraticCurveTo(-3462, 3065, -2974, 2134);
        a.quadraticCurveTo(-2533, 1293, -2420, 370);
        a.closePath()
      }, function(a) {
        a.transform(0.48, 0, 0, 0.48, 14397, 11068);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 40;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(-1503, 17200);
        a.quadraticCurveTo(-1632, 17123, -2554,
          16305);
        a.quadraticCurveTo(-3477, 15486, -4267, 14520);
        a.quadraticCurveTo(-5058, 13553, -5391, 12691);
        a.quadraticCurveTo(-5725, 11828, -5797, 11337);
        a.quadraticCurveTo(-6034, 9721, -5539, 7934);
        a.lineTo(-5538, 7931);
        a.lineTo(-5537, 7930);
        a.quadraticCurveTo(-5132, 7476, -4527, 6896);
        a.quadraticCurveTo(-3314, 5734, -2303, 5100);
        a.quadraticCurveTo(-2340, 4928, -2355, 4667);
        a.quadraticCurveTo(-2384, 4145, -2269, 3700);
        a.quadraticCurveTo(-2208, 3462, -2107, 3260);
        a.quadraticCurveTo(-1945, 2932, -1682, 2697);
        a.quadraticCurveTo(-1151, 2222, -234, 2155);
        a.quadraticCurveTo(-170, 2023, -96, 1800);
        a.quadraticCurveTo(51, 1352, 104, 893);
        a.quadraticCurveTo(273, -577, -573, -1619);
        a.quadraticCurveTo(-775, -1533, -1139, -1351);
        a.quadraticCurveTo(-1868, -987, -2682, -504);
        a.quadraticCurveTo(-3141, -231, -3597, 59);
        a.quadraticCurveTo(-5723, 1419, -7761, 3188);
        a.lineTo(-7878, 3286);
        a.quadraticCurveTo(-8028, 3415, -8186, 3570);
        a.quadraticCurveTo(-8694, 4068, -9106, 4647);
        a.quadraticCurveTo(-9683, 5457, -9986, 6313);
        a.quadraticCurveTo(-10046, 6482, -10094, 6651);
        a.quadraticCurveTo(-10353,
          7554, -10291, 8465);
        a.lineTo(-10291, 8466);
        a.quadraticCurveTo(-10144, 10632, -8203, 12709);
        a.quadraticCurveTo(-7449, 13515, -6433, 14297);
        a.quadraticCurveTo(-5846, 14457, -5495, 14268);
        a.lineTo(-5397, 14213);
        a.lineTo(-5329, 14138);
        a.quadraticCurveTo(-6024, 14088, -6271, 13960);
        a.quadraticCurveTo(-6529, 13826, -6703, 13641);
        a.quadraticCurveTo(-6297, 13641, -6165, 13434);
        a.quadraticCurveTo(-6124, 13369, -6115, 13292);
        a.lineTo(-6114, 13227);
        a.quadraticCurveTo(-6544, 13311, -6915, 13162);
        a.quadraticCurveTo(-7145, 13050, -7252, 12970);
        a.lineTo(-7297, 12934);
        a.lineTo(-7347, 12893);
        a.quadraticCurveTo(-9655, 11001, -9612, 8204);
        a.moveTo(-9597, 7840);
        a.lineTo(-9606, 7997);
        a.lineTo(-9612, 8204);
        a.moveTo(-5329, 14138);
        a.lineTo(-5300, 14140);
        a.lineTo(-5274, 14142);
        a.moveTo(-5397, 14213);
        a.lineTo(-5274, 14142);
        a.moveTo(-1521, 17233);
        a.quadraticCurveTo(-4467, 15811, -6433, 14297)
      }, function(a) {
        a.transform(0.48, 0, 0, 0.48, 14397, 11068);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 28.57;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(-2844, 292);
        a.lineTo(-2748, 234);
        a.lineTo(-2291, -37);
        a.moveTo(-1954, 2521);
        a.lineTo(-1831, 2398);
        a.lineTo(-1814, 2381);
        a.lineTo(-1599, 2184);
        a.moveTo(-6127, 11060);
        a.lineTo(-6138, 10941);
        a.moveTo(-1993, 2562);
        a.lineTo(-1954, 2521);
        a.moveTo(-6127, 11060);
        a.lineTo(-6125, 11077);
        a.quadraticCurveTo(-6093, 11398, -6038, 11696);
        a.moveTo(-2569, 3348);
        a.quadraticCurveTo(-2463, 3149, -2319, 2953);
        a.moveTo(-4546, 1392);
        a.quadraticCurveTo(-4142, 1113, -3708, 833);
        a.moveTo(-6300, 2715);
        a.lineTo(-6029,
          2494);
        a.quadraticCurveTo(-5707, 2235, -5359, 1976);
        a.moveTo(-3401, 4263);
        a.lineTo(-3588, 4275);
        a.quadraticCurveTo(-3829, 4297, -4093, 4349);
        a.lineTo(-4167, 4364);
        a.moveTo(-5632, 7514);
        a.lineTo(-4839, 6699);
        a.moveTo(-4325, 6158);
        a.lineTo(-3819, 5611);
        a.moveTo(-4788, 4527);
        a.quadraticCurveTo(-5117, 4631, -5432, 4774);
        a.moveTo(-3042, 4706);
        a.quadraticCurveTo(-2916, 4544, -2837, 4425);
        a.quadraticCurveTo(-2848, 4362, -2843, 4249);
        a.quadraticCurveTo(-2836, 4106, -2800, 3952);
        a.moveTo(-8856, 5460);
        a.quadraticCurveTo(-8725, 5256, -8570,
          5045);
        a.lineTo(-8365, 4777);
        a.moveTo(-9534, 7272);
        a.quadraticCurveTo(-9553, 7069, -9442, 6689);
        a.quadraticCurveTo(-9376, 6463, -9271, 6225);
        a.moveTo(-7522, 6364);
        a.lineTo(-7533, 6377);
        a.quadraticCurveTo(-7730, 6617, -7903, 6880);
        a.moveTo(-7828, 4150);
        a.quadraticCurveTo(-7456, 3747, -7010, 3336);
        a.moveTo(-8762, 8754);
        a.lineTo(-8828, 8987);
        a.lineTo(-8887, 9217);
        a.moveTo(-6105, 8817);
        a.quadraticCurveTo(-6073, 8490, -6026, 8148);
        a.moveTo(-6171, 10247);
        a.lineTo(-6172, 10082);
        a.quadraticCurveTo(-6172, 9835, -6160, 9576);
        a.moveTo(-5317,
          13464);
        a.quadraticCurveTo(-5402, 13383, -5518, 13192);
        a.quadraticCurveTo(-5660, 12958, -5773, 12662);
        a.moveTo(-8304, 7580);
        a.quadraticCurveTo(-8432, 7837, -8540, 8113);
        a.moveTo(-6242, 5217);
        a.quadraticCurveTo(-6621, 5464, -6953, 5766)
      }, function(a) {
        a.transform(0.48, 0, 0, 0.48, 14898, 11241);
        a.fillStyle = b;
        a.beginPath();
        a.moveTo(29, -2730);
        a.quadraticCurveTo(18, -2730, 8, -2730);
        a.quadraticCurveTo(-775, -2725, -1473, -2385);
        a.quadraticCurveTo(-1598, -2324, -1712, -2247);
        a.quadraticCurveTo(-1835, -2165, -1945, -2063);
        a.lineTo(-2105, -1920);
        a.quadraticCurveTo(-2051, -1145, -1854, -394);
        a.quadraticCurveTo(-1658, 357, -1281, 1029);
        a.lineTo(-1275, 1040);
        a.quadraticCurveTo(-893, 1719, -384, 2301);
        a.quadraticCurveTo(-137, 2582, 102, 2582);
        a.quadraticCurveTo(356, 2582, 602, 2267);
        a.quadraticCurveTo(800, 2015, 923, 1716);
        a.quadraticCurveTo(1200, 1045, 1441, 361);
        a.quadraticCurveTo(1694, -358, 1875, -1100);
        a.quadraticCurveTo(2015, -1676, 1895, -2258);
        a.lineTo(1717, -2349);
        a.quadraticCurveTo(1597, -2407, 1472, -2456);
        a.quadraticCurveTo(775, -2730, 29, -2730);
        a.closePath();
        a.moveTo(-1969, 1830);
        a.quadraticCurveTo(-2031, 2311, -1940, 2784);
        a.lineTo(-1926, 2835);
        a.quadraticCurveTo(-1806, 2714, -1672, 2714);
        a.quadraticCurveTo(-1609, 2714, -1542, 2741);
        a.quadraticCurveTo(-1433, 2786, -1366, 2898);
        a.quadraticCurveTo(-1288, 3028, -1244, 3172);
        a.lineTo(-1221, 3164);
        a.quadraticCurveTo(-990, 3009, -922, 2720);
        a.lineTo(-895, 2627);
        a.quadraticCurveTo(-1193, 2510, -1457, 2316);
        a.quadraticCurveTo(-1628, 2191, -1784, 2034);
        a.quadraticCurveTo(-1882, 1935, -1969, 1830);
        a.closePath();
        a.moveTo(2090, 2025);
        a.quadraticCurveTo(1942,
          2169, 1782, 2285);
        a.quadraticCurveTo(1453, 2524, 1069, 2647);
        a.quadraticCurveTo(1240, 2920, 1464, 3159);
        a.lineTo(1495, 3185);
        a.quadraticCurveTo(1485, 2702, 1801, 2702);
        a.quadraticCurveTo(1871, 2702, 1958, 2726);
        a.quadraticCurveTo(2051, 2751, 2109, 2838);
        a.lineTo(2146, 2897);
        a.quadraticCurveTo(2234, 2453, 2090, 2025);
        a.closePath()
      }, function(a) {
        a.transform(0.48, 0, 0, 0.48, 14898, 11241);
        a.fillStyle = c;
        a.beginPath();
        a.moveTo(1895, -2258);
        a.quadraticCurveTo(2015, -1676, 1875, -1100);
        a.quadraticCurveTo(1694, -358, 1441, 361);
        a.quadraticCurveTo(1200,
          1045, 923, 1716);
        a.quadraticCurveTo(800, 2015, 602, 2267);
        a.quadraticCurveTo(356, 2582, 102, 2582);
        a.quadraticCurveTo(-137, 2582, -384, 2301);
        a.quadraticCurveTo(-893, 1719, -1275, 1040);
        a.lineTo(-1281, 1029);
        a.lineTo(-1281, 1029);
        a.quadraticCurveTo(-1281, 1029, -1281, 1029);
        a.quadraticCurveTo(-1658, 357, -1854, -394);
        a.quadraticCurveTo(-2051, -1145, -2105, -1920);
        a.quadraticCurveTo(-2607, -1485, -3179, -1168);
        a.lineTo(-3154, -913);
        a.quadraticCurveTo(-3092, -110, -3224, 679);
        a.quadraticCurveTo(-2577, 909, -2202, 1509);
        a.quadraticCurveTo(-2096,
          1677, -1969, 1830);
        a.quadraticCurveTo(-1882, 1935, -1784, 2034);
        a.quadraticCurveTo(-1628, 2191, -1457, 2316);
        a.quadraticCurveTo(-1193, 2510, -895, 2627);
        a.quadraticCurveTo(-716, 2697, -524, 2739);
        a.quadraticCurveTo(-230, 2803, 76, 2803);
        a.quadraticCurveTo(518, 2803, 988, 2671);
        a.lineTo(1069, 2647);
        a.quadraticCurveTo(1453, 2524, 1782, 2285);
        a.quadraticCurveTo(1942, 2169, 2090, 2025);
        a.quadraticCurveTo(2251, 1867, 2398, 1675);
        a.quadraticCurveTo(2848, 1083, 3270, 825);
        a.quadraticCurveTo(3289, 538, 3323, 253);
        a.quadraticCurveTo(3408, -448,
          3399, -1154);
        a.quadraticCurveTo(3043, -1322, 2763, -1603);
        a.quadraticCurveTo(2369, -1999, 1895, -2258);
        a.closePath()
      }, function(a) {
        a.transform(0.48, 0, 0, 0.48, 14898, 11241);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 28.57;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(1717, -2349);
        a.lineTo(1791, -2179);
        a.moveTo(1971, -1331);
        a.quadraticCurveTo(1976, -1189, 1966, -1044);
        a.moveTo(1884, -1896);
        a.quadraticCurveTo(1918, -1769, 1940, -1641);
        a.moveTo(1925, -735);
        a.lineTo(1908, -654);
        a.lineTo(1866, -463);
        a.moveTo(-1712, -2247);
        a.lineTo(-1741, -2148);
        a.moveTo(-1785, -1953);
        a.quadraticCurveTo(-1818, -1781, -1826, -1605);
        a.moveTo(-1281, 1029);
        a.lineTo(-1285, 1001);
        a.moveTo(-1715, -727);
        a.lineTo(-1688, -640);
        a.lineTo(-1626, -443);
        a.moveTo(-1821, -1306);
        a.quadraticCurveTo(-1810, -1147, -1778, -986);
        a.moveTo(-1400, 404);
        a.lineTo(-1338, 701);
        a.moveTo(-1262, 1557);
        a.quadraticCurveTo(-1273, 1698, -1300, 1834);
        a.moveTo(-1281, 1029);
        a.quadraticCurveTo(-1265, 1153, -1259, 1273);
        a.moveTo(-1457,
          2316);
        a.quadraticCurveTo(-1410, 2213, -1373, 2107);
        a.moveTo(1782, 2285);
        a.quadraticCurveTo(1730, 2222, 1688, 2157);
        a.moveTo(1484, 1644);
        a.quadraticCurveTo(1503, 1765, 1546, 1881);
        a.moveTo(1534, 1012);
        a.lineTo(1508, 1124);
        a.quadraticCurveTo(1484, 1229, 1475, 1330);
        a.moveTo(1665, 437);
        a.lineTo(1603, 712);
        a.moveTo(-1547, -174);
        a.lineTo(-1468, 121);
        a.moveTo(1798, -156);
        a.lineTo(1735, 128)
      }, function(a) {
        a.transform(0.48, 0, 0, 0.48, 14898, 11241);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 40;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(-2105, -1920);
        a.lineTo(-1945, -2063);
        a.quadraticCurveTo(-1835, -2165, -1712, -2247);
        a.quadraticCurveTo(-1598, -2324, -1473, -2385);
        a.quadraticCurveTo(-775, -2725, 8, -2730);
        a.quadraticCurveTo(765, -2734, 1472, -2456);
        a.quadraticCurveTo(1597, -2407, 1717, -2349);
        a.lineTo(1895, -2258);
        a.quadraticCurveTo(2369, -1999, 2763, -1603);
        a.quadraticCurveTo(3043, -1322, 3399, -1154);
        a.lineTo(3461, -1126);
        a.moveTo(-3226, -1142);
        a.lineTo(-3179, -1168);
        a.quadraticCurveTo(-2607, -1485, -2105, -1920);
        a.moveTo(-3224, 679);
        a.quadraticCurveTo(-2577, 909, -2202, 1509);
        a.quadraticCurveTo(-2096, 1677, -1969, 1830);
        a.quadraticCurveTo(-1882, 1935, -1784, 2034);
        a.quadraticCurveTo(-1628, 2191, -1457, 2316);
        a.moveTo(-1969, 1830);
        a.quadraticCurveTo(-2031, 2311, -1940, 2784);
        a.lineTo(-1926, 2835);
        a.quadraticCurveTo(-1749, 2657, -1542, 2741);
        a.quadraticCurveTo(-1433, 2786, -1366, 2898);
        a.quadraticCurveTo(-1288, 3028, -1244, 3172);
        a.lineTo(-1221, 3164);
        a.quadraticCurveTo(-990, 3009, -922, 2720);
        a.lineTo(-895, 2627);
        a.quadraticCurveTo(-1193,
          2510, -1457, 2316);
        a.moveTo(-895, 2627);
        a.quadraticCurveTo(-716, 2697, -524, 2739);
        a.quadraticCurveTo(190, 2895, 988, 2671);
        a.lineTo(1069, 2647);
        a.quadraticCurveTo(1453, 2524, 1782, 2285);
        a.moveTo(-3242, 673);
        a.lineTo(-3224, 679);
        a.moveTo(3270, 825);
        a.quadraticCurveTo(3391, 751, 3509, 704);
        a.moveTo(3270, 825);
        a.quadraticCurveTo(2848, 1083, 2398, 1675);
        a.quadraticCurveTo(2251, 1867, 2090, 2025);
        a.quadraticCurveTo(2234, 2453, 2146, 2897);
        a.lineTo(2109, 2838);
        a.quadraticCurveTo(2051, 2751, 1958, 2726);
        a.quadraticCurveTo(1483, 2595, 1495,
          3185);
        a.lineTo(1464, 3159);
        a.quadraticCurveTo(1240, 2920, 1069, 2647);
        a.moveTo(2090, 2025);
        a.quadraticCurveTo(1942, 2169, 1782, 2285)
      }, function(a) {
        a.transform(0.48, 0, 0, 0.48, 14924, 10719);
        a.fillStyle = "rgba(255,255,255,1.000)";
        a.beginPath();
        a.moveTo(1846, -2264);
        a.quadraticCurveTo(1594, -1821, 1766, -1339);
        a.lineTo(1789, -1277);
        a.quadraticCurveTo(1866, -1390, 1927, -1547);
        a.quadraticCurveTo(2065, -1909, 1846, -2264);
        a.closePath();
        a.moveTo(-1866, -2414);
        a.quadraticCurveTo(-1988, -2163, -1979, -1755);
        a.quadraticCurveTo(-1973, -1467, -1881, -1276);
        a.quadraticCurveTo(-1463, -1799, -1839, -2375);
        a.lineTo(-1866, -2414);
        a.closePath();
        a.moveTo(1486, -2661);
        a.quadraticCurveTo(1274, -2525, 1060, -2423);
        a.quadraticCurveTo(1059, -1678, 1125, -1322);
        a.quadraticCurveTo(1187, -981, 1265, -981);
        a.quadraticCurveTo(1268, -981, 1272, -982);
        a.quadraticCurveTo(1419, -982, 1540, -1045);
        a.quadraticCurveTo(1036, -1774, 1617, -2397);
        a.lineTo(1691, -2467);
        a.quadraticCurveTo(1602, -2564, 1486, -2661);
        a.closePath();
        a.moveTo(-1444, -2773);
        a.quadraticCurveTo(-1591, -2730, -1697, -2637);
        a.quadraticCurveTo(-1620, -2552, -1560, -2461);
        a.quadraticCurveTo(-1083, -1736, -1546, -963);
        a.quadraticCurveTo(-1398, -906, -1198, -906);
        a.quadraticCurveTo(-1195, -906, -1191, -906);
        a.quadraticCurveTo(-1025, -1437, -1048, -1864);
        a.lineTo(-1077, -2330);
        a.lineTo(-1158, -2446);
        a.quadraticCurveTo(-1266, -2592, -1444, -2773);
        a.closePath()
      }, function(a) {
        a.transform(0.48, 0, 0, 0.48, 14924, 10719);
        a.fillStyle = "rgba(0,0,0,1.000)";
        a.beginPath();
        a.moveTo(1691, -2467);
        a.lineTo(1617, -2397);
        a.quadraticCurveTo(1036, -1774, 1540, -1045);
        a.quadraticCurveTo(1681, -1119, 1789, -1277);
        a.lineTo(1766, -1339);
        a.quadraticCurveTo(1594, -1821, 1846, -2264);
        a.quadraticCurveTo(1783, -2366, 1691, -2467);
        a.closePath();
        a.moveTo(-1706, -2639);
        a.quadraticCurveTo(-1719, -2639, -1719, -2618);
        a.quadraticCurveTo(-1808, -2534, -1866, -2414);
        a.lineTo(-1839, -2375);
        a.quadraticCurveTo(-1463, -1799, -1881, -1276);
        a.quadraticCurveTo(-1828, -1165, -1546, -963);
        a.quadraticCurveTo(-1083, -1736, -1560, -2461);
        a.quadraticCurveTo(-1620, -2552, -1697, -2637);
        a.quadraticCurveTo(-1702, -2639, -1706, -2639);
        a.closePath()
      }, function(a) {
        a.transform(0.48, 0, 0, 0.48, 14924, 10719);
        a.fillStyle = c;
        a.beginPath();
        a.moveTo(504, -7675);
        a.quadraticCurveTo(483, -7675, 458, -7670);
        a.quadraticCurveTo(303, -7639, 110, -7354);
        a.lineTo(72, -7173);
        a.quadraticCurveTo(-75, -6552, -84, -5920);
        a.lineTo(0, -5470);
        a.quadraticCurveTo(3, -5138, -4, -4806);
        a.lineTo(-55, -2986);
        a.quadraticCurveTo(-60, -2829, -132, -2714);
        a.quadraticCurveTo(-249, -2531, -379, -2531);
        a.quadraticCurveTo(-522, -2531, -683, -2750);
        a.quadraticCurveTo(-915, -2821, -1071, -3109);
        a.quadraticCurveTo(-1125, -3208, -1179, -3274);
        a.quadraticCurveTo(-1286, -3404, -1395, -3404);
        a.quadraticCurveTo(-1475, -3404, -1555, -3334);
        a.quadraticCurveTo(-1801, -3121, -1548, -2877);
        a.lineTo(-1444, -2773);
        a.quadraticCurveTo(-1266, -2592, -1158, -2446);
        a.lineTo(-1077, -2330);
        a.quadraticCurveTo(-993, -2202, -930, -2073);
        a.quadraticCurveTo(-901, -2012, -875, -1936);
        a.quadraticCurveTo(-811, -1894, -769, -1831);
        a.quadraticCurveTo(-380, -1249, -298, -527);
        a.quadraticCurveTo(-189, 432, -50, 1385);
        a.lineTo(-38, 1575);
        a.quadraticCurveTo(14,
          2265, -214, 2911);
        a.quadraticCurveTo(-140, 3258, -59, 3411);
        a.quadraticCurveTo(33, 3510, 122, 3510);
        a.quadraticCurveTo(271, 3510, 409, 3232);
        a.quadraticCurveTo(627, 2788, 824, 1738);
        a.quadraticCurveTo(910, 1280, 991, 893);
        a.quadraticCurveTo(1073, 494, 1151, 169);
        a.lineTo(1190, 6);
        a.quadraticCurveTo(1359, -675, 1540, -1045);
        a.lineTo(1540, -1045);
        a.quadraticCurveTo(1419, -982, 1272, -982);
        a.quadraticCurveTo(1269, -981, 1265, -981);
        a.quadraticCurveTo(1187, -981, 1125, -1322);
        a.quadraticCurveTo(1059, -1678, 1060, -2423);
        a.quadraticCurveTo(1274, -2525, 1486, -2661);
        a.lineTo(1592, -2731);
        a.quadraticCurveTo(1934, -2966, 1778, -3215);
        a.quadraticCurveTo(1683, -3365, 1533, -3365);
        a.quadraticCurveTo(1434, -3365, 1310, -3300);
        a.lineTo(1238, -3260);
        a.quadraticCurveTo(1248, -3864, 882, -4324);
        a.quadraticCurveTo(516, -4785, 384, -5168);
        a.quadraticCurveTo(251, -5551, 317, -6093);
        a.quadraticCurveTo(382, -6636, 557, -7180);
        a.quadraticCurveTo(608, -7337, 621, -7444);
        a.lineTo(621, -7444);
        a.quadraticCurveTo(621, -7444, 621, -7444);
        a.quadraticCurveTo(649, -7675, 504, -7675);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 14924, 10719);
        a.fillStyle = b;
        a.beginPath();
        a.moveTo(110, -7354);
        a.quadraticCurveTo(-40, -7132, -215, -6755);
        a.quadraticCurveTo(-613, -5895, -596, -5022);
        a.quadraticCurveTo(-591, -4787, -614, -4479);
        a.lineTo(-635, -4248);
        a.quadraticCurveTo(-1077, -3768, -1179, -3274);
        a.quadraticCurveTo(-1125, -3208, -1071, -3109);
        a.quadraticCurveTo(-915, -2821, -683, -2750);
        a.quadraticCurveTo(-523, -2531, -379, -2531);
        a.quadraticCurveTo(-248, -2531, -132, -2714);
        a.quadraticCurveTo(-60, -2829, -55, -2986);
        a.lineTo(-4, -4806);
        a.quadraticCurveTo(3, -5138, 0, -5470);
        a.lineTo(-84, -5920);
        a.quadraticCurveTo(-75, -6552, 72, -7173);
        a.lineTo(110, -7354);
        a.closePath();
        a.moveTo(-1077, -2330);
        a.lineTo(-1048, -1864);
        a.quadraticCurveTo(-1025, -1437, -1191, -906);
        a.quadraticCurveTo(-1194, -906, -1198, -906);
        a.quadraticCurveTo(-1398, -906, -1546, -963);
        a.lineTo(-1546, -963);
        a.quadraticCurveTo(-1223, -398, -997, 123);
        a.quadraticCurveTo(-786, 610, -659, 1058);
        a.quadraticCurveTo(-565, 1388, -484, 1706);
        a.quadraticCurveTo(-338, 2281, -233, 2814);
        a.lineTo(-214,
          2911);
        a.quadraticCurveTo(14, 2265, -38, 1575);
        a.lineTo(-50, 1385);
        a.quadraticCurveTo(-189, 432, -298, -527);
        a.quadraticCurveTo(-380, -1249, -769, -1831);
        a.quadraticCurveTo(-811, -1894, -875, -1936);
        a.lineTo(-875, -1936);
        a.quadraticCurveTo(-875, -1936, -875, -1936);
        a.quadraticCurveTo(-901, -2012, -930, -2073);
        a.quadraticCurveTo(-993, -2202, -1077, -2330);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 14924, 10719);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 40;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(621, -7444);
        a.quadraticCurveTo(653, -7709, 458, -7670);
        a.quadraticCurveTo(303, -7639, 110, -7354);
        a.moveTo(621, -7444);
        a.quadraticCurveTo(608, -7337, 557, -7180);
        a.quadraticCurveTo(382, -6636, 317, -6093);
        a.quadraticCurveTo(251, -5551, 384, -5168);
        a.quadraticCurveTo(516, -4785, 882, -4324);
        a.quadraticCurveTo(1248, -3864, 1238, -3260);
        a.lineTo(1310, -3300);
        a.quadraticCurveTo(1621, -3464, 1778, -3215);
        a.quadraticCurveTo(1934, -2966, 1592, -2731);
        a.lineTo(1486, -2661);
        a.quadraticCurveTo(1602, -2564, 1691, -2467);
        a.quadraticCurveTo(1783, -2366, 1846, -2264);
        a.quadraticCurveTo(2065, -1909, 1927, -1547);
        a.quadraticCurveTo(1866, -1390, 1789, -1277);
        a.quadraticCurveTo(1681, -1119, 1540, -1045);
        a.quadraticCurveTo(1359, -675, 1190, 6);
        a.lineTo(1151, 169);
        a.quadraticCurveTo(1073, 494, 991, 893);
        a.quadraticCurveTo(910, 1280, 824, 1738);
        a.quadraticCurveTo(627, 2788, 409, 3232);
        a.quadraticCurveTo(190, 3675, -59, 3411);
        a.quadraticCurveTo(-140, 3258, -214, 2911);
        a.lineTo(-233, 2814);
        a.quadraticCurveTo(-338, 2281, -484, 1706);
        a.quadraticCurveTo(-565,
          1388, -659, 1058);
        a.quadraticCurveTo(-786, 610, -997, 123);
        a.quadraticCurveTo(-1223, -398, -1546, -963);
        a.quadraticCurveTo(-1828, -1165, -1881, -1276);
        a.quadraticCurveTo(-1973, -1467, -1979, -1755);
        a.quadraticCurveTo(-1988, -2163, -1866, -2414);
        a.quadraticCurveTo(-1808, -2534, -1719, -2618);
        a.moveTo(-1697, -2637);
        a.quadraticCurveTo(-1591, -2730, -1444, -2773);
        a.lineTo(-1548, -2877);
        a.quadraticCurveTo(-1801, -3121, -1555, -3334);
        a.quadraticCurveTo(-1365, -3500, -1179, -3274);
        a.quadraticCurveTo(-1077, -3768, -635, -4248);
        a.lineTo(-614, -4479);
        a.quadraticCurveTo(-591, -4787, -596, -5022);
        a.quadraticCurveTo(-613, -5895, -215, -6755);
        a.quadraticCurveTo(-40, -7132, 110, -7354);
        a.moveTo(1486, -2661);
        a.quadraticCurveTo(1274, -2525, 1060, -2423);
        a.quadraticCurveTo(1059, -1678, 1125, -1322);
        a.quadraticCurveTo(1190, -967, 1272, -982);
        a.quadraticCurveTo(1419, -982, 1540, -1045);
        a.quadraticCurveTo(1036, -1774, 1617, -2397);
        a.lineTo(1691, -2467);
        a.moveTo(1060, -2423);
        a.lineTo(901, -2353);
        a.quadraticCurveTo(553, -2210, 543, -1729);
        a.moveTo(483, -2694);
        a.quadraticCurveTo(941, -3088, 1238, -3260);
        a.moveTo(1846, -2264);
        a.quadraticCurveTo(1594, -1821, 1766, -1339);
        a.lineTo(1789, -1277);
        a.moveTo(-683, -2750);
        a.quadraticCurveTo(-915, -2821, -1071, -3109);
        a.quadraticCurveTo(-1125, -3208, -1179, -3274);
        a.moveTo(-1444, -2773);
        a.quadraticCurveTo(-1266, -2592, -1158, -2446);
        a.lineTo(-1077, -2330);
        a.quadraticCurveTo(-993, -2202, -930, -2073);
        a.quadraticCurveTo(-901, -2012, -875, -1936);
        a.moveTo(-421, -2734);
        a.quadraticCurveTo(-562, -2713, -683, -2750);
        a.moveTo(-1881, -1276);
        a.quadraticCurveTo(-1463, -1799, -1839, -2375);
        a.lineTo(-1866, -2414);
        a.moveTo(-1719, -2618);
        a.lineTo(-1697, -2637);
        a.quadraticCurveTo(-1620, -2552, -1560, -2461);
        a.quadraticCurveTo(-1083, -1736, -1546, -963);
        a.quadraticCurveTo(-1395, -905, -1191, -906);
        a.quadraticCurveTo(-1025, -1437, -1048, -1864);
        a.lineTo(-1077, -2330);
        a.moveTo(-875, -1936);
        a.quadraticCurveTo(-822, -1782, -783, -1568)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 14924, 10719);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 28.57;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(436, -7172);
        a.quadraticCurveTo(526, -7323, 621, -7444);
        a.moveTo(-84, -5920);
        a.lineTo(-8, -6155);
        a.moveTo(128, -6531);
        a.quadraticCurveTo(192, -6693, 259, -6837);
        a.moveTo(683, -1206);
        a.lineTo(537, -1172);
        a.lineTo(538, -1065);
        a.quadraticCurveTo(536, -876, 594, -692);
        a.lineTo(683, -723);
        a.moveTo(362, -1145);
        a.lineTo(537, -1172);
        a.lineTo(563, -1508);
        a.moveTo(1151, 169);
        a.lineTo(790, -299);
        a.lineTo(643, -220);
        a.moveTo(594, -692);
        a.lineTo(790, -299);
        a.lineTo(945, -361);
        a.moveTo(482, -663);
        a.lineTo(594, -692);
        a.moveTo(813, 958);
        a.quadraticCurveTo(901, 924, 991, 893);
        a.moveTo(387, 1139);
        a.quadraticCurveTo(512, 1078, 641, 1025);
        a.moveTo(-50, 1385);
        a.quadraticCurveTo(33, 1331, 120, 1281);
        a.lineTo(147, 1266);
        a.moveTo(-302, -5223);
        a.lineTo(-203, -5526);
        a.moveTo(-88, -5905);
        a.lineTo(-84, -5920);
        a.moveTo(-614, -4479);
        a.quadraticCurveTo(-526, -4617, -410, -4920);
        a.moveTo(-764, -1206);
        a.lineTo(-724, -996);
        a.lineTo(-522, -965);
        a.moveTo(-997, 123);
        a.lineTo(-818, -377);
        a.lineTo(-905, -421);
        a.moveTo(-818, -377);
        a.lineTo(-779, -541);
        a.quadraticCurveTo(-726, -763, -724, -996);
        a.lineTo(-864, -1005);
        a.moveTo(-818, -377);
        a.lineTo(-643, -281);
        a.moveTo(-484, 1706);
        a.quadraticCurveTo(-405, 1633, -318, 1569);
        a.moveTo(-75, 1401);
        a.lineTo(-50, 1385)
      }
    ]
  }
}

function make_adult_6(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11024);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-1879, -343);
      a.lineTo(-3353, 346);
      a.quadraticCurveTo(-3992, 661, -4618, 911);
      a.quadraticCurveTo(-5280, 1172, -5993, 1336);
      a.quadraticCurveTo(-6646, 1481, -7290, 1910);
      a.lineTo(-7447, 2022);
      a.quadraticCurveTo(-8191, 2598, -8662, 2862);
      a.lineTo(-8674, 2867);
      a.quadraticCurveTo(-8749, 2897, -8812, 2910);
      a.lineTo(-9230, 3022);
      a.quadraticCurveTo(-10393, 3514, -11203, 4306);
      a.quadraticCurveTo(-11990,
        5132, -12385, 6202);
      a.quadraticCurveTo(-12766, 7347, -12873, 7892);
      a.lineTo(-12780, 7916);
      a.quadraticCurveTo(-12574, 7969, -12371, 8031);
      a.quadraticCurveTo(-12052, 6923, -11423, 6083);
      a.quadraticCurveTo(-10751, 5243, -10018, 4587);
      a.quadraticCurveTo(-9754, 4379, -9490, 4299);
      a.quadraticCurveTo(-8832, 4118, -8234, 4040);
      a.quadraticCurveTo(-7217, 3283, -6419, 3283);
      a.quadraticCurveTo(-6403, 3283, -6388, 3283);
      a.quadraticCurveTo(-6379, 3283, -6371, 3283);
      a.quadraticCurveTo(-5831, 3283, -5356, 3588);
      a.quadraticCurveTo(-4832, 3863, -4604,
        3958);
      a.quadraticCurveTo(-4571, 3971, -4535, 3971);
      a.quadraticCurveTo(-4463, 3971, -4376, 3919);
      a.lineTo(-4046, 3210);
      a.quadraticCurveTo(-3619, 2240, -3123, 1282);
      a.quadraticCurveTo(-2607, 309, -1879, -343);
      a.closePath();
      a.moveTo(-2459, 2496);
      a.quadraticCurveTo(-2928, 2508, -3479, 3284);
      a.quadraticCurveTo(-4030, 4060, -4434, 4815);
      a.quadraticCurveTo(-4606, 4822, -4773, 4893);
      a.quadraticCurveTo(-4818, 4907, -4867, 4936);
      a.lineTo(-4872, 4935);
      a.quadraticCurveTo(-4880, 4926, -4895, 4924);
      a.quadraticCurveTo(-4927, 4911, -4958, 4905);
      a.quadraticCurveTo(-4991, 4892, -5031, 4892);
      a.quadraticCurveTo(-5039, 4892, -5047, 4892);
      a.quadraticCurveTo(-5091, 4887, -5140, 4887);
      a.quadraticCurveTo(-5188, 4887, -5241, 4892);
      a.quadraticCurveTo(-5308, 4920, -5366, 4920);
      a.quadraticCurveTo(-5394, 4920, -5420, 4913);
      a.quadraticCurveTo(-5430, 4902, -5440, 4902);
      a.lineTo(-5528, 4905);
      a.lineTo(-5549, 4907);
      a.quadraticCurveTo(-5603, 4880, -5679, 4880);
      a.quadraticCurveTo(-5731, 4880, -5792, 4893);
      a.quadraticCurveTo(-5794, 4893, -5795, 4893);
      a.quadraticCurveTo(-5811, 4893, -5830, 4902);
      a.lineTo(-5842, 4901);
      a.lineTo(-5873, 4897);
      a.lineTo(-6028, 4885);
      a.lineTo(-6272, 4830);
      a.lineTo(-6399, 4798);
      a.quadraticCurveTo(-6545, 4829, -6695, 4931);
      a.lineTo(-6850, 5038);
      a.quadraticCurveTo(-5854, 5402, -5709, 5469);
      a.quadraticCurveTo(-5672, 5481, -5646, 5505);
      a.quadraticCurveTo(-6171, 5929, -7091, 6740);
      a.quadraticCurveTo(-7841, 7267, -8807, 7834);
      a.quadraticCurveTo(-9420, 8196, -9892, 8833);
      a.quadraticCurveTo(-9786, 8893, -9677, 8893);
      a.quadraticCurveTo(-9486, 8893, -9286, 8708);
      a.quadraticCurveTo(-8476, 8142, -7809, 7704);
      a.quadraticCurveTo(-7501, 7483, -6994, 7015);
      a.lineTo(-6958, 6981);
      a.lineTo(-6737, 6776);
      a.lineTo(-6572, 6619);
      a.lineTo(-6384, 6434);
      a.lineTo(-6214, 6268);
      a.quadraticCurveTo(-6120, 6179, -6034, 6109);
      a.lineTo(-5984, 6068);
      a.lineTo(-5936, 6027);
      a.lineTo(-5901, 6E3);
      a.lineTo(-5866, 5973);
      a.quadraticCurveTo(-5844, 5950, -5826, 5939);
      a.quadraticCurveTo(-5492, 5609, -5261, 5551);
      a.quadraticCurveTo(-5249, 5541, -5239, 5541);
      a.quadraticCurveTo(-5235, 5541, -5232, 5542);
      a.quadraticCurveTo(-5213, 5530, -5194, 5526);
      a.quadraticCurveTo(-5043,
        5445, -4895, 5415);
      a.lineTo(-4871, 5389);
      a.quadraticCurveTo(-4713, 5248, -4559, 5191);
      a.quadraticCurveTo(-4392, 4907, -4217, 4647);
      a.quadraticCurveTo(-4181, 4629, -4152, 4602);
      a.quadraticCurveTo(-4125, 4552, -4022, 4410);
      a.quadraticCurveTo(-3878, 4201, -3869, 4180);
      a.lineTo(-3853, 4134);
      a.lineTo(-3833, 4080);
      a.quadraticCurveTo(-3646, 3808, -3462, 3568);
      a.lineTo(-3377, 3482);
      a.lineTo(-3307, 3413);
      a.quadraticCurveTo(-3211, 3321, -3131, 3189);
      a.lineTo(-3099, 3131);
      a.lineTo(-3076, 3105);
      a.lineTo(-3076, 3105);
      a.quadraticCurveTo(-3076,
        3105, -3076, 3105);
      a.lineTo(-3076, 3103);
      a.quadraticCurveTo(-2874, 2877, -2672, 2683);
      a.quadraticCurveTo(-2564, 2582, -2459, 2496);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11024);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-1879, -343);
      a.quadraticCurveTo(-2607, 309, -3123, 1282);
      a.quadraticCurveTo(-3619, 2240, -4046, 3210);
      a.lineTo(-4376, 3919);
      a.quadraticCurveTo(-4463, 3971, -4535, 3971);
      a.quadraticCurveTo(-4571, 3971, -4604, 3958);
      a.quadraticCurveTo(-4832, 3863, -5356, 3588);
      a.quadraticCurveTo(-5830, 3283, -6371,
        3283);
      a.quadraticCurveTo(-6380, 3283, -6388, 3283);
      a.quadraticCurveTo(-6403, 3283, -6419, 3283);
      a.quadraticCurveTo(-7217, 3283, -8234, 4040);
      a.quadraticCurveTo(-8832, 4118, -9490, 4299);
      a.quadraticCurveTo(-9754, 4379, -10018, 4587);
      a.quadraticCurveTo(-10751, 5243, -11423, 6083);
      a.quadraticCurveTo(-12052, 6923, -12371, 8031);
      a.quadraticCurveTo(-12574, 7969, -12780, 7916);
      a.lineTo(-12873, 7892);
      a.quadraticCurveTo(-12766, 7347, -12385, 6202);
      a.quadraticCurveTo(-11990, 5132, -11203, 4306);
      a.quadraticCurveTo(-10393, 3514, -9230, 3022);
      a.lineTo(-8812, 2910);
      a.quadraticCurveTo(-8749, 2897, -8674, 2867);
      a.lineTo(-8662, 2862);
      a.quadraticCurveTo(-8191, 2598, -7447, 2022);
      a.lineTo(-7290, 1910);
      a.quadraticCurveTo(-6646, 1481, -5993, 1336);
      a.quadraticCurveTo(-5280, 1172, -4618, 911);
      a.quadraticCurveTo(-3992, 661, -3353, 346);
      a.lineTo(-1879, -343);
      a.closePath();
      a.moveTo(-2459, 2496);
      a.quadraticCurveTo(-2564, 2582, -2672, 2683);
      a.quadraticCurveTo(-2874, 2877, -3076, 3103);
      a.lineTo(-3076, 3105);
      a.lineTo(-3099, 3131);
      a.lineTo(-3131, 3189);
      a.quadraticCurveTo(-3211, 3321, -3307, 3413);
      a.lineTo(-3377, 3482);
      a.lineTo(-3462, 3568);
      a.quadraticCurveTo(-3646, 3808, -3833, 4080);
      a.lineTo(-3853, 4134);
      a.lineTo(-3869, 4180);
      a.quadraticCurveTo(-3878, 4201, -4022, 4410);
      a.quadraticCurveTo(-4125, 4552, -4152, 4602);
      a.quadraticCurveTo(-4181, 4629, -4217, 4647);
      a.quadraticCurveTo(-4392, 4907, -4559, 5191);
      a.quadraticCurveTo(-4713, 5248, -4871, 5389);
      a.lineTo(-4895, 5415);
      a.quadraticCurveTo(-5043, 5445, -5194, 5526);
      a.quadraticCurveTo(-5213, 5530, -5232, 5542);
      a.quadraticCurveTo(-5235, 5541, -5239, 5541);
      a.quadraticCurveTo(-5249,
        5541, -5261, 5551);
      a.quadraticCurveTo(-5492, 5609, -5826, 5939);
      a.quadraticCurveTo(-5844, 5950, -5866, 5973);
      a.lineTo(-5901, 6E3);
      a.lineTo(-5936, 6027);
      a.lineTo(-5984, 6068);
      a.lineTo(-6034, 6109);
      a.quadraticCurveTo(-6120, 6179, -6214, 6268);
      a.lineTo(-6384, 6434);
      a.lineTo(-6572, 6619);
      a.lineTo(-6737, 6776);
      a.lineTo(-6958, 6981);
      a.lineTo(-6994, 7015);
      a.quadraticCurveTo(-7501, 7483, -7809, 7704);
      a.quadraticCurveTo(-8476, 8142, -9286, 8708);
      a.quadraticCurveTo(-9487, 8893, -9677, 8893);
      a.quadraticCurveTo(-9786, 8893, -9892, 8833);
      a.quadraticCurveTo(-9420,
        8196, -8807, 7834);
      a.quadraticCurveTo(-7841, 7267, -7091, 6740);
      a.quadraticCurveTo(-6171, 5929, -5646, 5505);
      a.quadraticCurveTo(-5672, 5481, -5709, 5469);
      a.quadraticCurveTo(-5854, 5402, -6850, 5038);
      a.lineTo(-6695, 4931);
      a.quadraticCurveTo(-6545, 4829, -6399, 4798);
      a.lineTo(-6272, 4830);
      a.lineTo(-6028, 4885);
      a.lineTo(-5873, 4897);
      a.lineTo(-5842, 4901);
      a.lineTo(-5830, 4902);
      a.quadraticCurveTo(-5811, 4893, -5795, 4893);
      a.quadraticCurveTo(-5793, 4893, -5792, 4893);
      a.quadraticCurveTo(-5730, 4880, -5679, 4880);
      a.quadraticCurveTo(-5604,
        4880, -5549, 4907);
      a.lineTo(-5528, 4905);
      a.lineTo(-5440, 4902);
      a.quadraticCurveTo(-5430, 4902, -5420, 4913);
      a.quadraticCurveTo(-5394, 4920, -5366, 4920);
      a.quadraticCurveTo(-5308, 4920, -5241, 4892);
      a.quadraticCurveTo(-5188, 4887, -5140, 4887);
      a.quadraticCurveTo(-5091, 4887, -5047, 4892);
      a.quadraticCurveTo(-5039, 4892, -5031, 4892);
      a.quadraticCurveTo(-4990, 4892, -4958, 4905);
      a.quadraticCurveTo(-4927, 4911, -4895, 4924);
      a.quadraticCurveTo(-4880, 4926, -4872, 4935);
      a.lineTo(-4867, 4936);
      a.quadraticCurveTo(-4818, 4907, -4773, 4893);
      a.quadraticCurveTo(-4606,
        4822, -4434, 4815);
      a.quadraticCurveTo(-4030, 4060, -3479, 3284);
      a.quadraticCurveTo(-2928, 2508, -2459, 2496);
      a.closePath();
      a.moveTo(-654, -1615);
      a.quadraticCurveTo(-773, -1615, -825, -1596);
      a.lineTo(-1150, -1466);
      a.lineTo(-1480, -1315);
      a.quadraticCurveTo(-2065, -1011, -2546, -731);
      a.quadraticCurveTo(-4365, 469, -6284, 633);
      a.lineTo(-6452, 650);
      a.quadraticCurveTo(-6478, 701, -6508, 732);
      a.quadraticCurveTo(-6566, 825, -6595, 853);
      a.quadraticCurveTo(-6784, 1061, -7049, 1081);
      a.quadraticCurveTo(-7616, 1147, -8163, 1361);
      a.quadraticCurveTo(-8778,
        1659, -9312, 1817);
      a.quadraticCurveTo(-10407, 2106, -11642, 3759);
      a.quadraticCurveTo(-12778, 5692, -13113, 7452);
      a.lineTo(-13187, 7808);
      a.quadraticCurveTo(-13416, 8953, -13363, 9308);
      a.quadraticCurveTo(-13363, 9308, -13363, 9308);
      a.lineTo(-13363, 9308);
      a.quadraticCurveTo(-13355, 9474, -13327, 9663);
      a.quadraticCurveTo(-13303, 9818, -13300, 9818);
      a.quadraticCurveTo(-13297, 9818, -13323, 9603);
      a.lineTo(-13323, 9603);
      a.quadraticCurveTo(-12736, 13360, -9058, 16132);
      a.quadraticCurveTo(-9374, 15727, -9827, 15118);
      a.quadraticCurveTo(-11138,
        12825, -11130, 11919);
      a.quadraticCurveTo(-11115, 10306, -10003, 9389);
      a.quadraticCurveTo(-8909, 8502, -7838, 7814);
      a.quadraticCurveTo(-7096, 7188, -6457, 6633);
      a.quadraticCurveTo(-5841, 6112, -5465, 5906);
      a.quadraticCurveTo(-5293, 5817, -4968, 5792);
      a.lineTo(-4519, 5756);
      a.quadraticCurveTo(-4491, 5644, -4315, 5212);
      a.quadraticCurveTo(-4160, 4866, -4024, 4635);
      a.quadraticCurveTo(-3611, 3907, -2922, 3251);
      a.quadraticCurveTo(-2695, 3035, -2448, 2863);
      a.quadraticCurveTo(-1939, 2492, -1333, 2308);
      a.quadraticCurveTo(-877, 2173, -569, 2173);
      a.lineTo(-307, 1454);
      a.quadraticCurveTo(-122, 958, -52, 506);
      a.quadraticCurveTo(49, -118, -72, -610);
      a.quadraticCurveTo(-220, -1222, -571, -1613);
      a.quadraticCurveTo(-616, -1615, -654, -1615);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11024);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2264, -65);
      a.quadraticCurveTo(-2056, -214, -1879, -343);
      a.moveTo(-7447, 2022);
      a.quadraticCurveTo(-7124,
        1870, -6773, 1789);
      a.moveTo(-1757, -441);
      a.quadraticCurveTo(-1656, -510, -1570, -587);
      a.moveTo(-1879, -343);
      a.lineTo(-1873, -347);
      a.lineTo(-1802, -406);
      a.moveTo(-8674, 2867);
      a.lineTo(-8662, 2862);
      a.quadraticCurveTo(-8253, 2542, -7775, 2193);
      a.moveTo(-3232, 680);
      a.quadraticCurveTo(-3058, 557, -2896, 426);
      a.lineTo(-2672, 244);
      a.moveTo(-2459, 2496);
      a.quadraticCurveTo(-2564, 2582, -2672, 2683);
      a.quadraticCurveTo(-2874, 2877, -3076, 3103);
      a.lineTo(-3076, 3105);
      a.lineTo(-3099, 3131);
      a.moveTo(-3462, 3568);
      a.quadraticCurveTo(-3646, 3808, -3833, 4080);
      a.moveTo(-4217, 4647);
      a.quadraticCurveTo(-4392, 4907, -4559, 5191);
      a.lineTo(-4589, 5241);
      a.moveTo(-3076, 3105);
      a.quadraticCurveTo(-3119, 3145, -3162, 3200);
      a.moveTo(-4245, 1224);
      a.quadraticCurveTo(-3852, 1069, -3522, 869);
      a.moveTo(-5634, 1701);
      a.lineTo(-5898, 1691);
      a.quadraticCurveTo(-6119, 1685, -6356, 1714);
      a.moveTo(-10018, 4587);
      a.lineTo(-9940, 4572);
      a.moveTo(-3384, 3472);
      a.lineTo(-3462, 3568);
      a.moveTo(-5154, 1491);
      a.quadraticCurveTo(-4801, 1417, -4507, 1322);
      a.moveTo(-3833, 4080);
      a.lineTo(-3932, 4220);
      a.moveTo(-4173,
        4579);
      a.lineTo(-4217, 4647);
      a.moveTo(-4867, 4936);
      a.quadraticCurveTo(-4834, 4948, -4812, 4964);
      a.moveTo(-5549, 4907);
      a.lineTo(-5632, 4908);
      a.moveTo(-5528, 4905);
      a.lineTo(-5549, 4907);
      a.moveTo(-5830, 4902);
      a.lineTo(-5842, 4901);
      a.lineTo(-5873, 4897);
      a.lineTo(-6028, 4885);
      a.lineTo(-6055, 4972);
      a.quadraticCurveTo(-6064, 5019, -6085, 5053);
      a.moveTo(-5486, 4804);
      a.lineTo(-5528, 4905);
      a.lineTo(-5440, 4902);
      a.moveTo(-5241, 4892);
      a.quadraticCurveTo(-5273, 4885, -5309, 4893);
      a.moveTo(-5528, 4905);
      a.lineTo(-5541, 4939);
      a.quadraticCurveTo(-5542,
        4948, -5550, 4965);
      a.moveTo(-4867, 4936);
      a.lineTo(-4872, 4935);
      a.quadraticCurveTo(-4880, 4926, -4895, 4924);
      a.quadraticCurveTo(-4923, 4951, -4955, 4997);
      a.quadraticCurveTo(-4961, 4994, -4966, 5014);
      a.moveTo(-4958, 4905);
      a.quadraticCurveTo(-4927, 4911, -4895, 4924);
      a.lineTo(-4856, 4878);
      a.moveTo(-4893, 4828);
      a.lineTo(-4958, 4905);
      a.quadraticCurveTo(-4997, 4889, -5047, 4892);
      a.quadraticCurveTo(-5136, 4882, -5241, 4892);
      a.moveTo(-6272, 4830);
      a.lineTo(-6399, 4798);
      a.moveTo(-6994, 7015);
      a.lineTo(-7112, 7117);
      a.quadraticCurveTo(-7319,
        7297, -7497, 7429);
      a.moveTo(-6272, 4830);
      a.quadraticCurveTo(-6273, 4865, -6281, 4903);
      a.lineTo(-6291, 4954);
      a.moveTo(-6260, 4683);
      a.quadraticCurveTo(-6262, 4751, -6272, 4830);
      a.lineTo(-6028, 4885);
      a.quadraticCurveTo(-6008, 4789, -6E3, 4692);
      a.moveTo(-5232, 5542);
      a.quadraticCurveTo(-5290, 5566, -5348, 5606);
      a.moveTo(-5194, 5526);
      a.quadraticCurveTo(-5043, 5445, -4895, 5415);
      a.moveTo(-4958, 4905);
      a.lineTo(-5002, 4964);
      a.lineTo(-5021, 4989);
      a.moveTo(-5598, 5766);
      a.lineTo(-5826, 5939);
      a.moveTo(-5984, 6068);
      a.lineTo(-6034, 6109);
      a.quadraticCurveTo(-6120,
        6179, -6214, 6268);
      a.lineTo(-6384, 6434);
      a.lineTo(-6572, 6619);
      a.lineTo(-6737, 6776);
      a.moveTo(-6958, 6981);
      a.lineTo(-6994, 7015);
      a.moveTo(-5936, 6027);
      a.lineTo(-5901, 6E3);
      a.lineTo(-5866, 5973);
      a.moveTo(-4895, 5415);
      a.quadraticCurveTo(-4849, 5392, -4806, 5393);
      a.moveTo(-10018, 4587);
      a.quadraticCurveTo(-10121, 4607, -10235, 4642);
      a.moveTo(-10544, 4740);
      a.quadraticCurveTo(-10872, 4864, -11187, 5052);
      a.moveTo(-11440, 5226);
      a.quadraticCurveTo(-11654, 5391, -11860, 5600);
      a.moveTo(-7489, 4818);
      a.quadraticCurveTo(-7491, 4743, -7504,
        4652);
      a.lineTo(-7503, 4650);
      a.lineTo(-8055, 4624);
      a.moveTo(-7496, 4365);
      a.quadraticCurveTo(-7512, 4512, -7503, 4650);
      a.lineTo(-7011, 4675);
      a.moveTo(-8663, 4392);
      a.lineTo(-8667, 4511);
      a.lineTo(-8618, 4515);
      a.lineTo(-8387, 4552);
      a.moveTo(-8667, 4511);
      a.quadraticCurveTo(-8663, 4550, -8666, 4593);
      a.lineTo(-8661, 4653);
      a.moveTo(-9263, 4493);
      a.lineTo(-9655, 4523);
      a.moveTo(-8667, 4511);
      a.lineTo(-8975, 4491);
      a.moveTo(-7692, 7572);
      a.quadraticCurveTo(-7917, 7727, -8194, 7905);
      a.moveTo(-8419, 8044);
      a.lineTo(-8895, 8326);
      a.moveTo(-9191,
        8501);
      a.quadraticCurveTo(-9437, 8640, -9694, 8806);
      a.moveTo(-9979, 9E3);
      a.quadraticCurveTo(-10222, 9167, -10476, 9357);
      a.moveTo(-11164, 10115);
      a.quadraticCurveTo(-11259, 10272, -11330, 10476);
      a.moveTo(-10705, 9552);
      a.quadraticCurveTo(-10872, 9709, -11022, 9901);
      a.moveTo(-6399, 4798);
      a.lineTo(-6593, 4752);
      a.moveTo(-13363, 9308);
      a.lineTo(-13341, 9474);
      a.moveTo(-13323, 9603);
      a.quadraticCurveTo(-12736, 13360, -9058, 16132)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11024);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-1802, -406);
      a.quadraticCurveTo(-1776, -422, -1757, -441)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11024);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-9058, 16132);
      a.quadraticCurveTo(-9374, 15727, -9827, 15118);
      a.quadraticCurveTo(-11138, 12825, -11130, 11919);
      a.quadraticCurveTo(-11115,
        10306, -10003, 9389);
      a.quadraticCurveTo(-8909, 8502, -7838, 7814);
      a.quadraticCurveTo(-7096, 7188, -6457, 6633);
      a.quadraticCurveTo(-5841, 6112, -5465, 5906);
      a.quadraticCurveTo(-5293, 5817, -4968, 5792);
      a.lineTo(-4519, 5756);
      a.quadraticCurveTo(-4491, 5644, -4315, 5212);
      a.quadraticCurveTo(-4160, 4866, -4024, 4635);
      a.quadraticCurveTo(-3611, 3907, -2922, 3251);
      a.quadraticCurveTo(-2695, 3035, -2448, 2863);
      a.quadraticCurveTo(-1939, 2492, -1333, 2308);
      a.quadraticCurveTo(-877, 2173, -569, 2173);
      a.lineTo(-307, 1454);
      a.quadraticCurveTo(-122,
        958, -52, 506);
      a.quadraticCurveTo(49, -118, -72, -610);
      a.quadraticCurveTo(-220, -1222, -571, -1613);
      a.quadraticCurveTo(-756, -1621, -825, -1596);
      a.lineTo(-1150, -1466);
      a.lineTo(-1480, -1315);
      a.quadraticCurveTo(-2065, -1011, -2546, -731);
      a.quadraticCurveTo(-4365, 469, -6284, 633);
      a.lineTo(-6452, 650);
      a.quadraticCurveTo(-6478, 701, -6508, 732);
      a.quadraticCurveTo(-6566, 825, -6595, 853);
      a.quadraticCurveTo(-6784, 1061, -7049, 1081);
      a.quadraticCurveTo(-7616, 1147, -8163, 1361);
      a.quadraticCurveTo(-8778, 1659, -9312, 1817);
      a.quadraticCurveTo(-10407,
        2106, -11642, 3759);
      a.quadraticCurveTo(-12778, 5692, -13113, 7452);
      a.lineTo(-13187, 7808);
      a.quadraticCurveTo(-13416, 8953, -13363, 9308);
      a.quadraticCurveTo(-13245, 9959, -12759, 10773);
      a.quadraticCurveTo(-12293, 11580, -11794, 11833);
      a.quadraticCurveTo(-12053, 11677, -12931, 9758);
      a.lineTo(-11667, 10545);
      a.quadraticCurveTo(-12192, 10017, -12601, 9325);
      a.quadraticCurveTo(-13012, 8632, -12875, 8375);
      a.quadraticCurveTo(-12955, 8311, -12873, 7892);
      a.quadraticCurveTo(-12766, 7347, -12385, 6202);
      a.quadraticCurveTo(-11990, 5132, -11203,
        4306);
      a.quadraticCurveTo(-10393, 3514, -9230, 3022);
      a.moveTo(-5901, 6E3);
      a.lineTo(-5984, 6068);
      a.lineTo(-5936, 6027);
      a.moveTo(-11794, 11833);
      a.lineTo(-11775, 11842);
      a.lineTo(-11774, 11843);
      a.lineTo(-11775, 11842);
      a.moveTo(-13341, 9474);
      a.lineTo(-13323, 9603);
      a.quadraticCurveTo(-13274, 1E4, -13327, 9663);
      a.quadraticCurveTo(-13355, 9474, -13363, 9308)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11024);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-1879, -343);
      a.lineTo(-3353, 346);
      a.quadraticCurveTo(-3992, 661, -4618, 911);
      a.quadraticCurveTo(-5280,
        1172, -5993, 1336);
      a.quadraticCurveTo(-6646, 1481, -7290, 1910);
      a.lineTo(-7447, 2022);
      a.quadraticCurveTo(-8191, 2598, -8662, 2862);
      a.lineTo(-8674, 2867);
      a.quadraticCurveTo(-8749, 2897, -8812, 2910);
      a.lineTo(-9230, 3022);
      a.quadraticCurveTo(-10393, 3514, -11203, 4306);
      a.quadraticCurveTo(-11990, 5132, -12385, 6202);
      a.quadraticCurveTo(-12766, 7347, -12873, 7892);
      a.lineTo(-12780, 7916);
      a.quadraticCurveTo(-12574, 7969, -12371, 8031);
      a.quadraticCurveTo(-12052, 6923, -11423, 6083);
      a.quadraticCurveTo(-10751, 5243, -10018, 4587);
      a.quadraticCurveTo(-9754,
        4379, -9490, 4299);
      a.quadraticCurveTo(-8832, 4118, -8234, 4040);
      a.quadraticCurveTo(-7217, 3283, -6419, 3283);
      a.quadraticCurveTo(-6403, 3283, -6388, 3283);
      a.quadraticCurveTo(-6379, 3283, -6371, 3283);
      a.quadraticCurveTo(-5831, 3283, -5356, 3588);
      a.quadraticCurveTo(-4832, 3863, -4604, 3958);
      a.quadraticCurveTo(-4571, 3971, -4535, 3971);
      a.quadraticCurveTo(-4463, 3971, -4376, 3919);
      a.lineTo(-4046, 3210);
      a.quadraticCurveTo(-3619, 2240, -3123, 1282);
      a.quadraticCurveTo(-2607, 309, -1879, -343);
      a.closePath();
      a.moveTo(-2459, 2496);
      a.quadraticCurveTo(-2928,
        2508, -3479, 3284);
      a.quadraticCurveTo(-4030, 4060, -4434, 4815);
      a.quadraticCurveTo(-4606, 4822, -4773, 4893);
      a.quadraticCurveTo(-4818, 4907, -4867, 4936);
      a.lineTo(-4872, 4935);
      a.quadraticCurveTo(-4880, 4926, -4895, 4924);
      a.quadraticCurveTo(-4927, 4911, -4958, 4905);
      a.quadraticCurveTo(-4991, 4892, -5031, 4892);
      a.quadraticCurveTo(-5039, 4892, -5047, 4892);
      a.quadraticCurveTo(-5091, 4887, -5140, 4887);
      a.quadraticCurveTo(-5188, 4887, -5241, 4892);
      a.quadraticCurveTo(-5308, 4920, -5366, 4920);
      a.quadraticCurveTo(-5394, 4920, -5420, 4913);
      a.quadraticCurveTo(-5430,
        4902, -5440, 4902);
      a.lineTo(-5528, 4905);
      a.lineTo(-5549, 4907);
      a.quadraticCurveTo(-5603, 4880, -5679, 4880);
      a.quadraticCurveTo(-5731, 4880, -5792, 4893);
      a.quadraticCurveTo(-5794, 4893, -5795, 4893);
      a.quadraticCurveTo(-5811, 4893, -5830, 4902);
      a.lineTo(-5842, 4901);
      a.lineTo(-5873, 4897);
      a.lineTo(-6028, 4885);
      a.lineTo(-6272, 4830);
      a.lineTo(-6399, 4798);
      a.quadraticCurveTo(-6545, 4829, -6695, 4931);
      a.lineTo(-6850, 5038);
      a.quadraticCurveTo(-5854, 5402, -5709, 5469);
      a.quadraticCurveTo(-5672, 5481, -5646, 5505);
      a.quadraticCurveTo(-6171,
        5929, -7091, 6740);
      a.quadraticCurveTo(-7841, 7267, -8807, 7834);
      a.quadraticCurveTo(-9420, 8196, -9892, 8833);
      a.quadraticCurveTo(-9786, 8893, -9677, 8893);
      a.quadraticCurveTo(-9486, 8893, -9286, 8708);
      a.quadraticCurveTo(-8476, 8142, -7809, 7704);
      a.quadraticCurveTo(-7501, 7483, -6994, 7015);
      a.lineTo(-6958, 6981);
      a.lineTo(-6737, 6776);
      a.lineTo(-6572, 6619);
      a.lineTo(-6384, 6434);
      a.lineTo(-6214, 6268);
      a.quadraticCurveTo(-6120, 6179, -6034, 6109);
      a.lineTo(-5984, 6068);
      a.lineTo(-5936, 6027);
      a.lineTo(-5901, 6E3);
      a.lineTo(-5866, 5973);
      a.quadraticCurveTo(-5844,
        5950, -5826, 5939);
      a.quadraticCurveTo(-5492, 5609, -5261, 5551);
      a.quadraticCurveTo(-5249, 5541, -5239, 5541);
      a.quadraticCurveTo(-5235, 5541, -5232, 5542);
      a.quadraticCurveTo(-5213, 5530, -5194, 5526);
      a.quadraticCurveTo(-5043, 5445, -4895, 5415);
      a.lineTo(-4871, 5389);
      a.quadraticCurveTo(-4713, 5248, -4559, 5191);
      a.quadraticCurveTo(-4392, 4907, -4217, 4647);
      a.quadraticCurveTo(-4181, 4629, -4152, 4602);
      a.quadraticCurveTo(-4125, 4552, -4022, 4410);
      a.quadraticCurveTo(-3878, 4201, -3869, 4180);
      a.lineTo(-3853, 4134);
      a.lineTo(-3833, 4080);
      a.quadraticCurveTo(-3646,
        3808, -3462, 3568);
      a.lineTo(-3377, 3482);
      a.lineTo(-3307, 3413);
      a.quadraticCurveTo(-3211, 3321, -3131, 3189);
      a.lineTo(-3099, 3131);
      a.lineTo(-3076, 3105);
      a.lineTo(-3076, 3105);
      a.quadraticCurveTo(-3076, 3105, -3076, 3105);
      a.lineTo(-3076, 3103);
      a.quadraticCurveTo(-2874, 2877, -2672, 2683);
      a.quadraticCurveTo(-2564, 2582, -2459, 2496);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11024);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-1879, -343);
      a.quadraticCurveTo(-2607, 309, -3123, 1282);
      a.quadraticCurveTo(-3619, 2240, -4046,
        3210);
      a.lineTo(-4376, 3919);
      a.quadraticCurveTo(-4463, 3971, -4535, 3971);
      a.quadraticCurveTo(-4571, 3971, -4604, 3958);
      a.quadraticCurveTo(-4832, 3863, -5356, 3588);
      a.quadraticCurveTo(-5830, 3283, -6371, 3283);
      a.quadraticCurveTo(-6380, 3283, -6388, 3283);
      a.quadraticCurveTo(-6403, 3283, -6419, 3283);
      a.quadraticCurveTo(-7217, 3283, -8234, 4040);
      a.quadraticCurveTo(-8832, 4118, -9490, 4299);
      a.quadraticCurveTo(-9754, 4379, -10018, 4587);
      a.quadraticCurveTo(-10751, 5243, -11423, 6083);
      a.quadraticCurveTo(-12052, 6923, -12371, 8031);
      a.quadraticCurveTo(-12574,
        7969, -12780, 7916);
      a.lineTo(-12873, 7892);
      a.quadraticCurveTo(-12766, 7347, -12385, 6202);
      a.quadraticCurveTo(-11990, 5132, -11203, 4306);
      a.quadraticCurveTo(-10393, 3514, -9230, 3022);
      a.lineTo(-8812, 2910);
      a.quadraticCurveTo(-8749, 2897, -8674, 2867);
      a.lineTo(-8662, 2862);
      a.quadraticCurveTo(-8191, 2598, -7447, 2022);
      a.lineTo(-7290, 1910);
      a.quadraticCurveTo(-6646, 1481, -5993, 1336);
      a.quadraticCurveTo(-5280, 1172, -4618, 911);
      a.quadraticCurveTo(-3992, 661, -3353, 346);
      a.lineTo(-1879, -343);
      a.closePath();
      a.moveTo(-2459, 2496);
      a.quadraticCurveTo(-2564,
        2582, -2672, 2683);
      a.quadraticCurveTo(-2874, 2877, -3076, 3103);
      a.lineTo(-3076, 3105);
      a.lineTo(-3099, 3131);
      a.lineTo(-3131, 3189);
      a.quadraticCurveTo(-3211, 3321, -3307, 3413);
      a.lineTo(-3377, 3482);
      a.lineTo(-3462, 3568);
      a.quadraticCurveTo(-3646, 3808, -3833, 4080);
      a.lineTo(-3853, 4134);
      a.lineTo(-3869, 4180);
      a.quadraticCurveTo(-3878, 4201, -4022, 4410);
      a.quadraticCurveTo(-4125, 4552, -4152, 4602);
      a.quadraticCurveTo(-4181, 4629, -4217, 4647);
      a.quadraticCurveTo(-4392, 4907, -4559, 5191);
      a.quadraticCurveTo(-4713, 5248, -4871, 5389);
      a.lineTo(-4895,
        5415);
      a.quadraticCurveTo(-5043, 5445, -5194, 5526);
      a.quadraticCurveTo(-5213, 5530, -5232, 5542);
      a.quadraticCurveTo(-5235, 5541, -5239, 5541);
      a.quadraticCurveTo(-5249, 5541, -5261, 5551);
      a.quadraticCurveTo(-5492, 5609, -5826, 5939);
      a.quadraticCurveTo(-5844, 5950, -5866, 5973);
      a.lineTo(-5901, 6E3);
      a.lineTo(-5936, 6027);
      a.lineTo(-5984, 6068);
      a.lineTo(-6034, 6109);
      a.quadraticCurveTo(-6120, 6179, -6214, 6268);
      a.lineTo(-6384, 6434);
      a.lineTo(-6572, 6619);
      a.lineTo(-6737, 6776);
      a.lineTo(-6958, 6981);
      a.lineTo(-6994, 7015);
      a.quadraticCurveTo(-7501,
        7483, -7809, 7704);
      a.quadraticCurveTo(-8476, 8142, -9286, 8708);
      a.quadraticCurveTo(-9487, 8893, -9677, 8893);
      a.quadraticCurveTo(-9786, 8893, -9892, 8833);
      a.quadraticCurveTo(-9420, 8196, -8807, 7834);
      a.quadraticCurveTo(-7841, 7267, -7091, 6740);
      a.quadraticCurveTo(-6171, 5929, -5646, 5505);
      a.quadraticCurveTo(-5672, 5481, -5709, 5469);
      a.quadraticCurveTo(-5854, 5402, -6850, 5038);
      a.lineTo(-6695, 4931);
      a.quadraticCurveTo(-6545, 4829, -6399, 4798);
      a.lineTo(-6272, 4830);
      a.lineTo(-6028, 4885);
      a.lineTo(-5873, 4897);
      a.lineTo(-5842, 4901);
      a.lineTo(-5830,
        4902);
      a.quadraticCurveTo(-5811, 4893, -5795, 4893);
      a.quadraticCurveTo(-5793, 4893, -5792, 4893);
      a.quadraticCurveTo(-5730, 4880, -5679, 4880);
      a.quadraticCurveTo(-5604, 4880, -5549, 4907);
      a.lineTo(-5528, 4905);
      a.lineTo(-5440, 4902);
      a.quadraticCurveTo(-5430, 4902, -5420, 4913);
      a.quadraticCurveTo(-5394, 4920, -5366, 4920);
      a.quadraticCurveTo(-5308, 4920, -5241, 4892);
      a.quadraticCurveTo(-5188, 4887, -5140, 4887);
      a.quadraticCurveTo(-5091, 4887, -5047, 4892);
      a.quadraticCurveTo(-5039, 4892, -5031, 4892);
      a.quadraticCurveTo(-4990, 4892, -4958,
        4905);
      a.quadraticCurveTo(-4927, 4911, -4895, 4924);
      a.quadraticCurveTo(-4880, 4926, -4872, 4935);
      a.lineTo(-4867, 4936);
      a.quadraticCurveTo(-4818, 4907, -4773, 4893);
      a.quadraticCurveTo(-4606, 4822, -4434, 4815);
      a.quadraticCurveTo(-4030, 4060, -3479, 3284);
      a.quadraticCurveTo(-2928, 2508, -2459, 2496);
      a.closePath();
      a.moveTo(-654, -1615);
      a.quadraticCurveTo(-773, -1615, -825, -1596);
      a.lineTo(-1150, -1466);
      a.lineTo(-1480, -1315);
      a.quadraticCurveTo(-2065, -1011, -2546, -731);
      a.quadraticCurveTo(-4365, 469, -6284, 633);
      a.lineTo(-6452, 650);
      a.quadraticCurveTo(-6478, 701, -6508, 732);
      a.quadraticCurveTo(-6566, 825, -6595, 853);
      a.quadraticCurveTo(-6784, 1061, -7049, 1081);
      a.quadraticCurveTo(-7616, 1147, -8163, 1361);
      a.quadraticCurveTo(-8778, 1659, -9312, 1817);
      a.quadraticCurveTo(-10407, 2106, -11642, 3759);
      a.quadraticCurveTo(-12778, 5692, -13113, 7452);
      a.lineTo(-13187, 7808);
      a.quadraticCurveTo(-13416, 8953, -13363, 9308);
      a.quadraticCurveTo(-13363, 9308, -13363, 9308);
      a.lineTo(-13363, 9308);
      a.quadraticCurveTo(-13355, 9474, -13327, 9663);
      a.quadraticCurveTo(-13303, 9818, -13300, 9818);
      a.quadraticCurveTo(-13297, 9818, -13323, 9603);
      a.lineTo(-13323, 9603);
      a.quadraticCurveTo(-12736, 13360, -9058, 16132);
      a.quadraticCurveTo(-9374, 15727, -9827, 15118);
      a.quadraticCurveTo(-11138, 12825, -11130, 11919);
      a.quadraticCurveTo(-11115, 10306, -10003, 9389);
      a.quadraticCurveTo(-8909, 8502, -7838, 7814);
      a.quadraticCurveTo(-7096, 7188, -6457, 6633);
      a.quadraticCurveTo(-5841, 6112, -5465, 5906);
      a.quadraticCurveTo(-5293, 5817, -4968, 5792);
      a.lineTo(-4519, 5756);
      a.quadraticCurveTo(-4491, 5644, -4315, 5212);
      a.quadraticCurveTo(-4160,
        4866, -4024, 4635);
      a.quadraticCurveTo(-3611, 3907, -2922, 3251);
      a.quadraticCurveTo(-2695, 3035, -2448, 2863);
      a.quadraticCurveTo(-1939, 2492, -1333, 2308);
      a.quadraticCurveTo(-877, 2173, -569, 2173);
      a.lineTo(-307, 1454);
      a.quadraticCurveTo(-122, 958, -52, 506);
      a.quadraticCurveTo(49, -118, -72, -610);
      a.quadraticCurveTo(-220, -1222, -571, -1613);
      a.quadraticCurveTo(-616, -1615, -654, -1615);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11024);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2264, -65);
      a.quadraticCurveTo(-2056, -214, -1879, -343);
      a.moveTo(-7447, 2022);
      a.quadraticCurveTo(-7124, 1870, -6773, 1789);
      a.moveTo(-1757, -441);
      a.quadraticCurveTo(-1656, -510, -1570, -587);
      a.moveTo(-1879, -343);
      a.lineTo(-1873, -347);
      a.lineTo(-1802, -406);
      a.moveTo(-8674, 2867);
      a.lineTo(-8662, 2862);
      a.quadraticCurveTo(-8253, 2542, -7775, 2193);
      a.moveTo(-3232, 680);
      a.quadraticCurveTo(-3058, 557, -2896, 426);
      a.lineTo(-2672, 244);
      a.moveTo(-2459, 2496);
      a.quadraticCurveTo(-2564, 2582, -2672, 2683);
      a.quadraticCurveTo(-2874, 2877, -3076, 3103);
      a.lineTo(-3076, 3105);
      a.lineTo(-3099, 3131);
      a.moveTo(-3462, 3568);
      a.quadraticCurveTo(-3646, 3808, -3833, 4080);
      a.moveTo(-4217, 4647);
      a.quadraticCurveTo(-4392, 4907, -4559, 5191);
      a.lineTo(-4589, 5241);
      a.moveTo(-3076, 3105);
      a.quadraticCurveTo(-3119, 3145, -3162, 3200);
      a.moveTo(-4245, 1224);
      a.quadraticCurveTo(-3852, 1069, -3522, 869);
      a.moveTo(-5634, 1701);
      a.lineTo(-5898, 1691);
      a.quadraticCurveTo(-6119, 1685, -6356, 1714);
      a.moveTo(-10018, 4587);
      a.lineTo(-9940, 4572);
      a.moveTo(-3384, 3472);
      a.lineTo(-3462, 3568);
      a.moveTo(-5154, 1491);
      a.quadraticCurveTo(-4801, 1417, -4507, 1322);
      a.moveTo(-3833, 4080);
      a.lineTo(-3932, 4220);
      a.moveTo(-4173, 4579);
      a.lineTo(-4217, 4647);
      a.moveTo(-4867, 4936);
      a.quadraticCurveTo(-4834, 4948, -4812, 4964);
      a.moveTo(-5549, 4907);
      a.lineTo(-5632, 4908);
      a.moveTo(-5528, 4905);
      a.lineTo(-5549, 4907);
      a.moveTo(-5830, 4902);
      a.lineTo(-5842, 4901);
      a.lineTo(-5873, 4897);
      a.lineTo(-6028, 4885);
      a.lineTo(-6055, 4972);
      a.quadraticCurveTo(-6064, 5019, -6085, 5053);
      a.moveTo(-5486, 4804);
      a.lineTo(-5528, 4905);
      a.lineTo(-5440, 4902);
      a.moveTo(-5241, 4892);
      a.quadraticCurveTo(-5273, 4885, -5309, 4893);
      a.moveTo(-5528, 4905);
      a.lineTo(-5541, 4939);
      a.quadraticCurveTo(-5542, 4948, -5550, 4965);
      a.moveTo(-4867, 4936);
      a.lineTo(-4872, 4935);
      a.quadraticCurveTo(-4880, 4926, -4895, 4924);
      a.quadraticCurveTo(-4923, 4951, -4955, 4997);
      a.quadraticCurveTo(-4961, 4994, -4966, 5014);
      a.moveTo(-4958, 4905);
      a.quadraticCurveTo(-4927, 4911, -4895, 4924);
      a.lineTo(-4856, 4878);
      a.moveTo(-4893, 4828);
      a.lineTo(-4958, 4905);
      a.quadraticCurveTo(-4997, 4889, -5047, 4892);
      a.quadraticCurveTo(-5136, 4882, -5241, 4892);
      a.moveTo(-6272, 4830);
      a.lineTo(-6399, 4798);
      a.moveTo(-6994, 7015);
      a.lineTo(-7112, 7117);
      a.quadraticCurveTo(-7319, 7297, -7497, 7429);
      a.moveTo(-6272, 4830);
      a.quadraticCurveTo(-6273, 4865, -6281, 4903);
      a.lineTo(-6291, 4954);
      a.moveTo(-6260, 4683);
      a.quadraticCurveTo(-6262, 4751, -6272, 4830);
      a.lineTo(-6028, 4885);
      a.quadraticCurveTo(-6008, 4789, -6E3, 4692);
      a.moveTo(-5232, 5542);
      a.quadraticCurveTo(-5290, 5566, -5348, 5606);
      a.moveTo(-5194, 5526);
      a.quadraticCurveTo(-5043, 5445, -4895, 5415);
      a.moveTo(-4958, 4905);
      a.lineTo(-5002, 4964);
      a.lineTo(-5021, 4989);
      a.moveTo(-5598, 5766);
      a.lineTo(-5826, 5939);
      a.moveTo(-5984, 6068);
      a.lineTo(-6034, 6109);
      a.quadraticCurveTo(-6120, 6179, -6214, 6268);
      a.lineTo(-6384, 6434);
      a.lineTo(-6572, 6619);
      a.lineTo(-6737, 6776);
      a.moveTo(-6958, 6981);
      a.lineTo(-6994, 7015);
      a.moveTo(-5936, 6027);
      a.lineTo(-5901, 6E3);
      a.lineTo(-5866, 5973);
      a.moveTo(-4895, 5415);
      a.quadraticCurveTo(-4849, 5392, -4806, 5393);
      a.moveTo(-10018, 4587);
      a.quadraticCurveTo(-10121,
        4607, -10235, 4642);
      a.moveTo(-10544, 4740);
      a.quadraticCurveTo(-10872, 4864, -11187, 5052);
      a.moveTo(-11440, 5226);
      a.quadraticCurveTo(-11654, 5391, -11860, 5600);
      a.moveTo(-7489, 4818);
      a.quadraticCurveTo(-7491, 4743, -7504, 4652);
      a.lineTo(-7503, 4650);
      a.lineTo(-8055, 4624);
      a.moveTo(-7496, 4365);
      a.quadraticCurveTo(-7512, 4512, -7503, 4650);
      a.lineTo(-7011, 4675);
      a.moveTo(-8663, 4392);
      a.lineTo(-8667, 4511);
      a.lineTo(-8618, 4515);
      a.lineTo(-8387, 4552);
      a.moveTo(-8667, 4511);
      a.quadraticCurveTo(-8663, 4550, -8666, 4593);
      a.lineTo(-8661,
        4653);
      a.moveTo(-9263, 4493);
      a.lineTo(-9655, 4523);
      a.moveTo(-8667, 4511);
      a.lineTo(-8975, 4491);
      a.moveTo(-7692, 7572);
      a.quadraticCurveTo(-7917, 7727, -8194, 7905);
      a.moveTo(-8419, 8044);
      a.lineTo(-8895, 8326);
      a.moveTo(-9191, 8501);
      a.quadraticCurveTo(-9437, 8640, -9694, 8806);
      a.moveTo(-9979, 9E3);
      a.quadraticCurveTo(-10222, 9167, -10476, 9357);
      a.moveTo(-11164, 10115);
      a.quadraticCurveTo(-11259, 10272, -11330, 10476);
      a.moveTo(-10705, 9552);
      a.quadraticCurveTo(-10872, 9709, -11022, 9901);
      a.moveTo(-6399, 4798);
      a.lineTo(-6593, 4752);
      a.moveTo(-13363,
        9308);
      a.lineTo(-13341, 9474);
      a.moveTo(-13323, 9603);
      a.quadraticCurveTo(-12736, 13360, -9058, 16132)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11024);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-1802, -406);
      a.quadraticCurveTo(-1776, -422, -1757, -441)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11024);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-9058, 16132);
      a.quadraticCurveTo(-9374, 15727, -9827, 15118);
      a.quadraticCurveTo(-11138, 12825, -11130, 11919);
      a.quadraticCurveTo(-11115, 10306, -10003, 9389);
      a.quadraticCurveTo(-8909, 8502, -7838, 7814);
      a.quadraticCurveTo(-7096, 7188, -6457, 6633);
      a.quadraticCurveTo(-5841, 6112, -5465, 5906);
      a.quadraticCurveTo(-5293, 5817, -4968, 5792);
      a.lineTo(-4519, 5756);
      a.quadraticCurveTo(-4491, 5644, -4315, 5212);
      a.quadraticCurveTo(-4160, 4866, -4024, 4635);
      a.quadraticCurveTo(-3611,
        3907, -2922, 3251);
      a.quadraticCurveTo(-2695, 3035, -2448, 2863);
      a.quadraticCurveTo(-1939, 2492, -1333, 2308);
      a.quadraticCurveTo(-877, 2173, -569, 2173);
      a.lineTo(-307, 1454);
      a.quadraticCurveTo(-122, 958, -52, 506);
      a.quadraticCurveTo(49, -118, -72, -610);
      a.quadraticCurveTo(-220, -1222, -571, -1613);
      a.quadraticCurveTo(-756, -1621, -825, -1596);
      a.lineTo(-1150, -1466);
      a.lineTo(-1480, -1315);
      a.quadraticCurveTo(-2065, -1011, -2546, -731);
      a.quadraticCurveTo(-4365, 469, -6284, 633);
      a.lineTo(-6452, 650);
      a.quadraticCurveTo(-6478, 701, -6508,
        732);
      a.quadraticCurveTo(-6566, 825, -6595, 853);
      a.quadraticCurveTo(-6784, 1061, -7049, 1081);
      a.quadraticCurveTo(-7616, 1147, -8163, 1361);
      a.quadraticCurveTo(-8778, 1659, -9312, 1817);
      a.quadraticCurveTo(-10407, 2106, -11642, 3759);
      a.quadraticCurveTo(-12778, 5692, -13113, 7452);
      a.lineTo(-13187, 7808);
      a.quadraticCurveTo(-13416, 8953, -13363, 9308);
      a.quadraticCurveTo(-13245, 9959, -12759, 10773);
      a.quadraticCurveTo(-12293, 11580, -11794, 11833);
      a.quadraticCurveTo(-12053, 11677, -12931, 9758);
      a.lineTo(-11667, 10545);
      a.quadraticCurveTo(-12192,
        10017, -12601, 9325);
      a.quadraticCurveTo(-13012, 8632, -12875, 8375);
      a.quadraticCurveTo(-12955, 8311, -12873, 7892);
      a.quadraticCurveTo(-12766, 7347, -12385, 6202);
      a.quadraticCurveTo(-11990, 5132, -11203, 4306);
      a.quadraticCurveTo(-10393, 3514, -9230, 3022);
      a.moveTo(-5901, 6E3);
      a.lineTo(-5984, 6068);
      a.lineTo(-5936, 6027);
      a.moveTo(-11794, 11833);
      a.lineTo(-11775, 11842);
      a.lineTo(-11774, 11843);
      a.lineTo(-11775, 11842);
      a.moveTo(-13341, 9474);
      a.lineTo(-13323, 9603);
      a.quadraticCurveTo(-13274, 1E4, -13327, 9663);
      a.quadraticCurveTo(-13355,
        9474, -13363, 9308)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11197);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(29, -2730);
      a.quadraticCurveTo(18, -2730, 8, -2730);
      a.quadraticCurveTo(-775, -2725, -1473, -2385);
      a.quadraticCurveTo(-1598, -2324, -1712, -2247);
      a.quadraticCurveTo(-1835, -2165, -1945, -2063);
      a.lineTo(-2105, -1920);
      a.quadraticCurveTo(-2051, -1145, -1854, -394);
      a.quadraticCurveTo(-1658, 357, -1281, 1029);
      a.lineTo(-1275, 1040);
      a.quadraticCurveTo(-893, 1719, -384, 2301);
      a.quadraticCurveTo(-137, 2582, 102, 2582);
      a.quadraticCurveTo(356,
        2582, 602, 2267);
      a.quadraticCurveTo(800, 2015, 923, 1716);
      a.quadraticCurveTo(1200, 1045, 1441, 361);
      a.quadraticCurveTo(1694, -358, 1875, -1100);
      a.quadraticCurveTo(2015, -1676, 1895, -2258);
      a.lineTo(1717, -2349);
      a.quadraticCurveTo(1597, -2407, 1472, -2456);
      a.quadraticCurveTo(775, -2730, 29, -2730);
      a.closePath();
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1806, 2714, -1672, 2714);
      a.quadraticCurveTo(-1609, 2714, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.quadraticCurveTo(-1628, 2191, -1784, 2034);
      a.quadraticCurveTo(-1882, 1935, -1969, 1830);
      a.closePath();
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285);
      a.quadraticCurveTo(1453, 2524, 1069, 2647);
      a.quadraticCurveTo(1240, 2920, 1464, 3159);
      a.lineTo(1495, 3185);
      a.quadraticCurveTo(1485, 2702, 1801, 2702);
      a.quadraticCurveTo(1871, 2702, 1958, 2726);
      a.quadraticCurveTo(2051, 2751, 2109, 2838);
      a.lineTo(2146, 2897);
      a.quadraticCurveTo(2234, 2453, 2090, 2025);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11197);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1895, -2258);
      a.quadraticCurveTo(2015, -1676, 1875, -1100);
      a.quadraticCurveTo(1694, -358, 1441, 361);
      a.quadraticCurveTo(1200, 1045, 923, 1716);
      a.quadraticCurveTo(800, 2015, 602, 2267);
      a.quadraticCurveTo(356, 2582, 102, 2582);
      a.quadraticCurveTo(-137, 2582, -384, 2301);
      a.quadraticCurveTo(-893, 1719, -1275, 1040);
      a.lineTo(-1281,
        1029);
      a.lineTo(-1281, 1029);
      a.quadraticCurveTo(-1281, 1029, -1281, 1029);
      a.quadraticCurveTo(-1658, 357, -1854, -394);
      a.quadraticCurveTo(-2051, -1145, -2105, -1920);
      a.quadraticCurveTo(-2607, -1485, -3179, -1168);
      a.lineTo(-3154, -913);
      a.quadraticCurveTo(-3092, -110, -3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628, 2191, -1457, 2316);
      a.quadraticCurveTo(-1193, 2510, -895, 2627);
      a.quadraticCurveTo(-716, 2697, -524,
        2739);
      a.quadraticCurveTo(-230, 2803, 76, 2803);
      a.quadraticCurveTo(518, 2803, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782, 2285);
      a.quadraticCurveTo(1942, 2169, 2090, 2025);
      a.quadraticCurveTo(2251, 1867, 2398, 1675);
      a.quadraticCurveTo(2848, 1083, 3270, 825);
      a.quadraticCurveTo(3289, 538, 3323, 253);
      a.quadraticCurveTo(3408, -448, 3399, -1154);
      a.quadraticCurveTo(3043, -1322, 2763, -1603);
      a.quadraticCurveTo(2369, -1999, 1895, -2258);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11197);
      a.fillStyle =
        "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1717, -2349);
      a.lineTo(1791, -2179);
      a.moveTo(1971, -1331);
      a.quadraticCurveTo(1976, -1189, 1966, -1044);
      a.moveTo(1884, -1896);
      a.quadraticCurveTo(1918, -1769, 1940, -1641);
      a.moveTo(1925, -735);
      a.lineTo(1908, -654);
      a.lineTo(1866, -463);
      a.moveTo(-1712, -2247);
      a.lineTo(-1741, -2148);
      a.moveTo(-1785, -1953);
      a.quadraticCurveTo(-1818, -1781, -1826, -1605);
      a.moveTo(-1281, 1029);
      a.lineTo(-1285, 1001);
      a.moveTo(-1715, -727);
      a.lineTo(-1688, -640);
      a.lineTo(-1626, -443);
      a.moveTo(-1821, -1306);
      a.quadraticCurveTo(-1810, -1147, -1778, -986);
      a.moveTo(-1400, 404);
      a.lineTo(-1338, 701);
      a.moveTo(-1262, 1557);
      a.quadraticCurveTo(-1273, 1698, -1300, 1834);
      a.moveTo(-1281, 1029);
      a.quadraticCurveTo(-1265, 1153, -1259, 1273);
      a.moveTo(-1457, 2316);
      a.quadraticCurveTo(-1410, 2213, -1373, 2107);
      a.moveTo(1782, 2285);
      a.quadraticCurveTo(1730, 2222, 1688, 2157);
      a.moveTo(1484, 1644);
      a.quadraticCurveTo(1503, 1765, 1546, 1881);
      a.moveTo(1534,
        1012);
      a.lineTo(1508, 1124);
      a.quadraticCurveTo(1484, 1229, 1475, 1330);
      a.moveTo(1665, 437);
      a.lineTo(1603, 712);
      a.moveTo(-1547, -174);
      a.lineTo(-1468, 121);
      a.moveTo(1798, -156);
      a.lineTo(1735, 128)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11197);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2105, -1920);
      a.lineTo(-1945, -2063);
      a.quadraticCurveTo(-1835, -2165, -1712, -2247);
      a.quadraticCurveTo(-1598, -2324, -1473, -2385);
      a.quadraticCurveTo(-775, -2725, 8, -2730);
      a.quadraticCurveTo(765, -2734, 1472, -2456);
      a.quadraticCurveTo(1597, -2407, 1717, -2349);
      a.lineTo(1895, -2258);
      a.quadraticCurveTo(2369, -1999, 2763, -1603);
      a.quadraticCurveTo(3043, -1322, 3399, -1154);
      a.lineTo(3461, -1126);
      a.moveTo(-3226, -1142);
      a.lineTo(-3179, -1168);
      a.quadraticCurveTo(-2607, -1485, -2105, -1920);
      a.moveTo(-3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628,
        2191, -1457, 2316);
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1749, 2657, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.moveTo(-895, 2627);
      a.quadraticCurveTo(-716, 2697, -524, 2739);
      a.quadraticCurveTo(190, 2895, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782,
        2285);
      a.moveTo(-3242, 673);
      a.lineTo(-3224, 679);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(3391, 751, 3509, 704);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(2848, 1083, 2398, 1675);
      a.quadraticCurveTo(2251, 1867, 2090, 2025);
      a.quadraticCurveTo(2234, 2453, 2146, 2897);
      a.lineTo(2109, 2838);
      a.quadraticCurveTo(2051, 2751, 1958, 2726);
      a.quadraticCurveTo(1483, 2595, 1495, 3185);
      a.lineTo(1464, 3159);
      a.quadraticCurveTo(1240, 2920, 1069, 2647);
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48,
        14924, 10667);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.quadraticCurveTo(1866, -1390, 1927, -1547);
      a.quadraticCurveTo(2065, -1909, 1846, -2264);
      a.closePath();
      a.moveTo(-1866, -2414);
      a.quadraticCurveTo(-1988, -2163, -1979, -1755);
      a.quadraticCurveTo(-1973, -1467, -1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.closePath();
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1187, -981, 1265, -981);
      a.quadraticCurveTo(1268, -981, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.quadraticCurveTo(1602, -2564, 1486, -2661);
      a.closePath();
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1591, -2730, -1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1398, -906, -1198, -906);
      a.quadraticCurveTo(-1195, -906, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.lineTo(-1158, -2446);
      a.quadraticCurveTo(-1266, -2592, -1444, -2773);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10667);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(1691, -2467);
      a.lineTo(1617, -2397);
      a.quadraticCurveTo(1036, -1774, 1540, -1045);
      a.quadraticCurveTo(1681, -1119, 1789, -1277);
      a.lineTo(1766, -1339);
      a.quadraticCurveTo(1594, -1821, 1846, -2264);
      a.quadraticCurveTo(1783, -2366, 1691, -2467);
      a.closePath();
      a.moveTo(-1706, -2639);
      a.quadraticCurveTo(-1719, -2639, -1719, -2618);
      a.quadraticCurveTo(-1808, -2534, -1866, -2414);
      a.lineTo(-1839, -2375);
      a.quadraticCurveTo(-1463, -1799, -1881, -1276);
      a.quadraticCurveTo(-1828, -1165, -1546, -963);
      a.quadraticCurveTo(-1083, -1736, -1560, -2461);
      a.quadraticCurveTo(-1620, -2552, -1697, -2637);
      a.quadraticCurveTo(-1702, -2639, -1706, -2639);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10667);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(504, -7675);
      a.quadraticCurveTo(483, -7675, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.lineTo(72, -7173);
      a.quadraticCurveTo(-75, -6552, -84, -5920);
      a.lineTo(0, -5470);
      a.quadraticCurveTo(3, -5138, -4, -4806);
      a.lineTo(-55, -2986);
      a.quadraticCurveTo(-60, -2829, -132, -2714);
      a.quadraticCurveTo(-249, -2531, -379, -2531);
      a.quadraticCurveTo(-522, -2531, -683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.quadraticCurveTo(-1286, -3404, -1395, -3404);
      a.quadraticCurveTo(-1475, -3404, -1555, -3334);
      a.quadraticCurveTo(-1801, -3121, -1548, -2877);
      a.lineTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.quadraticCurveTo(-811, -1894, -769, -1831);
      a.quadraticCurveTo(-380, -1249, -298, -527);
      a.quadraticCurveTo(-189, 432, -50, 1385);
      a.lineTo(-38, 1575);
      a.quadraticCurveTo(14, 2265, -214, 2911);
      a.quadraticCurveTo(-140, 3258, -59, 3411);
      a.quadraticCurveTo(33, 3510, 122, 3510);
      a.quadraticCurveTo(271, 3510, 409, 3232);
      a.quadraticCurveTo(627, 2788, 824, 1738);
      a.quadraticCurveTo(910, 1280, 991, 893);
      a.quadraticCurveTo(1073,
        494, 1151, 169);
      a.lineTo(1190, 6);
      a.quadraticCurveTo(1359, -675, 1540, -1045);
      a.lineTo(1540, -1045);
      a.quadraticCurveTo(1419, -982, 1272, -982);
      a.quadraticCurveTo(1269, -981, 1265, -981);
      a.quadraticCurveTo(1187, -981, 1125, -1322);
      a.quadraticCurveTo(1059, -1678, 1060, -2423);
      a.quadraticCurveTo(1274, -2525, 1486, -2661);
      a.lineTo(1592, -2731);
      a.quadraticCurveTo(1934, -2966, 1778, -3215);
      a.quadraticCurveTo(1683, -3365, 1533, -3365);
      a.quadraticCurveTo(1434, -3365, 1310, -3300);
      a.lineTo(1238, -3260);
      a.quadraticCurveTo(1248, -3864, 882, -4324);
      a.quadraticCurveTo(516, -4785, 384, -5168);
      a.quadraticCurveTo(251, -5551, 317, -6093);
      a.quadraticCurveTo(382, -6636, 557, -7180);
      a.quadraticCurveTo(608, -7337, 621, -7444);
      a.lineTo(621, -7444);
      a.quadraticCurveTo(621, -7444, 621, -7444);
      a.quadraticCurveTo(649, -7675, 504, -7675);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10667);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(110, -7354);
      a.quadraticCurveTo(-40, -7132, -215, -6755);
      a.quadraticCurveTo(-613, -5895, -596, -5022);
      a.quadraticCurveTo(-591, -4787, -614, -4479);
      a.lineTo(-635, -4248);
      a.quadraticCurveTo(-1077, -3768, -1179, -3274);
      a.quadraticCurveTo(-1125, -3208, -1071, -3109);
      a.quadraticCurveTo(-915, -2821, -683, -2750);
      a.quadraticCurveTo(-523, -2531, -379, -2531);
      a.quadraticCurveTo(-248, -2531, -132, -2714);
      a.quadraticCurveTo(-60, -2829, -55, -2986);
      a.lineTo(-4, -4806);
      a.quadraticCurveTo(3, -5138, 0, -5470);
      a.lineTo(-84, -5920);
      a.quadraticCurveTo(-75, -6552, 72, -7173);
      a.lineTo(110, -7354);
      a.closePath();
      a.moveTo(-1077, -2330);
      a.lineTo(-1048, -1864);
      a.quadraticCurveTo(-1025, -1437, -1191, -906);
      a.quadraticCurveTo(-1194, -906, -1198, -906);
      a.quadraticCurveTo(-1398, -906, -1546, -963);
      a.lineTo(-1546, -963);
      a.quadraticCurveTo(-1223, -398, -997, 123);
      a.quadraticCurveTo(-786, 610, -659, 1058);
      a.quadraticCurveTo(-565, 1388, -484, 1706);
      a.quadraticCurveTo(-338, 2281, -233, 2814);
      a.lineTo(-214, 2911);
      a.quadraticCurveTo(14, 2265, -38, 1575);
      a.lineTo(-50, 1385);
      a.quadraticCurveTo(-189, 432, -298, -527);
      a.quadraticCurveTo(-380, -1249, -769, -1831);
      a.quadraticCurveTo(-811, -1894, -875, -1936);
      a.lineTo(-875, -1936);
      a.quadraticCurveTo(-875, -1936, -875, -1936);
      a.quadraticCurveTo(-901, -2012, -930, -2073);
      a.quadraticCurveTo(-993, -2202, -1077, -2330);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10667);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(621, -7444);
      a.quadraticCurveTo(653, -7709, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.moveTo(621, -7444);
      a.quadraticCurveTo(608, -7337, 557, -7180);
      a.quadraticCurveTo(382, -6636, 317, -6093);
      a.quadraticCurveTo(251, -5551, 384, -5168);
      a.quadraticCurveTo(516, -4785, 882, -4324);
      a.quadraticCurveTo(1248, -3864, 1238, -3260);
      a.lineTo(1310, -3300);
      a.quadraticCurveTo(1621, -3464, 1778, -3215);
      a.quadraticCurveTo(1934, -2966, 1592, -2731);
      a.lineTo(1486, -2661);
      a.quadraticCurveTo(1602, -2564, 1691, -2467);
      a.quadraticCurveTo(1783, -2366, 1846, -2264);
      a.quadraticCurveTo(2065, -1909, 1927, -1547);
      a.quadraticCurveTo(1866, -1390, 1789, -1277);
      a.quadraticCurveTo(1681, -1119, 1540, -1045);
      a.quadraticCurveTo(1359, -675, 1190, 6);
      a.lineTo(1151,
        169);
      a.quadraticCurveTo(1073, 494, 991, 893);
      a.quadraticCurveTo(910, 1280, 824, 1738);
      a.quadraticCurveTo(627, 2788, 409, 3232);
      a.quadraticCurveTo(190, 3675, -59, 3411);
      a.quadraticCurveTo(-140, 3258, -214, 2911);
      a.lineTo(-233, 2814);
      a.quadraticCurveTo(-338, 2281, -484, 1706);
      a.quadraticCurveTo(-565, 1388, -659, 1058);
      a.quadraticCurveTo(-786, 610, -997, 123);
      a.quadraticCurveTo(-1223, -398, -1546, -963);
      a.quadraticCurveTo(-1828, -1165, -1881, -1276);
      a.quadraticCurveTo(-1973, -1467, -1979, -1755);
      a.quadraticCurveTo(-1988, -2163, -1866, -2414);
      a.quadraticCurveTo(-1808, -2534, -1719, -2618);
      a.moveTo(-1697, -2637);
      a.quadraticCurveTo(-1591, -2730, -1444, -2773);
      a.lineTo(-1548, -2877);
      a.quadraticCurveTo(-1801, -3121, -1555, -3334);
      a.quadraticCurveTo(-1365, -3500, -1179, -3274);
      a.quadraticCurveTo(-1077, -3768, -635, -4248);
      a.lineTo(-614, -4479);
      a.quadraticCurveTo(-591, -4787, -596, -5022);
      a.quadraticCurveTo(-613, -5895, -215, -6755);
      a.quadraticCurveTo(-40, -7132, 110, -7354);
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1190, -967, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.moveTo(1060, -2423);
      a.lineTo(901, -2353);
      a.quadraticCurveTo(553, -2210, 543, -1729);
      a.moveTo(483, -2694);
      a.quadraticCurveTo(941, -3088, 1238, -3260);
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.moveTo(-683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.moveTo(-421, -2734);
      a.quadraticCurveTo(-562, -2713, -683, -2750);
      a.moveTo(-1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.moveTo(-1719, -2618);
      a.lineTo(-1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1395, -905, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.moveTo(-875, -1936);
      a.quadraticCurveTo(-822, -1782, -783, -1568)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10667);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(436, -7172);
      a.quadraticCurveTo(526, -7323, 621, -7444);
      a.moveTo(-84, -5920);
      a.lineTo(-8, -6155);
      a.moveTo(128, -6531);
      a.quadraticCurveTo(192, -6693, 259, -6837);
      a.moveTo(683, -1206);
      a.lineTo(537, -1172);
      a.lineTo(538, -1065);
      a.quadraticCurveTo(536, -876, 594, -692);
      a.lineTo(683, -723);
      a.moveTo(362, -1145);
      a.lineTo(537, -1172);
      a.lineTo(563, -1508);
      a.moveTo(1151, 169);
      a.lineTo(790, -299);
      a.lineTo(643, -220);
      a.moveTo(594, -692);
      a.lineTo(790, -299);
      a.lineTo(945, -361);
      a.moveTo(482, -663);
      a.lineTo(594, -692);
      a.moveTo(813, 958);
      a.quadraticCurveTo(901, 924, 991, 893);
      a.moveTo(387, 1139);
      a.quadraticCurveTo(512, 1078, 641, 1025);
      a.moveTo(-50, 1385);
      a.quadraticCurveTo(33, 1331, 120, 1281);
      a.lineTo(147, 1266);
      a.moveTo(-302, -5223);
      a.lineTo(-203, -5526);
      a.moveTo(-88, -5905);
      a.lineTo(-84, -5920);
      a.moveTo(-614, -4479);
      a.quadraticCurveTo(-526, -4617, -410, -4920);
      a.moveTo(-764, -1206);
      a.lineTo(-724, -996);
      a.lineTo(-522, -965);
      a.moveTo(-997, 123);
      a.lineTo(-818, -377);
      a.lineTo(-905, -421);
      a.moveTo(-818, -377);
      a.lineTo(-779, -541);
      a.quadraticCurveTo(-726, -763, -724, -996);
      a.lineTo(-864, -1005);
      a.moveTo(-818, -377);
      a.lineTo(-643, -281);
      a.moveTo(-484, 1706);
      a.quadraticCurveTo(-405, 1633, -318, 1569);
      a.moveTo(-75, 1401);
      a.lineTo(-50, 1385)
    }]
  }
}

function make_adult_7(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 10995);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-3767, 1726);
      a.quadraticCurveTo(-4267, 1726, -4779, 1941);
      a.quadraticCurveTo(-5728, 2342, -6672, 2751);
      a.quadraticCurveTo(-6899, 2850, -7143, 2897);
      a.quadraticCurveTo(-7440, 2918, -7736, 2918);
      a.quadraticCurveTo(-8416, 2918, -9094, 2809);
      a.quadraticCurveTo(-9860, 2684, -10634, 2684);
      a.quadraticCurveTo(-10886, 2684, -11138, 2697);
      a.quadraticCurveTo(-12195, 2750, -13161, 3068);
      a.quadraticCurveTo(-14079, 3373, -14655, 4096);
      a.quadraticCurveTo(-14721, 4178, -14783, 4267);
      a.quadraticCurveTo(-15059, 4663, -15366, 5038);
      a.quadraticCurveTo(-15207, 4897, -15042, 4766);
      a.lineTo(-14885, 4646);
      a.quadraticCurveTo(-14514, 4371, -14110, 4146);
      a.quadraticCurveTo(-14033, 4103, -13955, 4062);
      a.quadraticCurveTo(-13825, 3994, -13692, 3931);
      a.quadraticCurveTo(-13439, 3812, -13176, 3712);
      a.quadraticCurveTo(-13057, 3666, -12935, 3625);
      a.quadraticCurveTo(-12614, 3514, -12278, 3433);
      a.lineTo(-12069, 3385);
      a.quadraticCurveTo(-11710,
        3307, -11336, 3261);
      a.lineTo(-11141, 3240);
      a.lineTo(-10530, 3199);
      a.lineTo(-10474, 3198);
      a.lineTo(-10237, 3194);
      a.quadraticCurveTo(-10220, 3194, -10203, 3194);
      a.quadraticCurveTo(-9931, 3194, -9656, 3209);
      a.lineTo(-9566, 3215);
      a.lineTo(-9510, 3218);
      a.lineTo(-9214, 3243);
      a.lineTo(-9153, 3249);
      a.lineTo(-9152, 3249);
      a.lineTo(-8934, 3274);
      a.lineTo(-8922, 3276);
      a.lineTo(-8807, 3291);
      a.lineTo(-8785, 3294);
      a.lineTo(-8658, 3313);
      a.lineTo(-8535, 3332);
      a.quadraticCurveTo(-8279, 3374, -8021, 3429);
      a.lineTo(-7828, 3472);
      a.lineTo(-7682,
        3507);
      a.lineTo(-7666, 3511);
      a.lineTo(-7391, 3584);
      a.lineTo(-7272, 3619);
      a.lineTo(-6999, 3708);
      a.lineTo(-6841, 3611);
      a.lineTo(-6708, 3530);
      a.quadraticCurveTo(-6486, 3396, -6269, 3273);
      a.lineTo(-6088, 3171);
      a.quadraticCurveTo(-5988, 3115, -5888, 3062);
      a.lineTo(-5775, 3002);
      a.lineTo(-5705, 2965);
      a.lineTo(-5441, 2830);
      a.quadraticCurveTo(-5276, 2747, -5114, 2672);
      a.lineTo(-5048, 2641);
      a.lineTo(-4994, 2616);
      a.lineTo(-4991, 2615);
      a.lineTo(-4881, 2566);
      a.lineTo(-4869, 2560);
      a.quadraticCurveTo(-4647, 2462, -4433, 2378);
      a.lineTo(-4233,
        2302);
      a.lineTo(-4201, 2291);
      a.lineTo(-4053, 2239);
      a.lineTo(-3815, 2161);
      a.quadraticCurveTo(-3700, 2125, -3587, 2094);
      a.lineTo(-3456, 2060);
      a.lineTo(-3359, 2037);
      a.quadraticCurveTo(-3043, 1963, -2783, 1942);
      a.quadraticCurveTo(-3217, 1749, -3662, 1728);
      a.quadraticCurveTo(-3714, 1726, -3767, 1726);
      a.closePath();
      a.moveTo(-10133, -797);
      a.quadraticCurveTo(-10421, -797, -10688, -794);
      a.lineTo(-10877, -791);
      a.lineTo(-11973, -753);
      a.lineTo(-12142, -743);
      a.quadraticCurveTo(-12594, -715, -12952, -670);
      a.lineTo(-13209, -635);
      a.lineTo(-13338, -614);
      a.quadraticCurveTo(-13508, -584, -13643, -550);
      a.quadraticCurveTo(-13685, -519, -13732, -501);
      a.quadraticCurveTo(-14492, -223, -14870, 473);
      a.lineTo(-14901, 491);
      a.lineTo(-14973, 534);
      a.lineTo(-15060, 586);
      a.quadraticCurveTo(-15261, 715, -15472, 875);
      a.quadraticCurveTo(-16148, 1387, -16677, 2022);
      a.quadraticCurveTo(-17418, 2912, -17761, 3922);
      a.quadraticCurveTo(-18046, 4761, -18043, 5653);
      a.quadraticCurveTo(-17598, 4726, -16971, 3901);
      a.quadraticCurveTo(-16340, 3071, -15688, 2262);
      a.quadraticCurveTo(-15043, 1464, -14247, 835);
      a.quadraticCurveTo(-13656, 367, -12920, 48);
      a.lineTo(-12746, -24);
      a.lineTo(-12420, 1);
      a.lineTo(-12157, 1);
      a.lineTo(-11878, 9);
      a.quadraticCurveTo(-11005, 46, -10145, 242);
      a.lineTo(-9555, 383);
      a.quadraticCurveTo(-7960, 766, -5454, 1550);
      a.quadraticCurveTo(-5326, 1199, -4870, 778);
      a.quadraticCurveTo(-4416, 356, -4057, 71);
      a.quadraticCurveTo(-3698, -214, -2871, -511);
      a.lineTo(-3747, -565);
      a.lineTo(-4159, -589);
      a.lineTo(-5175, -645);
      a.lineTo(-5509, -662);
      a.lineTo(-7041, -730);
      a.lineTo(-7294, -740);
      a.lineTo(-8361, -773);
      a.lineTo(-8590, -779);
      a.lineTo(-9514, -794);
      a.lineTo(-9780, -796);
      a.quadraticCurveTo(-9960, -797, -10133, -797);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 10995);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-3767, 1726);
      a.quadraticCurveTo(-3714, 1726, -3662, 1728);
      a.quadraticCurveTo(-3217, 1749, -2783, 1942);
      a.quadraticCurveTo(-3043, 1963, -3359, 2037);
      a.lineTo(-3456, 2060);
      a.lineTo(-3587, 2094);
      a.quadraticCurveTo(-3700, 2125, -3815, 2161);
      a.lineTo(-4053, 2239);
      a.lineTo(-4201, 2291);
      a.lineTo(-4233, 2302);
      a.lineTo(-4433, 2378);
      a.quadraticCurveTo(-4647, 2462, -4869, 2560);
      a.lineTo(-4881, 2566);
      a.lineTo(-4991, 2615);
      a.lineTo(-4994, 2616);
      a.lineTo(-5048, 2641);
      a.lineTo(-5114, 2672);
      a.quadraticCurveTo(-5276, 2747, -5441, 2830);
      a.lineTo(-5705, 2965);
      a.lineTo(-5775, 3002);
      a.lineTo(-5888, 3062);
      a.quadraticCurveTo(-5988, 3115, -6088, 3171);
      a.lineTo(-6269, 3273);
      a.quadraticCurveTo(-6486, 3396, -6708, 3530);
      a.lineTo(-6841, 3611);
      a.lineTo(-6999, 3708);
      a.lineTo(-7272, 3619);
      a.lineTo(-7391, 3584);
      a.lineTo(-7666, 3511);
      a.lineTo(-7682, 3507);
      a.lineTo(-7828, 3472);
      a.lineTo(-8021, 3429);
      a.quadraticCurveTo(-8279, 3374, -8535, 3332);
      a.lineTo(-8658, 3313);
      a.lineTo(-8785, 3294);
      a.lineTo(-8807, 3291);
      a.lineTo(-8922, 3276);
      a.lineTo(-8934, 3274);
      a.lineTo(-9152, 3249);
      a.lineTo(-9153, 3249);
      a.lineTo(-9214, 3243);
      a.lineTo(-9510, 3218);
      a.lineTo(-9566, 3215);
      a.lineTo(-9656, 3209);
      a.quadraticCurveTo(-9931, 3194, -10203, 3194);
      a.quadraticCurveTo(-10220, 3194, -10237, 3194);
      a.lineTo(-10474, 3198);
      a.lineTo(-10530, 3199);
      a.lineTo(-11141, 3240);
      a.lineTo(-11336, 3261);
      a.quadraticCurveTo(-11710, 3307, -12069,
        3385);
      a.lineTo(-12278, 3433);
      a.quadraticCurveTo(-12614, 3514, -12935, 3625);
      a.quadraticCurveTo(-13057, 3666, -13176, 3712);
      a.quadraticCurveTo(-13439, 3812, -13692, 3931);
      a.quadraticCurveTo(-13825, 3994, -13955, 4062);
      a.quadraticCurveTo(-14033, 4103, -14110, 4146);
      a.quadraticCurveTo(-14514, 4371, -14885, 4646);
      a.lineTo(-15042, 4766);
      a.quadraticCurveTo(-15207, 4897, -15366, 5038);
      a.quadraticCurveTo(-15059, 4663, -14783, 4267);
      a.quadraticCurveTo(-14721, 4178, -14655, 4096);
      a.quadraticCurveTo(-14079, 3373, -13161, 3068);
      a.quadraticCurveTo(-12195,
        2750, -11138, 2697);
      a.quadraticCurveTo(-10885, 2684, -10634, 2684);
      a.quadraticCurveTo(-9860, 2684, -9094, 2809);
      a.quadraticCurveTo(-8416, 2918, -7736, 2918);
      a.quadraticCurveTo(-7440, 2918, -7143, 2897);
      a.quadraticCurveTo(-6899, 2850, -6672, 2751);
      a.quadraticCurveTo(-5728, 2342, -4779, 1941);
      a.quadraticCurveTo(-4267, 1726, -3767, 1726);
      a.closePath();
      a.moveTo(-10133, -797);
      a.quadraticCurveTo(-9960, -797, -9780, -796);
      a.lineTo(-9514, -794);
      a.lineTo(-8590, -779);
      a.lineTo(-8361, -773);
      a.lineTo(-7294, -740);
      a.lineTo(-7041, -730);
      a.lineTo(-5509, -662);
      a.lineTo(-5175, -645);
      a.lineTo(-4159, -589);
      a.lineTo(-3747, -565);
      a.lineTo(-2871, -511);
      a.quadraticCurveTo(-3698, -214, -4057, 71);
      a.quadraticCurveTo(-4416, 356, -4870, 778);
      a.quadraticCurveTo(-5326, 1199, -5454, 1550);
      a.quadraticCurveTo(-7960, 766, -9555, 383);
      a.lineTo(-10145, 242);
      a.quadraticCurveTo(-11005, 46, -11878, 9);
      a.lineTo(-12157, 1);
      a.lineTo(-12420, 1);
      a.lineTo(-12746, -24);
      a.lineTo(-12920, 48);
      a.quadraticCurveTo(-13656, 367, -14247, 835);
      a.quadraticCurveTo(-15043, 1464, -15688, 2262);
      a.quadraticCurveTo(-16340,
        3071, -16971, 3901);
      a.quadraticCurveTo(-17598, 4726, -18043, 5653);
      a.quadraticCurveTo(-18046, 4761, -17761, 3922);
      a.quadraticCurveTo(-17418, 2912, -16677, 2022);
      a.quadraticCurveTo(-16148, 1387, -15472, 875);
      a.quadraticCurveTo(-15261, 715, -15060, 586);
      a.lineTo(-14973, 534);
      a.lineTo(-14901, 491);
      a.lineTo(-14870, 473);
      a.quadraticCurveTo(-14492, -223, -13732, -501);
      a.quadraticCurveTo(-13685, -519, -13643, -550);
      a.quadraticCurveTo(-13508, -584, -13338, -614);
      a.lineTo(-13209, -635);
      a.lineTo(-12952, -670);
      a.quadraticCurveTo(-12594, -715, -12142, -743);
      a.lineTo(-11973, -753);
      a.lineTo(-10877, -791);
      a.lineTo(-10688, -794);
      a.quadraticCurveTo(-10420, -797, -10133, -797);
      a.closePath();
      a.moveTo(-983, -1515);
      a.quadraticCurveTo(-1916, -1066, -3722, -1066);
      a.quadraticCurveTo(-3843, -1066, -3967, -1068);
      a.quadraticCurveTo(-5956, -1101, -7180, -1488);
      a.quadraticCurveTo(-7393, -1272, -9332, -1272);
      a.quadraticCurveTo(-9873, -1272, -10548, -1289);
      a.quadraticCurveTo(-11509, -1313, -12225, -1313);
      a.quadraticCurveTo(-13815, -1313, -14199, -1195);
      a.quadraticCurveTo(-14477, -1110, -14606, -1044);
      a.quadraticCurveTo(-17159, 820, -18182, 3289);
      a.quadraticCurveTo(-18935, 5109, -18830, 7178);
      a.lineTo(-18806, 7535);
      a.quadraticCurveTo(-18668, 9157, -18038, 10764);
      a.quadraticCurveTo(-17723, 11568, -17436, 12047);
      a.quadraticCurveTo(-17355, 7972, -15678, 5830);
      a.quadraticCurveTo(-14336, 4116, -12040, 3710);
      a.quadraticCurveTo(-11343, 3587, -10589, 3587);
      a.quadraticCurveTo(-9570, 3587, -8447, 3812);
      a.quadraticCurveTo(-7836, 3935, -7268, 4111);
      a.lineTo(-6822, 4263);
      a.quadraticCurveTo(-4647, 2787, -2421, 2258);
      a.quadraticCurveTo(-1725,
        2092, -1108, 2041);
      a.lineTo(-630, 2023);
      a.quadraticCurveTo(-62, 1132, 10, 377);
      a.quadraticCurveTo(69, -227, -187, -717);
      a.quadraticCurveTo(-371, -1068, -696, -1327);
      a.quadraticCurveTo(-858, -1456, -983, -1515);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 10995);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-7180, -1488);
      a.quadraticCurveTo(-5956, -1101, -3967, -1068);
      a.quadraticCurveTo(-1978, -1036, -983, -1515);
      a.quadraticCurveTo(-858, -1456, -696, -1327);
      a.quadraticCurveTo(-371, -1068, -187, -717);
      a.quadraticCurveTo(69, -227, 10, 377);
      a.quadraticCurveTo(-62, 1132, -630, 2023);
      a.lineTo(-1108, 2041);
      a.quadraticCurveTo(-1725, 2092, -2421, 2258);
      a.quadraticCurveTo(-4647, 2787, -6822, 4263);
      a.lineTo(-7268, 4111);
      a.quadraticCurveTo(-7836, 3935, -8447, 3812);
      a.quadraticCurveTo(-10400, 3420, -12040, 3710);
      a.quadraticCurveTo(-14336, 4116, -15678, 5830);
      a.quadraticCurveTo(-17355, 7972, -17436, 12047);
      a.quadraticCurveTo(-17723,
        11568, -18038, 10764);
      a.quadraticCurveTo(-18668, 9157, -18806, 7535);
      a.lineTo(-18830, 7178);
      a.quadraticCurveTo(-18935, 5109, -18182, 3289);
      a.quadraticCurveTo(-17159, 820, -14606, -1044);
      a.quadraticCurveTo(-14477, -1110, -14199, -1195);
      a.quadraticCurveTo(-13643, -1366, -10548, -1289);
      a.quadraticCurveTo(-7453, -1212, -7180, -1488);
      a.closePath();
      a.moveTo(-18043, 5653);
      a.quadraticCurveTo(-18041, 6101, -17967, 6563);
      a.lineTo(-18440, 6210);
      a.lineTo(-18457, 6294);
      a.quadraticCurveTo(-18469, 6403, -18446, 6527);
      a.quadraticCurveTo(-18371,
        6925, -17967, 7331);
      a.lineTo(-18057, 7360);
      a.quadraticCurveTo(-18169, 7390, -18285, 7390);
      a.quadraticCurveTo(-18597, 7389, -18830, 7178);
      a.moveTo(-14901, 491);
      a.lineTo(-14973, 534);
      a.lineTo(-15060, 586);
      a.quadraticCurveTo(-15261, 715, -15472, 875);
      a.quadraticCurveTo(-16148, 1387, -16677, 2022);
      a.quadraticCurveTo(-17418, 2912, -17761, 3922);
      a.quadraticCurveTo(-18046, 4761, -18043, 5653)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 10995);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-12746, -24);
      a.lineTo(-12923, -33);
      a.moveTo(-11973, -753);
      a.lineTo(-10877, -791);
      a.moveTo(-10688, -794);
      a.quadraticCurveTo(-10260, -799, -9780, -796);
      a.moveTo(-9514, -794);
      a.lineTo(-8590, -779);
      a.moveTo(-8361, -773);
      a.lineTo(-7294, -740);
      a.moveTo(-7041, -730);
      a.lineTo(-5509, -662);
      a.moveTo(-5175, -645);
      a.lineTo(-4159, -589);
      a.moveTo(-3747, -565);
      a.lineTo(-2871, -511);
      a.moveTo(-12420, 1);
      a.lineTo(-12163, 29);
      a.moveTo(-12952, -670);
      a.quadraticCurveTo(-12594, -715, -12142, -743);
      a.moveTo(-2518, 1938);
      a.lineTo(-2582, 1934);
      a.lineTo(-2779, 1941);
      a.lineTo(-2783, 1942);
      a.quadraticCurveTo(-3043, 1963, -3359, 2037);
      a.moveTo(-3456, 2060);
      a.lineTo(-3587, 2094);
      a.quadraticCurveTo(-3700, 2125, -3815, 2161);
      a.lineTo(-4053, 2239);
      a.moveTo(-4201, 2291);
      a.lineTo(-4233, 2302);
      a.lineTo(-4433, 2378);
      a.quadraticCurveTo(-4647, 2462, -4869, 2560);
      a.moveTo(-5048, 2641);
      a.lineTo(-5114, 2672);
      a.quadraticCurveTo(-5276, 2747, -5441, 2830);
      a.lineTo(-5705, 2965);
      a.moveTo(-5888, 3062);
      a.quadraticCurveTo(-5988,
        3115, -6088, 3171);
      a.moveTo(-6269, 3273);
      a.quadraticCurveTo(-6486, 3396, -6708, 3530);
      a.moveTo(-6841, 3611);
      a.lineTo(-6999, 3708);
      a.lineTo(-7272, 3619);
      a.lineTo(-7391, 3584);
      a.lineTo(-7666, 3511);
      a.moveTo(-7828, 3472);
      a.lineTo(-8021, 3429);
      a.quadraticCurveTo(-8279, 3374, -8535, 3332);
      a.lineTo(-8658, 3313);
      a.moveTo(-8807, 3291);
      a.lineTo(-8922, 3276);
      a.lineTo(-8934, 3274);
      a.moveTo(-9153, 3249);
      a.lineTo(-9214, 3243);
      a.lineTo(-9510, 3218);
      a.moveTo(-9656, 3209);
      a.quadraticCurveTo(-9948, 3193, -10237, 3194);
      a.moveTo(-10474, 3198);
      a.lineTo(-10530, 3199);
      a.lineTo(-11141, 3240);
      a.moveTo(-11336, 3261);
      a.quadraticCurveTo(-11710, 3307, -12069, 3385);
      a.moveTo(-12278, 3433);
      a.quadraticCurveTo(-12614, 3514, -12935, 3625);
      a.moveTo(-13176, 3712);
      a.quadraticCurveTo(-13439, 3812, -13692, 3931);
      a.quadraticCurveTo(-13825, 3994, -13955, 4062);
      a.moveTo(-14110, 4146);
      a.quadraticCurveTo(-14514, 4371, -14885, 4646);
      a.moveTo(-15042, 4766);
      a.quadraticCurveTo(-15207, 4897, -15366, 5038);
      a.quadraticCurveTo(-15497, 5154, -15624, 5278);
      a.moveTo(-8737, 1194);
      a.quadraticCurveTo(-9078,
        985, -9440, 812);
      a.moveTo(-7143, 2510);
      a.lineTo(-7157, 2493);
      a.quadraticCurveTo(-7287, 2343, -7452, 2181);
      a.quadraticCurveTo(-7594, 2043, -7746, 1912);
      a.moveTo(-7851, 1823);
      a.quadraticCurveTo(-8171, 1557, -8536, 1320);
      a.moveTo(-10779, 307);
      a.quadraticCurveTo(-11322, 152, -11892, 66);
      a.moveTo(-9651, 714);
      a.quadraticCurveTo(-10052, 536, -10478, 398);
      a.moveTo(-12420, 1);
      a.lineTo(-12746, -24);
      a.moveTo(-13643, -550);
      a.quadraticCurveTo(-13508, -584, -13338, -614);
      a.lineTo(-13209, -635);
      a.moveTo(-13643, -550);
      a.lineTo(-13767, -516);
      a.moveTo(-13089, -39);
      a.quadraticCurveTo(-13373, -47, -13663, -40);
      a.moveTo(-16257, 5978);
      a.quadraticCurveTo(-16472, 6245, -16671, 6538);
      a.moveTo(-15728, 5382);
      a.quadraticCurveTo(-15955, 5612, -16167, 5867)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 10995);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-3767, 1726);
      a.quadraticCurveTo(-4267, 1726, -4779, 1941);
      a.quadraticCurveTo(-5728, 2342, -6672, 2751);
      a.quadraticCurveTo(-6899, 2850, -7143, 2897);
      a.quadraticCurveTo(-7440, 2918, -7736, 2918);
      a.quadraticCurveTo(-8416, 2918, -9094, 2809);
      a.quadraticCurveTo(-9860,
        2684, -10634, 2684);
      a.quadraticCurveTo(-10886, 2684, -11138, 2697);
      a.quadraticCurveTo(-12195, 2750, -13161, 3068);
      a.quadraticCurveTo(-14079, 3373, -14655, 4096);
      a.quadraticCurveTo(-14721, 4178, -14783, 4267);
      a.quadraticCurveTo(-15059, 4663, -15366, 5038);
      a.quadraticCurveTo(-15207, 4897, -15042, 4766);
      a.lineTo(-14885, 4646);
      a.quadraticCurveTo(-14514, 4371, -14110, 4146);
      a.quadraticCurveTo(-14033, 4103, -13955, 4062);
      a.quadraticCurveTo(-13825, 3994, -13692, 3931);
      a.quadraticCurveTo(-13439, 3812, -13176, 3712);
      a.quadraticCurveTo(-13057,
        3666, -12935, 3625);
      a.quadraticCurveTo(-12614, 3514, -12278, 3433);
      a.lineTo(-12069, 3385);
      a.quadraticCurveTo(-11710, 3307, -11336, 3261);
      a.lineTo(-11141, 3240);
      a.lineTo(-10530, 3199);
      a.lineTo(-10474, 3198);
      a.lineTo(-10237, 3194);
      a.quadraticCurveTo(-10220, 3194, -10203, 3194);
      a.quadraticCurveTo(-9931, 3194, -9656, 3209);
      a.lineTo(-9566, 3215);
      a.lineTo(-9510, 3218);
      a.lineTo(-9214, 3243);
      a.lineTo(-9153, 3249);
      a.lineTo(-9152, 3249);
      a.lineTo(-8934, 3274);
      a.lineTo(-8922, 3276);
      a.lineTo(-8807, 3291);
      a.lineTo(-8785, 3294);
      a.lineTo(-8658,
        3313);
      a.lineTo(-8535, 3332);
      a.quadraticCurveTo(-8279, 3374, -8021, 3429);
      a.lineTo(-7828, 3472);
      a.lineTo(-7682, 3507);
      a.lineTo(-7666, 3511);
      a.lineTo(-7391, 3584);
      a.lineTo(-7272, 3619);
      a.lineTo(-6999, 3708);
      a.lineTo(-6841, 3611);
      a.lineTo(-6708, 3530);
      a.quadraticCurveTo(-6486, 3396, -6269, 3273);
      a.lineTo(-6088, 3171);
      a.quadraticCurveTo(-5988, 3115, -5888, 3062);
      a.lineTo(-5775, 3002);
      a.lineTo(-5705, 2965);
      a.lineTo(-5441, 2830);
      a.quadraticCurveTo(-5276, 2747, -5114, 2672);
      a.lineTo(-5048, 2641);
      a.lineTo(-4994, 2616);
      a.lineTo(-4991,
        2615);
      a.lineTo(-4881, 2566);
      a.lineTo(-4869, 2560);
      a.quadraticCurveTo(-4647, 2462, -4433, 2378);
      a.lineTo(-4233, 2302);
      a.lineTo(-4201, 2291);
      a.lineTo(-4053, 2239);
      a.lineTo(-3815, 2161);
      a.quadraticCurveTo(-3700, 2125, -3587, 2094);
      a.lineTo(-3456, 2060);
      a.lineTo(-3359, 2037);
      a.quadraticCurveTo(-3043, 1963, -2783, 1942);
      a.quadraticCurveTo(-3217, 1749, -3662, 1728);
      a.quadraticCurveTo(-3714, 1726, -3767, 1726);
      a.closePath();
      a.moveTo(-10133, -797);
      a.quadraticCurveTo(-10421, -797, -10688, -794);
      a.lineTo(-10877, -791);
      a.lineTo(-11973, -753);
      a.lineTo(-12142, -743);
      a.quadraticCurveTo(-12594, -715, -12952, -670);
      a.lineTo(-13209, -635);
      a.lineTo(-13338, -614);
      a.quadraticCurveTo(-13508, -584, -13643, -550);
      a.quadraticCurveTo(-13685, -519, -13732, -501);
      a.quadraticCurveTo(-14492, -223, -14870, 473);
      a.lineTo(-14901, 491);
      a.lineTo(-14973, 534);
      a.lineTo(-15060, 586);
      a.quadraticCurveTo(-15261, 715, -15472, 875);
      a.quadraticCurveTo(-16148, 1387, -16677, 2022);
      a.quadraticCurveTo(-17418, 2912, -17761, 3922);
      a.quadraticCurveTo(-18046, 4761, -18043, 5653);
      a.quadraticCurveTo(-17598,
        4726, -16971, 3901);
      a.quadraticCurveTo(-16340, 3071, -15688, 2262);
      a.quadraticCurveTo(-15043, 1464, -14247, 835);
      a.quadraticCurveTo(-13656, 367, -12920, 48);
      a.lineTo(-12746, -24);
      a.lineTo(-12420, 1);
      a.lineTo(-12157, 1);
      a.lineTo(-11878, 9);
      a.quadraticCurveTo(-11005, 46, -10145, 242);
      a.lineTo(-9555, 383);
      a.quadraticCurveTo(-7960, 766, -5454, 1550);
      a.quadraticCurveTo(-5326, 1199, -4870, 778);
      a.quadraticCurveTo(-4416, 356, -4057, 71);
      a.quadraticCurveTo(-3698, -214, -2871, -511);
      a.lineTo(-3747, -565);
      a.lineTo(-4159, -589);
      a.lineTo(-5175, -645);
      a.lineTo(-5509, -662);
      a.lineTo(-7041, -730);
      a.lineTo(-7294, -740);
      a.lineTo(-8361, -773);
      a.lineTo(-8590, -779);
      a.lineTo(-9514, -794);
      a.lineTo(-9780, -796);
      a.quadraticCurveTo(-9960, -797, -10133, -797);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 10995);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-3767, 1726);
      a.quadraticCurveTo(-3714, 1726, -3662, 1728);
      a.quadraticCurveTo(-3217, 1749, -2783, 1942);
      a.quadraticCurveTo(-3043, 1963, -3359, 2037);
      a.lineTo(-3456, 2060);
      a.lineTo(-3587, 2094);
      a.quadraticCurveTo(-3700,
        2125, -3815, 2161);
      a.lineTo(-4053, 2239);
      a.lineTo(-4201, 2291);
      a.lineTo(-4233, 2302);
      a.lineTo(-4433, 2378);
      a.quadraticCurveTo(-4647, 2462, -4869, 2560);
      a.lineTo(-4881, 2566);
      a.lineTo(-4991, 2615);
      a.lineTo(-4994, 2616);
      a.lineTo(-5048, 2641);
      a.lineTo(-5114, 2672);
      a.quadraticCurveTo(-5276, 2747, -5441, 2830);
      a.lineTo(-5705, 2965);
      a.lineTo(-5775, 3002);
      a.lineTo(-5888, 3062);
      a.quadraticCurveTo(-5988, 3115, -6088, 3171);
      a.lineTo(-6269, 3273);
      a.quadraticCurveTo(-6486, 3396, -6708, 3530);
      a.lineTo(-6841, 3611);
      a.lineTo(-6999, 3708);
      a.lineTo(-7272,
        3619);
      a.lineTo(-7391, 3584);
      a.lineTo(-7666, 3511);
      a.lineTo(-7682, 3507);
      a.lineTo(-7828, 3472);
      a.lineTo(-8021, 3429);
      a.quadraticCurveTo(-8279, 3374, -8535, 3332);
      a.lineTo(-8658, 3313);
      a.lineTo(-8785, 3294);
      a.lineTo(-8807, 3291);
      a.lineTo(-8922, 3276);
      a.lineTo(-8934, 3274);
      a.lineTo(-9152, 3249);
      a.lineTo(-9153, 3249);
      a.lineTo(-9214, 3243);
      a.lineTo(-9510, 3218);
      a.lineTo(-9566, 3215);
      a.lineTo(-9656, 3209);
      a.quadraticCurveTo(-9931, 3194, -10203, 3194);
      a.quadraticCurveTo(-10220, 3194, -10237, 3194);
      a.lineTo(-10474, 3198);
      a.lineTo(-10530,
        3199);
      a.lineTo(-11141, 3240);
      a.lineTo(-11336, 3261);
      a.quadraticCurveTo(-11710, 3307, -12069, 3385);
      a.lineTo(-12278, 3433);
      a.quadraticCurveTo(-12614, 3514, -12935, 3625);
      a.quadraticCurveTo(-13057, 3666, -13176, 3712);
      a.quadraticCurveTo(-13439, 3812, -13692, 3931);
      a.quadraticCurveTo(-13825, 3994, -13955, 4062);
      a.quadraticCurveTo(-14033, 4103, -14110, 4146);
      a.quadraticCurveTo(-14514, 4371, -14885, 4646);
      a.lineTo(-15042, 4766);
      a.quadraticCurveTo(-15207, 4897, -15366, 5038);
      a.quadraticCurveTo(-15059, 4663, -14783, 4267);
      a.quadraticCurveTo(-14721,
        4178, -14655, 4096);
      a.quadraticCurveTo(-14079, 3373, -13161, 3068);
      a.quadraticCurveTo(-12195, 2750, -11138, 2697);
      a.quadraticCurveTo(-10885, 2684, -10634, 2684);
      a.quadraticCurveTo(-9860, 2684, -9094, 2809);
      a.quadraticCurveTo(-8416, 2918, -7736, 2918);
      a.quadraticCurveTo(-7440, 2918, -7143, 2897);
      a.quadraticCurveTo(-6899, 2850, -6672, 2751);
      a.quadraticCurveTo(-5728, 2342, -4779, 1941);
      a.quadraticCurveTo(-4267, 1726, -3767, 1726);
      a.closePath();
      a.moveTo(-10133, -797);
      a.quadraticCurveTo(-9960, -797, -9780, -796);
      a.lineTo(-9514, -794);
      a.lineTo(-8590, -779);
      a.lineTo(-8361, -773);
      a.lineTo(-7294, -740);
      a.lineTo(-7041, -730);
      a.lineTo(-5509, -662);
      a.lineTo(-5175, -645);
      a.lineTo(-4159, -589);
      a.lineTo(-3747, -565);
      a.lineTo(-2871, -511);
      a.quadraticCurveTo(-3698, -214, -4057, 71);
      a.quadraticCurveTo(-4416, 356, -4870, 778);
      a.quadraticCurveTo(-5326, 1199, -5454, 1550);
      a.quadraticCurveTo(-7960, 766, -9555, 383);
      a.lineTo(-10145, 242);
      a.quadraticCurveTo(-11005, 46, -11878, 9);
      a.lineTo(-12157, 1);
      a.lineTo(-12420, 1);
      a.lineTo(-12746, -24);
      a.lineTo(-12920, 48);
      a.quadraticCurveTo(-13656,
        367, -14247, 835);
      a.quadraticCurveTo(-15043, 1464, -15688, 2262);
      a.quadraticCurveTo(-16340, 3071, -16971, 3901);
      a.quadraticCurveTo(-17598, 4726, -18043, 5653);
      a.quadraticCurveTo(-18046, 4761, -17761, 3922);
      a.quadraticCurveTo(-17418, 2912, -16677, 2022);
      a.quadraticCurveTo(-16148, 1387, -15472, 875);
      a.quadraticCurveTo(-15261, 715, -15060, 586);
      a.lineTo(-14973, 534);
      a.lineTo(-14901, 491);
      a.lineTo(-14870, 473);
      a.quadraticCurveTo(-14492, -223, -13732, -501);
      a.quadraticCurveTo(-13685, -519, -13643, -550);
      a.quadraticCurveTo(-13508, -584, -13338, -614);
      a.lineTo(-13209, -635);
      a.lineTo(-12952, -670);
      a.quadraticCurveTo(-12594, -715, -12142, -743);
      a.lineTo(-11973, -753);
      a.lineTo(-10877, -791);
      a.lineTo(-10688, -794);
      a.quadraticCurveTo(-10420, -797, -10133, -797);
      a.closePath();
      a.moveTo(-983, -1515);
      a.quadraticCurveTo(-1916, -1066, -3722, -1066);
      a.quadraticCurveTo(-3843, -1066, -3967, -1068);
      a.quadraticCurveTo(-5956, -1101, -7180, -1488);
      a.quadraticCurveTo(-7393, -1272, -9332, -1272);
      a.quadraticCurveTo(-9873, -1272, -10548, -1289);
      a.quadraticCurveTo(-11509, -1313, -12225, -1313);
      a.quadraticCurveTo(-13815, -1313, -14199, -1195);
      a.quadraticCurveTo(-14477, -1110, -14606, -1044);
      a.quadraticCurveTo(-17159, 820, -18182, 3289);
      a.quadraticCurveTo(-18935, 5109, -18830, 7178);
      a.lineTo(-18806, 7535);
      a.quadraticCurveTo(-18668, 9157, -18038, 10764);
      a.quadraticCurveTo(-17723, 11568, -17436, 12047);
      a.quadraticCurveTo(-17355, 7972, -15678, 5830);
      a.quadraticCurveTo(-14336, 4116, -12040, 3710);
      a.quadraticCurveTo(-11343, 3587, -10589, 3587);
      a.quadraticCurveTo(-9570, 3587, -8447, 3812);
      a.quadraticCurveTo(-7836, 3935, -7268, 4111);
      a.lineTo(-6822, 4263);
      a.quadraticCurveTo(-4647, 2787, -2421, 2258);
      a.quadraticCurveTo(-1725, 2092, -1108, 2041);
      a.lineTo(-630, 2023);
      a.quadraticCurveTo(-62, 1132, 10, 377);
      a.quadraticCurveTo(69, -227, -187, -717);
      a.quadraticCurveTo(-371, -1068, -696, -1327);
      a.quadraticCurveTo(-858, -1456, -983, -1515);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 10995);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-7180, -1488);
      a.quadraticCurveTo(-5956, -1101, -3967, -1068);
      a.quadraticCurveTo(-1978, -1036, -983, -1515);
      a.quadraticCurveTo(-858, -1456, -696, -1327);
      a.quadraticCurveTo(-371, -1068, -187, -717);
      a.quadraticCurveTo(69, -227, 10, 377);
      a.quadraticCurveTo(-62, 1132, -630, 2023);
      a.lineTo(-1108, 2041);
      a.quadraticCurveTo(-1725, 2092, -2421, 2258);
      a.quadraticCurveTo(-4647, 2787, -6822, 4263);
      a.lineTo(-7268, 4111);
      a.quadraticCurveTo(-7836, 3935, -8447, 3812);
      a.quadraticCurveTo(-10400, 3420, -12040, 3710);
      a.quadraticCurveTo(-14336,
        4116, -15678, 5830);
      a.quadraticCurveTo(-17355, 7972, -17436, 12047);
      a.quadraticCurveTo(-17723, 11568, -18038, 10764);
      a.quadraticCurveTo(-18668, 9157, -18806, 7535);
      a.lineTo(-18830, 7178);
      a.quadraticCurveTo(-18935, 5109, -18182, 3289);
      a.quadraticCurveTo(-17159, 820, -14606, -1044);
      a.quadraticCurveTo(-14477, -1110, -14199, -1195);
      a.quadraticCurveTo(-13643, -1366, -10548, -1289);
      a.quadraticCurveTo(-7453, -1212, -7180, -1488);
      a.closePath();
      a.moveTo(-18043, 5653);
      a.quadraticCurveTo(-18041, 6101, -17967, 6563);
      a.lineTo(-18440, 6210);
      a.lineTo(-18457, 6294);
      a.quadraticCurveTo(-18469, 6403, -18446, 6527);
      a.quadraticCurveTo(-18371, 6925, -17967, 7331);
      a.lineTo(-18057, 7360);
      a.quadraticCurveTo(-18169, 7390, -18285, 7390);
      a.quadraticCurveTo(-18597, 7389, -18830, 7178);
      a.moveTo(-14901, 491);
      a.lineTo(-14973, 534);
      a.lineTo(-15060, 586);
      a.quadraticCurveTo(-15261, 715, -15472, 875);
      a.quadraticCurveTo(-16148, 1387, -16677, 2022);
      a.quadraticCurveTo(-17418, 2912, -17761, 3922);
      a.quadraticCurveTo(-18046, 4761, -18043, 5653)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397,
        10995);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-12746, -24);
      a.lineTo(-12923, -33);
      a.moveTo(-11973, -753);
      a.lineTo(-10877, -791);
      a.moveTo(-10688, -794);
      a.quadraticCurveTo(-10260, -799, -9780, -796);
      a.moveTo(-9514, -794);
      a.lineTo(-8590, -779);
      a.moveTo(-8361, -773);
      a.lineTo(-7294, -740);
      a.moveTo(-7041, -730);
      a.lineTo(-5509, -662);
      a.moveTo(-5175, -645);
      a.lineTo(-4159, -589);
      a.moveTo(-3747, -565);
      a.lineTo(-2871, -511);
      a.moveTo(-12420, 1);
      a.lineTo(-12163, 29);
      a.moveTo(-12952, -670);
      a.quadraticCurveTo(-12594, -715, -12142, -743);
      a.moveTo(-2518, 1938);
      a.lineTo(-2582, 1934);
      a.lineTo(-2779, 1941);
      a.lineTo(-2783, 1942);
      a.quadraticCurveTo(-3043, 1963, -3359, 2037);
      a.moveTo(-3456, 2060);
      a.lineTo(-3587, 2094);
      a.quadraticCurveTo(-3700, 2125, -3815, 2161);
      a.lineTo(-4053, 2239);
      a.moveTo(-4201, 2291);
      a.lineTo(-4233, 2302);
      a.lineTo(-4433, 2378);
      a.quadraticCurveTo(-4647, 2462, -4869, 2560);
      a.moveTo(-5048, 2641);
      a.lineTo(-5114, 2672);
      a.quadraticCurveTo(-5276, 2747, -5441, 2830);
      a.lineTo(-5705, 2965);
      a.moveTo(-5888, 3062);
      a.quadraticCurveTo(-5988, 3115, -6088, 3171);
      a.moveTo(-6269, 3273);
      a.quadraticCurveTo(-6486, 3396, -6708, 3530);
      a.moveTo(-6841, 3611);
      a.lineTo(-6999, 3708);
      a.lineTo(-7272, 3619);
      a.lineTo(-7391, 3584);
      a.lineTo(-7666, 3511);
      a.moveTo(-7828, 3472);
      a.lineTo(-8021, 3429);
      a.quadraticCurveTo(-8279, 3374, -8535, 3332);
      a.lineTo(-8658, 3313);
      a.moveTo(-8807, 3291);
      a.lineTo(-8922, 3276);
      a.lineTo(-8934, 3274);
      a.moveTo(-9153, 3249);
      a.lineTo(-9214, 3243);
      a.lineTo(-9510, 3218);
      a.moveTo(-9656, 3209);
      a.quadraticCurveTo(-9948, 3193, -10237, 3194);
      a.moveTo(-10474, 3198);
      a.lineTo(-10530, 3199);
      a.lineTo(-11141, 3240);
      a.moveTo(-11336, 3261);
      a.quadraticCurveTo(-11710, 3307, -12069, 3385);
      a.moveTo(-12278, 3433);
      a.quadraticCurveTo(-12614, 3514, -12935, 3625);
      a.moveTo(-13176, 3712);
      a.quadraticCurveTo(-13439, 3812, -13692, 3931);
      a.quadraticCurveTo(-13825, 3994, -13955, 4062);
      a.moveTo(-14110, 4146);
      a.quadraticCurveTo(-14514, 4371, -14885, 4646);
      a.moveTo(-15042, 4766);
      a.quadraticCurveTo(-15207,
        4897, -15366, 5038);
      a.quadraticCurveTo(-15497, 5154, -15624, 5278);
      a.moveTo(-8737, 1194);
      a.quadraticCurveTo(-9078, 985, -9440, 812);
      a.moveTo(-7143, 2510);
      a.lineTo(-7157, 2493);
      a.quadraticCurveTo(-7287, 2343, -7452, 2181);
      a.quadraticCurveTo(-7594, 2043, -7746, 1912);
      a.moveTo(-7851, 1823);
      a.quadraticCurveTo(-8171, 1557, -8536, 1320);
      a.moveTo(-10779, 307);
      a.quadraticCurveTo(-11322, 152, -11892, 66);
      a.moveTo(-9651, 714);
      a.quadraticCurveTo(-10052, 536, -10478, 398);
      a.moveTo(-12420, 1);
      a.lineTo(-12746, -24);
      a.moveTo(-13643, -550);
      a.quadraticCurveTo(-13508, -584, -13338, -614);
      a.lineTo(-13209, -635);
      a.moveTo(-13643, -550);
      a.lineTo(-13767, -516);
      a.moveTo(-13089, -39);
      a.quadraticCurveTo(-13373, -47, -13663, -40);
      a.moveTo(-16257, 5978);
      a.quadraticCurveTo(-16472, 6245, -16671, 6538);
      a.moveTo(-15728, 5382);
      a.quadraticCurveTo(-15955, 5612, -16167, 5867)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11167);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(29, -2730);
      a.quadraticCurveTo(18, -2730, 8, -2730);
      a.quadraticCurveTo(-775, -2725, -1473, -2385);
      a.quadraticCurveTo(-1598, -2324, -1712, -2247);
      a.quadraticCurveTo(-1835, -2165, -1945, -2063);
      a.lineTo(-2105, -1920);
      a.quadraticCurveTo(-2051, -1145, -1854, -394);
      a.quadraticCurveTo(-1658, 357, -1281, 1029);
      a.lineTo(-1275, 1040);
      a.quadraticCurveTo(-893, 1719, -384, 2301);
      a.quadraticCurveTo(-137, 2582, 102, 2582);
      a.quadraticCurveTo(356, 2582, 602, 2267);
      a.quadraticCurveTo(800, 2015, 923, 1716);
      a.quadraticCurveTo(1200, 1045, 1441, 361);
      a.quadraticCurveTo(1694, -358, 1875, -1100);
      a.quadraticCurveTo(2015, -1676, 1895, -2258);
      a.lineTo(1717, -2349);
      a.quadraticCurveTo(1597, -2407, 1472, -2456);
      a.quadraticCurveTo(775, -2730, 29, -2730);
      a.closePath();
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1806, 2714, -1672, 2714);
      a.quadraticCurveTo(-1609, 2714, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.quadraticCurveTo(-1628, 2191, -1784, 2034);
      a.quadraticCurveTo(-1882,
        1935, -1969, 1830);
      a.closePath();
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285);
      a.quadraticCurveTo(1453, 2524, 1069, 2647);
      a.quadraticCurveTo(1240, 2920, 1464, 3159);
      a.lineTo(1495, 3185);
      a.quadraticCurveTo(1485, 2702, 1801, 2702);
      a.quadraticCurveTo(1871, 2702, 1958, 2726);
      a.quadraticCurveTo(2051, 2751, 2109, 2838);
      a.lineTo(2146, 2897);
      a.quadraticCurveTo(2234, 2453, 2090, 2025);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11167);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1895, -2258);
      a.quadraticCurveTo(2015, -1676, 1875, -1100);
      a.quadraticCurveTo(1694, -358, 1441, 361);
      a.quadraticCurveTo(1200, 1045, 923, 1716);
      a.quadraticCurveTo(800, 2015, 602, 2267);
      a.quadraticCurveTo(356, 2582, 102, 2582);
      a.quadraticCurveTo(-137, 2582, -384, 2301);
      a.quadraticCurveTo(-893, 1719, -1275, 1040);
      a.lineTo(-1281, 1029);
      a.lineTo(-1281, 1029);
      a.quadraticCurveTo(-1281, 1029, -1281, 1029);
      a.quadraticCurveTo(-1658, 357, -1854, -394);
      a.quadraticCurveTo(-2051, -1145, -2105, -1920);
      a.quadraticCurveTo(-2607, -1485, -3179, -1168);
      a.lineTo(-3154, -913);
      a.quadraticCurveTo(-3092, -110, -3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628, 2191, -1457, 2316);
      a.quadraticCurveTo(-1193, 2510, -895, 2627);
      a.quadraticCurveTo(-716, 2697, -524, 2739);
      a.quadraticCurveTo(-230, 2803, 76, 2803);
      a.quadraticCurveTo(518, 2803, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782, 2285);
      a.quadraticCurveTo(1942, 2169, 2090, 2025);
      a.quadraticCurveTo(2251, 1867, 2398, 1675);
      a.quadraticCurveTo(2848,
        1083, 3270, 825);
      a.quadraticCurveTo(3289, 538, 3323, 253);
      a.quadraticCurveTo(3408, -448, 3399, -1154);
      a.quadraticCurveTo(3043, -1322, 2763, -1603);
      a.quadraticCurveTo(2369, -1999, 1895, -2258);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11167);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1717, -2349);
      a.lineTo(1791, -2179);
      a.moveTo(1971, -1331);
      a.quadraticCurveTo(1976, -1189, 1966, -1044);
      a.moveTo(1884, -1896);
      a.quadraticCurveTo(1918, -1769, 1940, -1641);
      a.moveTo(1925, -735);
      a.lineTo(1908, -654);
      a.lineTo(1866, -463);
      a.moveTo(-1712, -2247);
      a.lineTo(-1741, -2148);
      a.moveTo(-1785, -1953);
      a.quadraticCurveTo(-1818, -1781, -1826, -1605);
      a.moveTo(-1281, 1029);
      a.lineTo(-1285, 1001);
      a.moveTo(-1715, -727);
      a.lineTo(-1688, -640);
      a.lineTo(-1626, -443);
      a.moveTo(-1821, -1306);
      a.quadraticCurveTo(-1810, -1147, -1778, -986);
      a.moveTo(-1400, 404);
      a.lineTo(-1338, 701);
      a.moveTo(-1262, 1557);
      a.quadraticCurveTo(-1273, 1698, -1300, 1834);
      a.moveTo(-1281, 1029);
      a.quadraticCurveTo(-1265, 1153, -1259, 1273);
      a.moveTo(-1457, 2316);
      a.quadraticCurveTo(-1410, 2213, -1373, 2107);
      a.moveTo(1782, 2285);
      a.quadraticCurveTo(1730, 2222, 1688, 2157);
      a.moveTo(1484, 1644);
      a.quadraticCurveTo(1503, 1765, 1546, 1881);
      a.moveTo(1534, 1012);
      a.lineTo(1508, 1124);
      a.quadraticCurveTo(1484, 1229, 1475, 1330);
      a.moveTo(1665, 437);
      a.lineTo(1603, 712);
      a.moveTo(-1547, -174);
      a.lineTo(-1468, 121);
      a.moveTo(1798, -156);
      a.lineTo(1735, 128)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11167);
      a.fillStyle =
        "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2105, -1920);
      a.lineTo(-1945, -2063);
      a.quadraticCurveTo(-1835, -2165, -1712, -2247);
      a.quadraticCurveTo(-1598, -2324, -1473, -2385);
      a.quadraticCurveTo(-775, -2725, 8, -2730);
      a.quadraticCurveTo(765, -2734, 1472, -2456);
      a.quadraticCurveTo(1597, -2407, 1717, -2349);
      a.lineTo(1895, -2258);
      a.quadraticCurveTo(2369, -1999, 2763, -1603);
      a.quadraticCurveTo(3043, -1322, 3399, -1154);
      a.lineTo(3461, -1126);
      a.moveTo(-3226, -1142);
      a.lineTo(-3179, -1168);
      a.quadraticCurveTo(-2607, -1485, -2105, -1920);
      a.moveTo(-3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628, 2191, -1457, 2316);
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1749, 2657, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.moveTo(-895, 2627);
      a.quadraticCurveTo(-716, 2697, -524, 2739);
      a.quadraticCurveTo(190, 2895, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782, 2285);
      a.moveTo(-3242, 673);
      a.lineTo(-3224, 679);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(3391, 751, 3509, 704);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(2848, 1083, 2398, 1675);
      a.quadraticCurveTo(2251, 1867, 2090, 2025);
      a.quadraticCurveTo(2234,
        2453, 2146, 2897);
      a.lineTo(2109, 2838);
      a.quadraticCurveTo(2051, 2751, 1958, 2726);
      a.quadraticCurveTo(1483, 2595, 1495, 3185);
      a.lineTo(1464, 3159);
      a.quadraticCurveTo(1240, 2920, 1069, 2647);
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10633);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.quadraticCurveTo(1866, -1390, 1927, -1547);
      a.quadraticCurveTo(2065, -1909, 1846, -2264);
      a.closePath();
      a.moveTo(-1866, -2414);
      a.quadraticCurveTo(-1988, -2163, -1979, -1755);
      a.quadraticCurveTo(-1973, -1467, -1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.closePath();
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1187, -981, 1265, -981);
      a.quadraticCurveTo(1268, -981, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.quadraticCurveTo(1602, -2564, 1486, -2661);
      a.closePath();
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1591, -2730, -1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1398, -906, -1198, -906);
      a.quadraticCurveTo(-1195, -906, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.lineTo(-1158, -2446);
      a.quadraticCurveTo(-1266, -2592, -1444, -2773);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10633);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(1691, -2467);
      a.lineTo(1617, -2397);
      a.quadraticCurveTo(1036, -1774, 1540, -1045);
      a.quadraticCurveTo(1681, -1119, 1789, -1277);
      a.lineTo(1766, -1339);
      a.quadraticCurveTo(1594, -1821, 1846, -2264);
      a.quadraticCurveTo(1783, -2366, 1691, -2467);
      a.closePath();
      a.moveTo(-1706, -2639);
      a.quadraticCurveTo(-1719, -2639, -1719, -2618);
      a.quadraticCurveTo(-1808, -2534, -1866, -2414);
      a.lineTo(-1839, -2375);
      a.quadraticCurveTo(-1463, -1799, -1881, -1276);
      a.quadraticCurveTo(-1828, -1165, -1546, -963);
      a.quadraticCurveTo(-1083, -1736, -1560, -2461);
      a.quadraticCurveTo(-1620, -2552, -1697, -2637);
      a.quadraticCurveTo(-1702, -2639, -1706, -2639);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10633);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(504, -7675);
      a.quadraticCurveTo(483, -7675, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.lineTo(72, -7173);
      a.quadraticCurveTo(-75, -6552, -84, -5920);
      a.lineTo(0, -5470);
      a.quadraticCurveTo(3, -5138, -4, -4806);
      a.lineTo(-55, -2986);
      a.quadraticCurveTo(-60, -2829, -132, -2714);
      a.quadraticCurveTo(-249, -2531, -379, -2531);
      a.quadraticCurveTo(-522, -2531, -683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.quadraticCurveTo(-1286, -3404, -1395, -3404);
      a.quadraticCurveTo(-1475, -3404, -1555, -3334);
      a.quadraticCurveTo(-1801, -3121, -1548, -2877);
      a.lineTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.quadraticCurveTo(-811, -1894, -769, -1831);
      a.quadraticCurveTo(-380, -1249, -298, -527);
      a.quadraticCurveTo(-189, 432, -50, 1385);
      a.lineTo(-38, 1575);
      a.quadraticCurveTo(14, 2265, -214, 2911);
      a.quadraticCurveTo(-140, 3258, -59, 3411);
      a.quadraticCurveTo(33, 3510, 122, 3510);
      a.quadraticCurveTo(271, 3510, 409, 3232);
      a.quadraticCurveTo(627, 2788, 824, 1738);
      a.quadraticCurveTo(910, 1280, 991, 893);
      a.quadraticCurveTo(1073, 494, 1151, 169);
      a.lineTo(1190, 6);
      a.quadraticCurveTo(1359, -675, 1540, -1045);
      a.lineTo(1540, -1045);
      a.quadraticCurveTo(1419, -982, 1272, -982);
      a.quadraticCurveTo(1269, -981, 1265, -981);
      a.quadraticCurveTo(1187, -981, 1125, -1322);
      a.quadraticCurveTo(1059, -1678, 1060, -2423);
      a.quadraticCurveTo(1274, -2525, 1486, -2661);
      a.lineTo(1592, -2731);
      a.quadraticCurveTo(1934, -2966, 1778, -3215);
      a.quadraticCurveTo(1683, -3365, 1533, -3365);
      a.quadraticCurveTo(1434, -3365, 1310, -3300);
      a.lineTo(1238, -3260);
      a.quadraticCurveTo(1248, -3864, 882, -4324);
      a.quadraticCurveTo(516, -4785, 384, -5168);
      a.quadraticCurveTo(251, -5551, 317, -6093);
      a.quadraticCurveTo(382, -6636, 557, -7180);
      a.quadraticCurveTo(608, -7337, 621, -7444);
      a.lineTo(621, -7444);
      a.quadraticCurveTo(621, -7444, 621, -7444);
      a.quadraticCurveTo(649, -7675, 504, -7675);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10633);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(110, -7354);
      a.quadraticCurveTo(-40, -7132, -215, -6755);
      a.quadraticCurveTo(-613, -5895, -596, -5022);
      a.quadraticCurveTo(-591, -4787, -614, -4479);
      a.lineTo(-635, -4248);
      a.quadraticCurveTo(-1077, -3768, -1179, -3274);
      a.quadraticCurveTo(-1125, -3208, -1071, -3109);
      a.quadraticCurveTo(-915, -2821, -683, -2750);
      a.quadraticCurveTo(-523, -2531, -379, -2531);
      a.quadraticCurveTo(-248, -2531, -132, -2714);
      a.quadraticCurveTo(-60, -2829, -55, -2986);
      a.lineTo(-4, -4806);
      a.quadraticCurveTo(3, -5138, 0, -5470);
      a.lineTo(-84, -5920);
      a.quadraticCurveTo(-75, -6552, 72, -7173);
      a.lineTo(110, -7354);
      a.closePath();
      a.moveTo(-1077, -2330);
      a.lineTo(-1048, -1864);
      a.quadraticCurveTo(-1025, -1437, -1191, -906);
      a.quadraticCurveTo(-1194, -906, -1198, -906);
      a.quadraticCurveTo(-1398, -906, -1546, -963);
      a.lineTo(-1546, -963);
      a.quadraticCurveTo(-1223, -398, -997, 123);
      a.quadraticCurveTo(-786, 610, -659, 1058);
      a.quadraticCurveTo(-565,
        1388, -484, 1706);
      a.quadraticCurveTo(-338, 2281, -233, 2814);
      a.lineTo(-214, 2911);
      a.quadraticCurveTo(14, 2265, -38, 1575);
      a.lineTo(-50, 1385);
      a.quadraticCurveTo(-189, 432, -298, -527);
      a.quadraticCurveTo(-380, -1249, -769, -1831);
      a.quadraticCurveTo(-811, -1894, -875, -1936);
      a.lineTo(-875, -1936);
      a.quadraticCurveTo(-875, -1936, -875, -1936);
      a.quadraticCurveTo(-901, -2012, -930, -2073);
      a.quadraticCurveTo(-993, -2202, -1077, -2330);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10633);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle =
        "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(621, -7444);
      a.quadraticCurveTo(653, -7709, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.moveTo(621, -7444);
      a.quadraticCurveTo(608, -7337, 557, -7180);
      a.quadraticCurveTo(382, -6636, 317, -6093);
      a.quadraticCurveTo(251, -5551, 384, -5168);
      a.quadraticCurveTo(516, -4785, 882, -4324);
      a.quadraticCurveTo(1248, -3864, 1238, -3260);
      a.lineTo(1310, -3300);
      a.quadraticCurveTo(1621, -3464, 1778, -3215);
      a.quadraticCurveTo(1934, -2966, 1592, -2731);
      a.lineTo(1486, -2661);
      a.quadraticCurveTo(1602, -2564, 1691, -2467);
      a.quadraticCurveTo(1783, -2366, 1846, -2264);
      a.quadraticCurveTo(2065, -1909, 1927, -1547);
      a.quadraticCurveTo(1866, -1390, 1789, -1277);
      a.quadraticCurveTo(1681, -1119, 1540, -1045);
      a.quadraticCurveTo(1359, -675, 1190, 6);
      a.lineTo(1151, 169);
      a.quadraticCurveTo(1073, 494, 991, 893);
      a.quadraticCurveTo(910, 1280, 824, 1738);
      a.quadraticCurveTo(627, 2788, 409, 3232);
      a.quadraticCurveTo(190, 3675, -59, 3411);
      a.quadraticCurveTo(-140, 3258, -214, 2911);
      a.lineTo(-233,
        2814);
      a.quadraticCurveTo(-338, 2281, -484, 1706);
      a.quadraticCurveTo(-565, 1388, -659, 1058);
      a.quadraticCurveTo(-786, 610, -997, 123);
      a.quadraticCurveTo(-1223, -398, -1546, -963);
      a.quadraticCurveTo(-1828, -1165, -1881, -1276);
      a.quadraticCurveTo(-1973, -1467, -1979, -1755);
      a.quadraticCurveTo(-1988, -2163, -1866, -2414);
      a.quadraticCurveTo(-1808, -2534, -1719, -2618);
      a.moveTo(-1697, -2637);
      a.quadraticCurveTo(-1591, -2730, -1444, -2773);
      a.lineTo(-1548, -2877);
      a.quadraticCurveTo(-1801, -3121, -1555, -3334);
      a.quadraticCurveTo(-1365, -3500, -1179, -3274);
      a.quadraticCurveTo(-1077, -3768, -635, -4248);
      a.lineTo(-614, -4479);
      a.quadraticCurveTo(-591, -4787, -596, -5022);
      a.quadraticCurveTo(-613, -5895, -215, -6755);
      a.quadraticCurveTo(-40, -7132, 110, -7354);
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1190, -967, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.moveTo(1060, -2423);
      a.lineTo(901, -2353);
      a.quadraticCurveTo(553, -2210, 543, -1729);
      a.moveTo(483, -2694);
      a.quadraticCurveTo(941, -3088, 1238, -3260);
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.moveTo(-683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.moveTo(-421, -2734);
      a.quadraticCurveTo(-562, -2713, -683, -2750);
      a.moveTo(-1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.moveTo(-1719, -2618);
      a.lineTo(-1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1395, -905, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.moveTo(-875, -1936);
      a.quadraticCurveTo(-822, -1782, -783, -1568)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10633);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle =
        "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(436, -7172);
      a.quadraticCurveTo(526, -7323, 621, -7444);
      a.moveTo(-84, -5920);
      a.lineTo(-8, -6155);
      a.moveTo(128, -6531);
      a.quadraticCurveTo(192, -6693, 259, -6837);
      a.moveTo(683, -1206);
      a.lineTo(537, -1172);
      a.lineTo(538, -1065);
      a.quadraticCurveTo(536, -876, 594, -692);
      a.lineTo(683, -723);
      a.moveTo(362, -1145);
      a.lineTo(537, -1172);
      a.lineTo(563, -1508);
      a.moveTo(1151, 169);
      a.lineTo(790, -299);
      a.lineTo(643, -220);
      a.moveTo(594, -692);
      a.lineTo(790, -299);
      a.lineTo(945, -361);
      a.moveTo(482, -663);
      a.lineTo(594, -692);
      a.moveTo(813, 958);
      a.quadraticCurveTo(901, 924, 991, 893);
      a.moveTo(387, 1139);
      a.quadraticCurveTo(512, 1078, 641, 1025);
      a.moveTo(-50, 1385);
      a.quadraticCurveTo(33, 1331, 120, 1281);
      a.lineTo(147, 1266);
      a.moveTo(-302, -5223);
      a.lineTo(-203, -5526);
      a.moveTo(-88, -5905);
      a.lineTo(-84, -5920);
      a.moveTo(-614, -4479);
      a.quadraticCurveTo(-526, -4617, -410, -4920);
      a.moveTo(-764, -1206);
      a.lineTo(-724, -996);
      a.lineTo(-522, -965);
      a.moveTo(-997, 123);
      a.lineTo(-818, -377);
      a.lineTo(-905, -421);
      a.moveTo(-818, -377);
      a.lineTo(-779, -541);
      a.quadraticCurveTo(-726, -763, -724, -996);
      a.lineTo(-864, -1005);
      a.moveTo(-818, -377);
      a.lineTo(-643, -281);
      a.moveTo(-484, 1706);
      a.quadraticCurveTo(-405, 1633, -318, 1569);
      a.moveTo(-75, 1401);
      a.lineTo(-50, 1385)
    }]
  }
}

function make_adult_8(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11049);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-18475, -1985);
      a.quadraticCurveTo(-18651, -1895, -18854, -1756);
      a.quadraticCurveTo(-19056, -1615, -19265, -1154);
      a.lineTo(-19265, -1125);
      a.lineTo(-19189, -1144);
      a.quadraticCurveTo(-18880, -1221, -18574, -1358);
      a.quadraticCurveTo(-18609, -1628, -18475, -1985);
      a.closePath();
      a.moveTo(-19576, -1561);
      a.quadraticCurveTo(-19753, -1478, -19926, -1382);
      a.quadraticCurveTo(-20772, -922, -21389, -405);
      a.lineTo(-21224, -418);
      a.quadraticCurveTo(-21184, -441, -21144, -460);
      a.quadraticCurveTo(-20511, -769, -19650, -1013);
      a.quadraticCurveTo(-19729, -1269, -19576, -1561);
      a.closePath();
      a.moveTo(-14568, -3024);
      a.quadraticCurveTo(-15560, -3024, -16272, -2841);
      a.quadraticCurveTo(-17785, -2380, -17753, -2166);
      a.quadraticCurveTo(-18058, -1859, -18118, -1540);
      a.quadraticCurveTo(-17582, -1762, -17010, -1916);
      a.quadraticCurveTo(-16033, -2187, -15012, -2238);
      a.quadraticCurveTo(-13953, -2280, -12945, -2282);
      a.quadraticCurveTo(-12593, -2268, -12273, -2189);
      a.quadraticCurveTo(-11498, -1994, -10778, -1762);
      a.quadraticCurveTo(-9630, -1640, -8682, -1198);
      a.quadraticCurveTo(-8078, -914, -7606, -402);
      a.quadraticCurveTo(-7028, 210, -6565, 798);
      a.quadraticCurveTo(-6390, 1018, -6159, 1109);
      a.quadraticCurveTo(-5857, 878, -5559, 662);
      a.quadraticCurveTo(-4756, 86, -3908, -342);
      a.quadraticCurveTo(-3057, -771, -2161, -1011);
      a.quadraticCurveTo(-3102, -1036, -4015, -1164);
      a.quadraticCurveTo(-4864, -1276, -5705, -1467);
      a.quadraticCurveTo(-6598, -1673, -7474, -1958);
      a.quadraticCurveTo(-8277, -2220, -9139, -2334);
      a.lineTo(-9355, -2359);
      a.lineTo(-9355, -2359);
      a.quadraticCurveTo(-9355, -2359, -9355, -2359);
      a.lineTo(-10825, -2550);
      a.lineTo(-10843, -2552);
      a.lineTo(-11035, -2594);
      a.lineTo(-11591, -2728);
      a.quadraticCurveTo(-13307, -3024, -14568, -3024);
      a.closePath();
      a.moveTo(-9889, -606);
      a.quadraticCurveTo(-8993, 208, -8452, 1059);
      a.quadraticCurveTo(-8373, 1183, -8305, 1311);
      a.quadraticCurveTo(-9307, 770, -10540, 464);
      a.quadraticCurveTo(-11740, 123, -13047, -109);
      a.quadraticCurveTo(-13523, -187, -14004, -187);
      a.quadraticCurveTo(-14345, -187, -14688, -148);
      a.quadraticCurveTo(-14304, 373, -13751, 470);
      a.quadraticCurveTo(-12530, 690, -11440, 1041);
      a.quadraticCurveTo(-10821, 1248, -10117, 1339);
      a.lineTo(-9791, 1453);
      a.lineTo(-9553, 1537);
      a.quadraticCurveTo(-9055, 1673, -8612, 1893);
      a.lineTo(-8502, 1948);
      a.lineTo(-8439, 1975);
      a.quadraticCurveTo(-7938, 2047, -7581, 2371);
      a.lineTo(-7538, 2410);
      a.quadraticCurveTo(-7509, 2424, -7483, 2441);
      a.quadraticCurveTo(-7258, 2563, -7061, 2693);
      a.lineTo(-7023, 2687);
      a.quadraticCurveTo(-6778, 2687, -6557, 2771);
      a.quadraticCurveTo(-6245,
        2582, -5937, 2420);
      a.lineTo(-5832, 2433);
      a.quadraticCurveTo(-5783, 2396, -5601, 2319);
      a.quadraticCurveTo(-5344, 2204, -5327, 2181);
      a.lineTo(-5295, 2139);
      a.lineTo(-5257, 2087);
      a.lineTo(-5257, 2087);
      a.quadraticCurveTo(-5257, 2087, -5257, 2087);
      a.quadraticCurveTo(-4933, 1940, -4616, 1820);
      a.lineTo(-4476, 1796);
      a.lineTo(-4364, 1777);
      a.quadraticCurveTo(-4206, 1757, -4076, 1665);
      a.lineTo(-4024, 1624);
      a.quadraticCurveTo(-4E3, 1622, -3988, 1612);
      a.lineTo(-3988, 1612);
      a.quadraticCurveTo(-3988, 1612, -3988, 1612);
      a.lineTo(-3987, 1611);
      a.quadraticCurveTo(-3670,
        1519, -3364, 1455);
      a.quadraticCurveTo(-3207, 1421, -3053, 1398);
      a.quadraticCurveTo(-3359, 1361, -3641, 1361);
      a.quadraticCurveTo(-4253, 1361, -4752, 1536);
      a.quadraticCurveTo(-5565, 1819, -6289, 2398);
      a.quadraticCurveTo(-6541, 2188, -6817, 2026);
      a.quadraticCurveTo(-6892, 1977, -6971, 1936);
      a.lineTo(-6971, 1936);
      a.lineTo(-6971, 1936);
      a.lineTo(-6981, 1920);
      a.lineTo(-7021, 1858);
      a.lineTo(-7133, 1698);
      a.quadraticCurveTo(-7210, 1589, -7303, 1479);
      a.quadraticCurveTo(-7478, 1256, -7681, 1041);
      a.quadraticCurveTo(-7866, 906, -8014, 714);
      a.lineTo(-8048,
        665);
      a.lineTo(-8201, 517);
      a.lineTo(-8237, 483);
      a.quadraticCurveTo(-8393, 279, -8612, 131);
      a.quadraticCurveTo(-8639, 113, -8669, 94);
      a.quadraticCurveTo(-8675, 85, -8685, 79);
      a.lineTo(-8729, 41);
      a.lineTo(-8933, -131);
      a.lineTo(-9193, -350);
      a.lineTo(-9323, -454);
      a.quadraticCurveTo(-9499, -534, -9695, -569);
      a.lineTo(-9889, -606);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11049);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-18475, -1985);
      a.quadraticCurveTo(-18609, -1628, -18574, -1358);
      a.quadraticCurveTo(-18880, -1221, -19189, -1144);
      a.lineTo(-19265, -1125);
      a.lineTo(-19265, -1154);
      a.quadraticCurveTo(-19056, -1615, -18854, -1756);
      a.quadraticCurveTo(-18651, -1895, -18475, -1985);
      a.closePath();
      a.moveTo(-14568, -3024);
      a.quadraticCurveTo(-13306, -3024, -11591, -2728);
      a.lineTo(-11035, -2594);
      a.lineTo(-10843, -2552);
      a.lineTo(-10825, -2550);
      a.lineTo(-9355, -2359);
      a.lineTo(-9139, -2334);
      a.quadraticCurveTo(-8277, -2220, -7474, -1958);
      a.quadraticCurveTo(-6598, -1673, -5705, -1467);
      a.quadraticCurveTo(-4864, -1276, -4015, -1164);
      a.quadraticCurveTo(-3102, -1036, -2161, -1011);
      a.quadraticCurveTo(-3057, -771, -3908, -342);
      a.quadraticCurveTo(-4756, 86, -5559, 662);
      a.quadraticCurveTo(-5857, 878, -6159, 1109);
      a.quadraticCurveTo(-6390, 1018, -6565, 798);
      a.quadraticCurveTo(-7028, 210, -7606, -402);
      a.quadraticCurveTo(-8078, -914, -8682, -1198);
      a.quadraticCurveTo(-9630, -1640, -10778, -1762);
      a.quadraticCurveTo(-11498, -1994, -12273, -2189);
      a.quadraticCurveTo(-12593, -2268, -12945, -2282);
      a.quadraticCurveTo(-13953, -2280, -15012, -2238);
      a.quadraticCurveTo(-16033, -2187, -17010, -1916);
      a.quadraticCurveTo(-17582, -1762, -18118, -1540);
      a.quadraticCurveTo(-18058, -1859, -17753, -2166);
      a.quadraticCurveTo(-17785, -2380, -16272, -2841);
      a.quadraticCurveTo(-15561, -3024, -14568, -3024);
      a.closePath();
      a.moveTo(-9889, -606);
      a.lineTo(-9695, -569);
      a.quadraticCurveTo(-9499, -534, -9323, -454);
      a.lineTo(-9193, -350);
      a.lineTo(-8933, -131);
      a.lineTo(-8729, 41);
      a.lineTo(-8685, 79);
      a.quadraticCurveTo(-8675, 85, -8669, 94);
      a.quadraticCurveTo(-8639, 113, -8612, 131);
      a.quadraticCurveTo(-8393, 279, -8237, 483);
      a.lineTo(-8201, 517);
      a.lineTo(-8048, 665);
      a.lineTo(-8014,
        714);
      a.quadraticCurveTo(-7866, 906, -7681, 1041);
      a.quadraticCurveTo(-7478, 1256, -7303, 1479);
      a.quadraticCurveTo(-7210, 1589, -7133, 1698);
      a.lineTo(-7021, 1858);
      a.lineTo(-6981, 1920);
      a.lineTo(-6971, 1936);
      a.quadraticCurveTo(-6892, 1977, -6817, 2026);
      a.quadraticCurveTo(-6541, 2188, -6289, 2398);
      a.quadraticCurveTo(-5565, 1819, -4752, 1536);
      a.quadraticCurveTo(-4253, 1361, -3641, 1361);
      a.quadraticCurveTo(-3359, 1361, -3053, 1398);
      a.quadraticCurveTo(-3207, 1421, -3364, 1455);
      a.quadraticCurveTo(-3670, 1519, -3987, 1611);
      a.lineTo(-3988,
        1612);
      a.quadraticCurveTo(-4E3, 1622, -4024, 1624);
      a.lineTo(-4076, 1665);
      a.quadraticCurveTo(-4206, 1757, -4364, 1777);
      a.lineTo(-4476, 1796);
      a.lineTo(-4616, 1820);
      a.quadraticCurveTo(-4933, 1940, -5257, 2087);
      a.lineTo(-5295, 2139);
      a.lineTo(-5327, 2181);
      a.quadraticCurveTo(-5344, 2204, -5601, 2319);
      a.quadraticCurveTo(-5783, 2396, -5832, 2433);
      a.lineTo(-5937, 2420);
      a.quadraticCurveTo(-6245, 2582, -6557, 2771);
      a.quadraticCurveTo(-6778, 2687, -7023, 2687);
      a.lineTo(-7061, 2693);
      a.quadraticCurveTo(-7258, 2563, -7483, 2441);
      a.quadraticCurveTo(-7509,
        2424, -7538, 2410);
      a.lineTo(-7581, 2371);
      a.quadraticCurveTo(-7938, 2047, -8439, 1975);
      a.lineTo(-8502, 1948);
      a.lineTo(-8612, 1893);
      a.quadraticCurveTo(-9055, 1673, -9553, 1537);
      a.lineTo(-9791, 1453);
      a.lineTo(-10117, 1339);
      a.quadraticCurveTo(-10821, 1248, -11440, 1041);
      a.quadraticCurveTo(-12530, 690, -13751, 470);
      a.quadraticCurveTo(-14304, 373, -14688, -148);
      a.quadraticCurveTo(-14345, -187, -14004, -187);
      a.quadraticCurveTo(-13523, -187, -13047, -109);
      a.quadraticCurveTo(-11740, 123, -10540, 464);
      a.quadraticCurveTo(-9307, 770, -8305,
        1311);
      a.quadraticCurveTo(-8373, 1183, -8452, 1059);
      a.quadraticCurveTo(-8993, 208, -9889, -606);
      a.closePath();
      a.moveTo(-13793, -3719);
      a.quadraticCurveTo(-14356, -3719, -14943, -3661);
      a.quadraticCurveTo(-16731, -3438, -17671, -2926);
      a.quadraticCurveTo(-18593, -2420, -18962, -2222);
      a.quadraticCurveTo(-18962, -2222, -18962, -2222);
      a.lineTo(-18962, -2222);
      a.lineTo(-19228, -2082);
      a.quadraticCurveTo(-19564, -1907, -19903, -1719);
      a.quadraticCurveTo(-20992, -1119, -21604, -426);
      a.quadraticCurveTo(-21551, -402, -21458, -402);
      a.quadraticCurveTo(-21426, -402, -21389, -405);
      a.quadraticCurveTo(-20772, -922, -19926, -1382);
      a.quadraticCurveTo(-19753, -1478, -19576, -1561);
      a.lineTo(-19576, -1561);
      a.quadraticCurveTo(-19729, -1269, -19650, -1013);
      a.quadraticCurveTo(-20511, -769, -21144, -460);
      a.quadraticCurveTo(-21184, -441, -21224, -418);
      a.quadraticCurveTo(-21041, -438, -20763, -438);
      a.quadraticCurveTo(-20644, -438, -20507, -434);
      a.lineTo(-18243, -251);
      a.quadraticCurveTo(-16964, -203, -14873, 524);
      a.quadraticCurveTo(-12840, 1203, -11234, 1569);
      a.quadraticCurveTo(-8931, 2105, -7895, 2685);
      a.quadraticCurveTo(-7659, 2818, -7287, 3118);
      a.quadraticCurveTo(-6995, 3349, -6774, 3443);
      a.lineTo(-6252, 3027);
      a.quadraticCurveTo(-5915, 2763, -5657, 2602);
      a.quadraticCurveTo(-4865, 2115, -3768, 1911);
      a.quadraticCurveTo(-3412, 1842, -3055, 1812);
      a.quadraticCurveTo(-2705, 1779, -2351, 1779);
      a.quadraticCurveTo(-2213, 1779, -2074, 1784);
      a.lineTo(-1560, 1820);
      a.quadraticCurveTo(-995, 1882, -646, 1984);
      a.quadraticCurveTo(-447, 1572, -347, 1356);
      a.quadraticCurveTo(-143, 921, -62, 489);
      a.quadraticCurveTo(52, -113, -84, -632);
      a.quadraticCurveTo(-255, -1281, -633, -1719);
      a.quadraticCurveTo(-806, -1759, -888, -1759);
      a.quadraticCurveTo(-902, -1759, -913, -1758);
      a.lineTo(-1273, -1722);
      a.lineTo(-1645, -1684);
      a.lineTo(-1727, -1674);
      a.quadraticCurveTo(-2348, -1605, -2894, -1588);
      a.quadraticCurveTo(-3063, -1583, -3231, -1583);
      a.quadraticCurveTo(-5403, -1583, -7586, -2491);
      a.lineTo(-7785, -2570);
      a.lineTo(-7875, -2553);
      a.lineTo(-8011, -2532);
      a.quadraticCurveTo(-8032, -2531, -8053, -2531);
      a.quadraticCurveTo(-8318, -2531, -8606, -2647);
      a.quadraticCurveTo(-9953, -3179, -11547, -3467);
      a.quadraticCurveTo(-12619, -3719, -13793, -3719);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11049);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-10825, -2550);
      a.lineTo(-10843, -2552);
      a.moveTo(-12945, -2282);
      a.lineTo(-13202, -2354);
      a.moveTo(-9779, -2444);
      a.quadraticCurveTo(-10312, -2535, -10825, -2550);
      a.moveTo(-2161, -1011);
      a.lineTo(-2153, -1012);
      a.lineTo(-2127, -1018);
      a.lineTo(-2066, -1032);
      a.moveTo(-2011, -1043);
      a.quadraticCurveTo(-1891, -1066, -1787, -1096);
      a.moveTo(-12945, -2282);
      a.lineTo(-12854, -2254);
      a.moveTo(-12098, -1995);
      a.quadraticCurveTo(-12308, -2077, -12529, -2151);
      a.moveTo(-11518, -1657);
      a.lineTo(-11499, -1688);
      a.lineTo(-11464, -1727);
      a.quadraticCurveTo(-11625, -1803, -11789, -1871);
      a.moveTo(-11410, -1782);
      a.lineTo(-11464, -1727);
      a.lineTo(-11413, -1704);
      a.lineTo(-11177, -1586);
      a.moveTo(-10222, -1268);
      a.quadraticCurveTo(-10292, -1207, -10334, -1138);
      a.quadraticCurveTo(-10116, -1014, -9905, -874);
      a.moveTo(-10334, -1138);
      a.lineTo(-10335, -1138);
      a.quadraticCurveTo(-10360, -1090, -10385, -1053);
      a.moveTo(-10334, -1138);
      a.quadraticCurveTo(-10580, -1279, -10837, -1404);
      a.moveTo(-8519, -2128);
      a.quadraticCurveTo(-8943, -2268, -9355, -2359);
      a.moveTo(-9193, -350);
      a.lineTo(-9232, -314);
      a.lineTo(-9263, -290);
      a.moveTo(-8933, -131);
      a.quadraticCurveTo(-8960, -108, -8991, -88);
      a.quadraticCurveTo(-9020, -63, -9052, -53);
      a.moveTo(-9193, -350);
      a.lineTo(-8933, -131);
      a.quadraticCurveTo(-8875, -178, -8829, -232);
      a.moveTo(-9122, -424);
      a.quadraticCurveTo(-9154, -385, -9193, -350);
      a.lineTo(-9323, -454);
      a.moveTo(-10117, 1339);
      a.quadraticCurveTo(-10231, 1299, -10349, 1263);
      a.lineTo(-10961, 1060);
      a.moveTo(-9323, -454);
      a.quadraticCurveTo(-9415, -527, -9514, -600);
      a.moveTo(-7190, -1576);
      a.quadraticCurveTo(-7340, -1651, -7493, -1722);
      a.quadraticCurveTo(-7750, -1842, -8022, -1949);
      a.moveTo(-3931, -862);
      a.quadraticCurveTo(-3691, -855, -3470, -871);
      a.lineTo(-3167, -896);
      a.moveTo(-5337, -1069);
      a.quadraticCurveTo(-4798, -939, -4335, -889);
      a.moveTo(-2639, -949);
      a.lineTo(-2161, -1011);
      a.moveTo(-6544, -1427);
      a.quadraticCurveTo(-6096, -1274, -5695, -1161);
      a.moveTo(-1586, 1319);
      a.lineTo(-1975, 1305);
      a.quadraticCurveTo(-2298, 1304, -2644, 1342);
      a.moveTo(-4489, 1774);
      a.lineTo(-4616, 1820);
      a.moveTo(-4024, 1624);
      a.quadraticCurveTo(-4E3, 1622, -3988, 1612);
      a.quadraticCurveTo(-4056, 1628, -4123, 1653);
      a.moveTo(-3053, 1398);
      a.quadraticCurveTo(-3207, 1421, -3364, 1455);
      a.quadraticCurveTo(-3670, 1519, -3987, 1611);
      a.lineTo(-3988, 1612);
      a.moveTo(-5257, 2087);
      a.quadraticCurveTo(-5346, 2123, -5431, 2166);
      a.moveTo(-5937, 2420);
      a.quadraticCurveTo(-6245,
        2582, -6557, 2771);
      a.quadraticCurveTo(-6587, 2786, -6613, 2804);
      a.moveTo(-5858, 2379);
      a.lineTo(-5937, 2420);
      a.moveTo(-6971, 1936);
      a.lineTo(-6878, 2086);
      a.moveTo(-4616, 1820);
      a.quadraticCurveTo(-4933, 1940, -5257, 2087);
      a.moveTo(-7681, 1041);
      a.lineTo(-7812, 899);
      a.moveTo(-7133, 1698);
      a.quadraticCurveTo(-7210, 1589, -7303, 1479);
      a.quadraticCurveTo(-7478, 1256, -7681, 1041);
      a.moveTo(-7133, 1698);
      a.quadraticCurveTo(-7170, 1705, -7206, 1719);
      a.lineTo(-7236, 1725);
      a.moveTo(-7021, 1858);
      a.lineTo(-7118, 1877);
      a.lineTo(-7134, 1889);
      a.moveTo(-6971,
        1936);
      a.lineTo(-6981, 1920);
      a.lineTo(-7021, 1858);
      a.lineTo(-7133, 1698);
      a.quadraticCurveTo(-7079, 1684, -7028, 1681);
      a.moveTo(-7021, 1858);
      a.lineTo(-6957, 1848);
      a.moveTo(-8237, 483);
      a.lineTo(-8370, 360);
      a.moveTo(-8669, 94);
      a.quadraticCurveTo(-8675, 85, -8685, 79);
      a.lineTo(-8729, 41);
      a.lineTo(-8933, -131);
      a.moveTo(-8201, 517);
      a.lineTo(-8224, 538);
      a.lineTo(-8241, 556);
      a.moveTo(-8201, 517);
      a.lineTo(-8237, 483);
      a.moveTo(-8128, 456);
      a.lineTo(-8201, 517);
      a.lineTo(-8048, 665);
      a.moveTo(-9038, 1730);
      a.quadraticCurveTo(-9284, 1630, -9553, 1537);
      a.lineTo(-9791, 1453);
      a.moveTo(-8502, 1948);
      a.quadraticCurveTo(-8630, 1892, -8761, 1839);
      a.moveTo(-7483, 2441);
      a.quadraticCurveTo(-7258, 2563, -7061, 2693);
      a.lineTo(-6940, 2772);
      a.moveTo(-7538, 2410);
      a.quadraticCurveTo(-7620, 2363, -7710, 2320);
      a.moveTo(-8089, 2133);
      a.quadraticCurveTo(-8256, 2052, -8439, 1975);
      a.moveTo(-11305, 947);
      a.quadraticCurveTo(-11688, 822, -12122, 692);
      a.moveTo(-16971, -474);
      a.lineTo(-17451, -522);
      a.moveTo(-13579, -2451);
      a.quadraticCurveTo(-13988, -2547, -14420, -2622);
      a.moveTo(-14775, -2677);
      a.lineTo(-15407, -2750);
      a.moveTo(-14860, -87);
      a.quadraticCurveTo(-15242, -180, -15643, -261);
      a.moveTo(-16033, -335);
      a.lineTo(-16645, -432);
      a.moveTo(-13645, 243);
      a.quadraticCurveTo(-14017, 130, -14413, 25);
      a.moveTo(-12472, 588);
      a.lineTo(-13196, 374)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11049);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-11591, -2728);
      a.quadraticCurveTo(-14656, -3257, -16272, -2841);
      a.quadraticCurveTo(-17785, -2380, -17753, -2166);
      a.quadraticCurveTo(-18058, -1859, -18118, -1540);
      a.moveTo(-21224, -418);
      a.quadraticCurveTo(-20962, -446, -20507, -434);
      a.lineTo(-18243, -251);
      a.quadraticCurveTo(-16964, -203, -14873, 524);
      a.quadraticCurveTo(-12840, 1203, -11234, 1569);
      a.quadraticCurveTo(-8931, 2105, -7895, 2685);
      a.quadraticCurveTo(-7659, 2818, -7287, 3118);
      a.quadraticCurveTo(-6995, 3349, -6774, 3443);
      a.lineTo(-6252, 3027);
      a.quadraticCurveTo(-5915, 2763, -5657, 2602);
      a.quadraticCurveTo(-4865, 2115, -3768, 1911);
      a.quadraticCurveTo(-3412, 1842, -3055, 1812);
      a.quadraticCurveTo(-2568, 1766, -2074, 1784);
      a.lineTo(-1560, 1820);
      a.quadraticCurveTo(-995, 1882, -646, 1984);
      a.quadraticCurveTo(-447, 1572, -347, 1356);
      a.quadraticCurveTo(-143, 921, -62, 489);
      a.quadraticCurveTo(52, -113, -84, -632);
      a.quadraticCurveTo(-255, -1281, -633, -1719);
      a.quadraticCurveTo(-836, -1766, -913, -1758);
      a.lineTo(-1273, -1722);
      a.lineTo(-1645, -1684);
      a.lineTo(-1727, -1674);
      a.quadraticCurveTo(-2348, -1605, -2894, -1588);
      a.quadraticCurveTo(-5234, -1512, -7586, -2491);
      a.lineTo(-7785, -2570);
      a.lineTo(-7875, -2553);
      a.lineTo(-8011, -2532);
      a.quadraticCurveTo(-8295, -2522, -8606, -2647);
      a.quadraticCurveTo(-9953, -3179, -11547, -3467);
      a.quadraticCurveTo(-13133, -3840, -14943, -3661);
      a.quadraticCurveTo(-16731, -3438, -17671, -2926);
      a.quadraticCurveTo(-18593, -2420, -18962, -2222);
      a.quadraticCurveTo(-19411, -1878, -19576, -1561);
      a.quadraticCurveTo(-19729, -1269, -19650, -1013);
      a.quadraticCurveTo(-19608, -885, -19509, -756);
      a.quadraticCurveTo(-19349, -557, -19036, -518);
      a.quadraticCurveTo(-19100, -619, -19191, -707);
      a.quadraticCurveTo(-19278, -792, -19265, -1125);
      a.lineTo(-19265, -1154);
      a.quadraticCurveTo(-19056, -1615, -18854, -1756);
      a.quadraticCurveTo(-18651, -1895, -18475, -1985);
      a.quadraticCurveTo(-18609, -1628, -18574, -1358);
      a.quadraticCurveTo(-18511, -918, -18020, -621);
      a.quadraticCurveTo(-17902, -548, -17767, -507);
      a.quadraticCurveTo(-18207, -1080, -18118, -1540);
      a.moveTo(-21224, -418);
      a.lineTo(-21389, -405);
      a.quadraticCurveTo(-21533, -394, -21604, -426);
      a.quadraticCurveTo(-20992, -1119, -19903, -1719);
      a.quadraticCurveTo(-19564, -1907, -19228, -2082);
      a.lineTo(-18962, -2222)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 15497, 11049);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2066, -1032);
      a.lineTo(-2011, -1043)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11049);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-18475, -1985);
      a.quadraticCurveTo(-18651, -1895, -18854, -1756);
      a.quadraticCurveTo(-19056, -1615, -19265, -1154);
      a.lineTo(-19265, -1125);
      a.lineTo(-19189, -1144);
      a.quadraticCurveTo(-18880, -1221, -18574, -1358);
      a.quadraticCurveTo(-18609, -1628, -18475, -1985);
      a.closePath();
      a.moveTo(-19576, -1561);
      a.quadraticCurveTo(-19753, -1478, -19926, -1382);
      a.quadraticCurveTo(-20772, -922, -21389, -405);
      a.lineTo(-21224, -418);
      a.quadraticCurveTo(-21184, -441, -21144, -460);
      a.quadraticCurveTo(-20511, -769, -19650, -1013);
      a.quadraticCurveTo(-19729, -1269, -19576, -1561);
      a.closePath();
      a.moveTo(-14568, -3024);
      a.quadraticCurveTo(-15560, -3024, -16272, -2841);
      a.quadraticCurveTo(-17785, -2380, -17753, -2166);
      a.quadraticCurveTo(-18058, -1859, -18118, -1540);
      a.quadraticCurveTo(-17582, -1762, -17010, -1916);
      a.quadraticCurveTo(-16033, -2187, -15012, -2238);
      a.quadraticCurveTo(-13953, -2280, -12945, -2282);
      a.quadraticCurveTo(-12593, -2268, -12273, -2189);
      a.quadraticCurveTo(-11498, -1994, -10778, -1762);
      a.quadraticCurveTo(-9630, -1640, -8682, -1198);
      a.quadraticCurveTo(-8078, -914, -7606, -402);
      a.quadraticCurveTo(-7028, 210, -6565, 798);
      a.quadraticCurveTo(-6390, 1018, -6159, 1109);
      a.quadraticCurveTo(-5857, 878, -5559, 662);
      a.quadraticCurveTo(-4756, 86, -3908, -342);
      a.quadraticCurveTo(-3057, -771, -2161, -1011);
      a.quadraticCurveTo(-3102, -1036, -4015, -1164);
      a.quadraticCurveTo(-4864, -1276, -5705, -1467);
      a.quadraticCurveTo(-6598, -1673, -7474, -1958);
      a.quadraticCurveTo(-8277, -2220, -9139, -2334);
      a.lineTo(-9355, -2359);
      a.lineTo(-9355, -2359);
      a.quadraticCurveTo(-9355, -2359, -9355, -2359);
      a.lineTo(-10825, -2550);
      a.lineTo(-10843, -2552);
      a.lineTo(-11035, -2594);
      a.lineTo(-11591, -2728);
      a.quadraticCurveTo(-13307, -3024, -14568, -3024);
      a.closePath();
      a.moveTo(-9889, -606);
      a.quadraticCurveTo(-8993, 208, -8452, 1059);
      a.quadraticCurveTo(-8373, 1183, -8305, 1311);
      a.quadraticCurveTo(-9307, 770, -10540, 464);
      a.quadraticCurveTo(-11740, 123, -13047, -109);
      a.quadraticCurveTo(-13523, -187, -14004, -187);
      a.quadraticCurveTo(-14345, -187, -14688, -148);
      a.quadraticCurveTo(-14304, 373, -13751, 470);
      a.quadraticCurveTo(-12530, 690, -11440, 1041);
      a.quadraticCurveTo(-10821, 1248, -10117, 1339);
      a.lineTo(-9791, 1453);
      a.lineTo(-9553, 1537);
      a.quadraticCurveTo(-9055, 1673, -8612, 1893);
      a.lineTo(-8502, 1948);
      a.lineTo(-8439,
        1975);
      a.quadraticCurveTo(-7938, 2047, -7581, 2371);
      a.lineTo(-7538, 2410);
      a.quadraticCurveTo(-7509, 2424, -7483, 2441);
      a.quadraticCurveTo(-7258, 2563, -7061, 2693);
      a.lineTo(-7023, 2687);
      a.quadraticCurveTo(-6778, 2687, -6557, 2771);
      a.quadraticCurveTo(-6245, 2582, -5937, 2420);
      a.lineTo(-5832, 2433);
      a.quadraticCurveTo(-5783, 2396, -5601, 2319);
      a.quadraticCurveTo(-5344, 2204, -5327, 2181);
      a.lineTo(-5295, 2139);
      a.lineTo(-5257, 2087);
      a.lineTo(-5257, 2087);
      a.quadraticCurveTo(-5257, 2087, -5257, 2087);
      a.quadraticCurveTo(-4933, 1940, -4616,
        1820);
      a.lineTo(-4476, 1796);
      a.lineTo(-4364, 1777);
      a.quadraticCurveTo(-4206, 1757, -4076, 1665);
      a.lineTo(-4024, 1624);
      a.quadraticCurveTo(-4E3, 1622, -3988, 1612);
      a.lineTo(-3988, 1612);
      a.quadraticCurveTo(-3988, 1612, -3988, 1612);
      a.lineTo(-3987, 1611);
      a.quadraticCurveTo(-3670, 1519, -3364, 1455);
      a.quadraticCurveTo(-3207, 1421, -3053, 1398);
      a.quadraticCurveTo(-3359, 1361, -3641, 1361);
      a.quadraticCurveTo(-4253, 1361, -4752, 1536);
      a.quadraticCurveTo(-5565, 1819, -6289, 2398);
      a.quadraticCurveTo(-6541, 2188, -6817, 2026);
      a.quadraticCurveTo(-6892,
        1977, -6971, 1936);
      a.lineTo(-6971, 1936);
      a.lineTo(-6971, 1936);
      a.lineTo(-6981, 1920);
      a.lineTo(-7021, 1858);
      a.lineTo(-7133, 1698);
      a.quadraticCurveTo(-7210, 1589, -7303, 1479);
      a.quadraticCurveTo(-7478, 1256, -7681, 1041);
      a.quadraticCurveTo(-7866, 906, -8014, 714);
      a.lineTo(-8048, 665);
      a.lineTo(-8201, 517);
      a.lineTo(-8237, 483);
      a.quadraticCurveTo(-8393, 279, -8612, 131);
      a.quadraticCurveTo(-8639, 113, -8669, 94);
      a.quadraticCurveTo(-8675, 85, -8685, 79);
      a.lineTo(-8729, 41);
      a.lineTo(-8933, -131);
      a.lineTo(-9193, -350);
      a.lineTo(-9323, -454);
      a.quadraticCurveTo(-9499, -534, -9695, -569);
      a.lineTo(-9889, -606);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11049);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-18475, -1985);
      a.quadraticCurveTo(-18609, -1628, -18574, -1358);
      a.quadraticCurveTo(-18880, -1221, -19189, -1144);
      a.lineTo(-19265, -1125);
      a.lineTo(-19265, -1154);
      a.quadraticCurveTo(-19056, -1615, -18854, -1756);
      a.quadraticCurveTo(-18651, -1895, -18475, -1985);
      a.closePath();
      a.moveTo(-14568, -3024);
      a.quadraticCurveTo(-13306, -3024, -11591, -2728);
      a.lineTo(-11035, -2594);
      a.lineTo(-10843, -2552);
      a.lineTo(-10825, -2550);
      a.lineTo(-9355, -2359);
      a.lineTo(-9139, -2334);
      a.quadraticCurveTo(-8277, -2220, -7474, -1958);
      a.quadraticCurveTo(-6598, -1673, -5705, -1467);
      a.quadraticCurveTo(-4864, -1276, -4015, -1164);
      a.quadraticCurveTo(-3102, -1036, -2161, -1011);
      a.quadraticCurveTo(-3057, -771, -3908, -342);
      a.quadraticCurveTo(-4756, 86, -5559, 662);
      a.quadraticCurveTo(-5857, 878, -6159, 1109);
      a.quadraticCurveTo(-6390, 1018, -6565, 798);
      a.quadraticCurveTo(-7028, 210, -7606, -402);
      a.quadraticCurveTo(-8078, -914, -8682, -1198);
      a.quadraticCurveTo(-9630, -1640, -10778, -1762);
      a.quadraticCurveTo(-11498, -1994, -12273, -2189);
      a.quadraticCurveTo(-12593, -2268, -12945, -2282);
      a.quadraticCurveTo(-13953, -2280, -15012, -2238);
      a.quadraticCurveTo(-16033, -2187, -17010, -1916);
      a.quadraticCurveTo(-17582, -1762, -18118, -1540);
      a.quadraticCurveTo(-18058, -1859, -17753, -2166);
      a.quadraticCurveTo(-17785, -2380, -16272, -2841);
      a.quadraticCurveTo(-15561, -3024, -14568, -3024);
      a.closePath();
      a.moveTo(-9889, -606);
      a.lineTo(-9695, -569);
      a.quadraticCurveTo(-9499, -534, -9323, -454);
      a.lineTo(-9193, -350);
      a.lineTo(-8933, -131);
      a.lineTo(-8729, 41);
      a.lineTo(-8685, 79);
      a.quadraticCurveTo(-8675, 85, -8669, 94);
      a.quadraticCurveTo(-8639, 113, -8612, 131);
      a.quadraticCurveTo(-8393, 279, -8237, 483);
      a.lineTo(-8201, 517);
      a.lineTo(-8048, 665);
      a.lineTo(-8014, 714);
      a.quadraticCurveTo(-7866, 906, -7681, 1041);
      a.quadraticCurveTo(-7478, 1256, -7303, 1479);
      a.quadraticCurveTo(-7210, 1589, -7133, 1698);
      a.lineTo(-7021, 1858);
      a.lineTo(-6981, 1920);
      a.lineTo(-6971, 1936);
      a.quadraticCurveTo(-6892, 1977, -6817, 2026);
      a.quadraticCurveTo(-6541, 2188, -6289, 2398);
      a.quadraticCurveTo(-5565, 1819, -4752, 1536);
      a.quadraticCurveTo(-4253, 1361, -3641, 1361);
      a.quadraticCurveTo(-3359, 1361, -3053, 1398);
      a.quadraticCurveTo(-3207, 1421, -3364, 1455);
      a.quadraticCurveTo(-3670, 1519, -3987, 1611);
      a.lineTo(-3988, 1612);
      a.quadraticCurveTo(-4E3, 1622, -4024, 1624);
      a.lineTo(-4076, 1665);
      a.quadraticCurveTo(-4206, 1757, -4364, 1777);
      a.lineTo(-4476, 1796);
      a.lineTo(-4616, 1820);
      a.quadraticCurveTo(-4933, 1940, -5257, 2087);
      a.lineTo(-5295, 2139);
      a.lineTo(-5327, 2181);
      a.quadraticCurveTo(-5344, 2204, -5601, 2319);
      a.quadraticCurveTo(-5783, 2396, -5832, 2433);
      a.lineTo(-5937, 2420);
      a.quadraticCurveTo(-6245, 2582, -6557, 2771);
      a.quadraticCurveTo(-6778, 2687, -7023, 2687);
      a.lineTo(-7061, 2693);
      a.quadraticCurveTo(-7258, 2563, -7483, 2441);
      a.quadraticCurveTo(-7509, 2424, -7538, 2410);
      a.lineTo(-7581, 2371);
      a.quadraticCurveTo(-7938, 2047, -8439, 1975);
      a.lineTo(-8502, 1948);
      a.lineTo(-8612, 1893);
      a.quadraticCurveTo(-9055, 1673, -9553, 1537);
      a.lineTo(-9791, 1453);
      a.lineTo(-10117, 1339);
      a.quadraticCurveTo(-10821,
        1248, -11440, 1041);
      a.quadraticCurveTo(-12530, 690, -13751, 470);
      a.quadraticCurveTo(-14304, 373, -14688, -148);
      a.quadraticCurveTo(-14345, -187, -14004, -187);
      a.quadraticCurveTo(-13523, -187, -13047, -109);
      a.quadraticCurveTo(-11740, 123, -10540, 464);
      a.quadraticCurveTo(-9307, 770, -8305, 1311);
      a.quadraticCurveTo(-8373, 1183, -8452, 1059);
      a.quadraticCurveTo(-8993, 208, -9889, -606);
      a.closePath();
      a.moveTo(-13793, -3719);
      a.quadraticCurveTo(-14356, -3719, -14943, -3661);
      a.quadraticCurveTo(-16731, -3438, -17671, -2926);
      a.quadraticCurveTo(-18593, -2420, -18962, -2222);
      a.quadraticCurveTo(-18962, -2222, -18962, -2222);
      a.lineTo(-18962, -2222);
      a.lineTo(-19228, -2082);
      a.quadraticCurveTo(-19564, -1907, -19903, -1719);
      a.quadraticCurveTo(-20992, -1119, -21604, -426);
      a.quadraticCurveTo(-21551, -402, -21458, -402);
      a.quadraticCurveTo(-21426, -402, -21389, -405);
      a.quadraticCurveTo(-20772, -922, -19926, -1382);
      a.quadraticCurveTo(-19753, -1478, -19576, -1561);
      a.lineTo(-19576, -1561);
      a.quadraticCurveTo(-19729, -1269, -19650, -1013);
      a.quadraticCurveTo(-20511, -769, -21144, -460);
      a.quadraticCurveTo(-21184, -441, -21224, -418);
      a.quadraticCurveTo(-21041, -438, -20763, -438);
      a.quadraticCurveTo(-20644, -438, -20507, -434);
      a.lineTo(-18243, -251);
      a.quadraticCurveTo(-16964, -203, -14873, 524);
      a.quadraticCurveTo(-12840, 1203, -11234, 1569);
      a.quadraticCurveTo(-8931, 2105, -7895, 2685);
      a.quadraticCurveTo(-7659, 2818, -7287, 3118);
      a.quadraticCurveTo(-6995, 3349, -6774, 3443);
      a.lineTo(-6252, 3027);
      a.quadraticCurveTo(-5915, 2763, -5657, 2602);
      a.quadraticCurveTo(-4865, 2115, -3768, 1911);
      a.quadraticCurveTo(-3412, 1842, -3055, 1812);
      a.quadraticCurveTo(-2705,
        1779, -2351, 1779);
      a.quadraticCurveTo(-2213, 1779, -2074, 1784);
      a.lineTo(-1560, 1820);
      a.quadraticCurveTo(-995, 1882, -646, 1984);
      a.quadraticCurveTo(-447, 1572, -347, 1356);
      a.quadraticCurveTo(-143, 921, -62, 489);
      a.quadraticCurveTo(52, -113, -84, -632);
      a.quadraticCurveTo(-255, -1281, -633, -1719);
      a.quadraticCurveTo(-806, -1759, -888, -1759);
      a.quadraticCurveTo(-902, -1759, -913, -1758);
      a.lineTo(-1273, -1722);
      a.lineTo(-1645, -1684);
      a.lineTo(-1727, -1674);
      a.quadraticCurveTo(-2348, -1605, -2894, -1588);
      a.quadraticCurveTo(-3063, -1583, -3231, -1583);
      a.quadraticCurveTo(-5403, -1583, -7586, -2491);
      a.lineTo(-7785, -2570);
      a.lineTo(-7875, -2553);
      a.lineTo(-8011, -2532);
      a.quadraticCurveTo(-8032, -2531, -8053, -2531);
      a.quadraticCurveTo(-8318, -2531, -8606, -2647);
      a.quadraticCurveTo(-9953, -3179, -11547, -3467);
      a.quadraticCurveTo(-12619, -3719, -13793, -3719);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11049);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin =
        "round";
      a.beginPath();
      a.moveTo(-10825, -2550);
      a.lineTo(-10843, -2552);
      a.moveTo(-12945, -2282);
      a.lineTo(-13202, -2354);
      a.moveTo(-9779, -2444);
      a.quadraticCurveTo(-10312, -2535, -10825, -2550);
      a.moveTo(-2161, -1011);
      a.lineTo(-2153, -1012);
      a.lineTo(-2127, -1018);
      a.lineTo(-2066, -1032);
      a.moveTo(-2011, -1043);
      a.quadraticCurveTo(-1891, -1066, -1787, -1096);
      a.moveTo(-12945, -2282);
      a.lineTo(-12854, -2254);
      a.moveTo(-12098, -1995);
      a.quadraticCurveTo(-12308, -2077, -12529, -2151);
      a.moveTo(-11518, -1657);
      a.lineTo(-11499, -1688);
      a.lineTo(-11464, -1727);
      a.quadraticCurveTo(-11625, -1803, -11789, -1871);
      a.moveTo(-11410, -1782);
      a.lineTo(-11464, -1727);
      a.lineTo(-11413, -1704);
      a.lineTo(-11177, -1586);
      a.moveTo(-10222, -1268);
      a.quadraticCurveTo(-10292, -1207, -10334, -1138);
      a.quadraticCurveTo(-10116, -1014, -9905, -874);
      a.moveTo(-10334, -1138);
      a.lineTo(-10335, -1138);
      a.quadraticCurveTo(-10360, -1090, -10385, -1053);
      a.moveTo(-10334, -1138);
      a.quadraticCurveTo(-10580, -1279, -10837, -1404);
      a.moveTo(-8519, -2128);
      a.quadraticCurveTo(-8943, -2268, -9355, -2359);
      a.moveTo(-9193, -350);
      a.lineTo(-9232, -314);
      a.lineTo(-9263, -290);
      a.moveTo(-8933, -131);
      a.quadraticCurveTo(-8960, -108, -8991, -88);
      a.quadraticCurveTo(-9020, -63, -9052, -53);
      a.moveTo(-9193, -350);
      a.lineTo(-8933, -131);
      a.quadraticCurveTo(-8875, -178, -8829, -232);
      a.moveTo(-9122, -424);
      a.quadraticCurveTo(-9154, -385, -9193, -350);
      a.lineTo(-9323, -454);
      a.moveTo(-10117, 1339);
      a.quadraticCurveTo(-10231, 1299, -10349, 1263);
      a.lineTo(-10961, 1060);
      a.moveTo(-9323, -454);
      a.quadraticCurveTo(-9415, -527, -9514, -600);
      a.moveTo(-7190, -1576);
      a.quadraticCurveTo(-7340, -1651, -7493, -1722);
      a.quadraticCurveTo(-7750, -1842, -8022, -1949);
      a.moveTo(-3931, -862);
      a.quadraticCurveTo(-3691, -855, -3470, -871);
      a.lineTo(-3167, -896);
      a.moveTo(-5337, -1069);
      a.quadraticCurveTo(-4798, -939, -4335, -889);
      a.moveTo(-2639, -949);
      a.lineTo(-2161, -1011);
      a.moveTo(-6544, -1427);
      a.quadraticCurveTo(-6096, -1274, -5695, -1161);
      a.moveTo(-1586, 1319);
      a.lineTo(-1975, 1305);
      a.quadraticCurveTo(-2298, 1304, -2644, 1342);
      a.moveTo(-4489, 1774);
      a.lineTo(-4616, 1820);
      a.moveTo(-4024, 1624);
      a.quadraticCurveTo(-4E3, 1622, -3988,
        1612);
      a.quadraticCurveTo(-4056, 1628, -4123, 1653);
      a.moveTo(-3053, 1398);
      a.quadraticCurveTo(-3207, 1421, -3364, 1455);
      a.quadraticCurveTo(-3670, 1519, -3987, 1611);
      a.lineTo(-3988, 1612);
      a.moveTo(-5257, 2087);
      a.quadraticCurveTo(-5346, 2123, -5431, 2166);
      a.moveTo(-5937, 2420);
      a.quadraticCurveTo(-6245, 2582, -6557, 2771);
      a.quadraticCurveTo(-6587, 2786, -6613, 2804);
      a.moveTo(-5858, 2379);
      a.lineTo(-5937, 2420);
      a.moveTo(-6971, 1936);
      a.lineTo(-6878, 2086);
      a.moveTo(-4616, 1820);
      a.quadraticCurveTo(-4933, 1940, -5257, 2087);
      a.moveTo(-7681,
        1041);
      a.lineTo(-7812, 899);
      a.moveTo(-7133, 1698);
      a.quadraticCurveTo(-7210, 1589, -7303, 1479);
      a.quadraticCurveTo(-7478, 1256, -7681, 1041);
      a.moveTo(-7133, 1698);
      a.quadraticCurveTo(-7170, 1705, -7206, 1719);
      a.lineTo(-7236, 1725);
      a.moveTo(-7021, 1858);
      a.lineTo(-7118, 1877);
      a.lineTo(-7134, 1889);
      a.moveTo(-6971, 1936);
      a.lineTo(-6981, 1920);
      a.lineTo(-7021, 1858);
      a.lineTo(-7133, 1698);
      a.quadraticCurveTo(-7079, 1684, -7028, 1681);
      a.moveTo(-7021, 1858);
      a.lineTo(-6957, 1848);
      a.moveTo(-8237, 483);
      a.lineTo(-8370, 360);
      a.moveTo(-8669,
        94);
      a.quadraticCurveTo(-8675, 85, -8685, 79);
      a.lineTo(-8729, 41);
      a.lineTo(-8933, -131);
      a.moveTo(-8201, 517);
      a.lineTo(-8224, 538);
      a.lineTo(-8241, 556);
      a.moveTo(-8201, 517);
      a.lineTo(-8237, 483);
      a.moveTo(-8128, 456);
      a.lineTo(-8201, 517);
      a.lineTo(-8048, 665);
      a.moveTo(-9038, 1730);
      a.quadraticCurveTo(-9284, 1630, -9553, 1537);
      a.lineTo(-9791, 1453);
      a.moveTo(-8502, 1948);
      a.quadraticCurveTo(-8630, 1892, -8761, 1839);
      a.moveTo(-7483, 2441);
      a.quadraticCurveTo(-7258, 2563, -7061, 2693);
      a.lineTo(-6940, 2772);
      a.moveTo(-7538, 2410);
      a.quadraticCurveTo(-7620,
        2363, -7710, 2320);
      a.moveTo(-8089, 2133);
      a.quadraticCurveTo(-8256, 2052, -8439, 1975);
      a.moveTo(-11305, 947);
      a.quadraticCurveTo(-11688, 822, -12122, 692);
      a.moveTo(-16971, -474);
      a.lineTo(-17451, -522);
      a.moveTo(-13579, -2451);
      a.quadraticCurveTo(-13988, -2547, -14420, -2622);
      a.moveTo(-14775, -2677);
      a.lineTo(-15407, -2750);
      a.moveTo(-14860, -87);
      a.quadraticCurveTo(-15242, -180, -15643, -261);
      a.moveTo(-16033, -335);
      a.lineTo(-16645, -432);
      a.moveTo(-13645, 243);
      a.quadraticCurveTo(-14017, 130, -14413, 25);
      a.moveTo(-12472, 588);
      a.lineTo(-13196,
        374)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11049);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-11591, -2728);
      a.quadraticCurveTo(-14656, -3257, -16272, -2841);
      a.quadraticCurveTo(-17785, -2380, -17753, -2166);
      a.quadraticCurveTo(-18058, -1859, -18118, -1540);
      a.moveTo(-21224, -418);
      a.quadraticCurveTo(-20962, -446, -20507, -434);
      a.lineTo(-18243, -251);
      a.quadraticCurveTo(-16964, -203, -14873, 524);
      a.quadraticCurveTo(-12840, 1203, -11234, 1569);
      a.quadraticCurveTo(-8931, 2105, -7895, 2685);
      a.quadraticCurveTo(-7659, 2818, -7287, 3118);
      a.quadraticCurveTo(-6995, 3349, -6774, 3443);
      a.lineTo(-6252, 3027);
      a.quadraticCurveTo(-5915, 2763, -5657, 2602);
      a.quadraticCurveTo(-4865, 2115, -3768, 1911);
      a.quadraticCurveTo(-3412, 1842, -3055, 1812);
      a.quadraticCurveTo(-2568, 1766, -2074, 1784);
      a.lineTo(-1560, 1820);
      a.quadraticCurveTo(-995, 1882, -646, 1984);
      a.quadraticCurveTo(-447, 1572, -347, 1356);
      a.quadraticCurveTo(-143, 921, -62, 489);
      a.quadraticCurveTo(52, -113, -84, -632);
      a.quadraticCurveTo(-255, -1281, -633, -1719);
      a.quadraticCurveTo(-836, -1766, -913, -1758);
      a.lineTo(-1273, -1722);
      a.lineTo(-1645, -1684);
      a.lineTo(-1727, -1674);
      a.quadraticCurveTo(-2348, -1605, -2894, -1588);
      a.quadraticCurveTo(-5234, -1512, -7586, -2491);
      a.lineTo(-7785, -2570);
      a.lineTo(-7875, -2553);
      a.lineTo(-8011, -2532);
      a.quadraticCurveTo(-8295, -2522, -8606, -2647);
      a.quadraticCurveTo(-9953, -3179, -11547, -3467);
      a.quadraticCurveTo(-13133, -3840, -14943, -3661);
      a.quadraticCurveTo(-16731, -3438, -17671, -2926);
      a.quadraticCurveTo(-18593, -2420, -18962, -2222);
      a.quadraticCurveTo(-19411, -1878, -19576, -1561);
      a.quadraticCurveTo(-19729, -1269, -19650, -1013);
      a.quadraticCurveTo(-19608, -885, -19509, -756);
      a.quadraticCurveTo(-19349, -557, -19036, -518);
      a.quadraticCurveTo(-19100, -619, -19191, -707);
      a.quadraticCurveTo(-19278, -792, -19265, -1125);
      a.lineTo(-19265, -1154);
      a.quadraticCurveTo(-19056, -1615, -18854, -1756);
      a.quadraticCurveTo(-18651, -1895, -18475, -1985);
      a.quadraticCurveTo(-18609, -1628, -18574, -1358);
      a.quadraticCurveTo(-18511, -918, -18020, -621);
      a.quadraticCurveTo(-17902, -548, -17767, -507);
      a.quadraticCurveTo(-18207, -1080, -18118, -1540);
      a.moveTo(-21224, -418);
      a.lineTo(-21389, -405);
      a.quadraticCurveTo(-21533, -394, -21604, -426);
      a.quadraticCurveTo(-20992, -1119, -19903, -1719);
      a.quadraticCurveTo(-19564, -1907, -19228, -2082);
      a.lineTo(-18962, -2222)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14397, 11049);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2066, -1032);
      a.lineTo(-2011, -1043)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11225);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(29, -2730);
      a.quadraticCurveTo(18, -2730, 8, -2730);
      a.quadraticCurveTo(-775, -2725, -1473, -2385);
      a.quadraticCurveTo(-1598, -2324, -1712, -2247);
      a.quadraticCurveTo(-1835, -2165, -1945, -2063);
      a.lineTo(-2105, -1920);
      a.quadraticCurveTo(-2051, -1145, -1854, -394);
      a.quadraticCurveTo(-1658, 357, -1281, 1029);
      a.lineTo(-1275, 1040);
      a.quadraticCurveTo(-893, 1719, -384, 2301);
      a.quadraticCurveTo(-137, 2582, 102, 2582);
      a.quadraticCurveTo(356,
        2582, 602, 2267);
      a.quadraticCurveTo(800, 2015, 923, 1716);
      a.quadraticCurveTo(1200, 1045, 1441, 361);
      a.quadraticCurveTo(1694, -358, 1875, -1100);
      a.quadraticCurveTo(2015, -1676, 1895, -2258);
      a.lineTo(1717, -2349);
      a.quadraticCurveTo(1597, -2407, 1472, -2456);
      a.quadraticCurveTo(775, -2730, 29, -2730);
      a.closePath();
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1806, 2714, -1672, 2714);
      a.quadraticCurveTo(-1609, 2714, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.quadraticCurveTo(-1628, 2191, -1784, 2034);
      a.quadraticCurveTo(-1882, 1935, -1969, 1830);
      a.closePath();
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285);
      a.quadraticCurveTo(1453, 2524, 1069, 2647);
      a.quadraticCurveTo(1240, 2920, 1464, 3159);
      a.lineTo(1495, 3185);
      a.quadraticCurveTo(1485, 2702, 1801, 2702);
      a.quadraticCurveTo(1871, 2702, 1958, 2726);
      a.quadraticCurveTo(2051, 2751, 2109, 2838);
      a.lineTo(2146, 2897);
      a.quadraticCurveTo(2234, 2453, 2090, 2025);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11225);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1895, -2258);
      a.quadraticCurveTo(2015, -1676, 1875, -1100);
      a.quadraticCurveTo(1694, -358, 1441, 361);
      a.quadraticCurveTo(1200, 1045, 923, 1716);
      a.quadraticCurveTo(800, 2015, 602, 2267);
      a.quadraticCurveTo(356, 2582, 102, 2582);
      a.quadraticCurveTo(-137, 2582, -384, 2301);
      a.quadraticCurveTo(-893, 1719, -1275, 1040);
      a.lineTo(-1281,
        1029);
      a.lineTo(-1281, 1029);
      a.quadraticCurveTo(-1281, 1029, -1281, 1029);
      a.quadraticCurveTo(-1658, 357, -1854, -394);
      a.quadraticCurveTo(-2051, -1145, -2105, -1920);
      a.quadraticCurveTo(-2607, -1485, -3179, -1168);
      a.lineTo(-3154, -913);
      a.quadraticCurveTo(-3092, -110, -3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628, 2191, -1457, 2316);
      a.quadraticCurveTo(-1193, 2510, -895, 2627);
      a.quadraticCurveTo(-716, 2697, -524,
        2739);
      a.quadraticCurveTo(-230, 2803, 76, 2803);
      a.quadraticCurveTo(518, 2803, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782, 2285);
      a.quadraticCurveTo(1942, 2169, 2090, 2025);
      a.quadraticCurveTo(2251, 1867, 2398, 1675);
      a.quadraticCurveTo(2848, 1083, 3270, 825);
      a.quadraticCurveTo(3289, 538, 3323, 253);
      a.quadraticCurveTo(3408, -448, 3399, -1154);
      a.quadraticCurveTo(3043, -1322, 2763, -1603);
      a.quadraticCurveTo(2369, -1999, 1895, -2258);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11225);
      a.fillStyle =
        "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1717, -2349);
      a.lineTo(1791, -2179);
      a.moveTo(1971, -1331);
      a.quadraticCurveTo(1976, -1189, 1966, -1044);
      a.moveTo(1884, -1896);
      a.quadraticCurveTo(1918, -1769, 1940, -1641);
      a.moveTo(1925, -735);
      a.lineTo(1908, -654);
      a.lineTo(1866, -463);
      a.moveTo(-1712, -2247);
      a.lineTo(-1741, -2148);
      a.moveTo(-1785, -1953);
      a.quadraticCurveTo(-1818, -1781, -1826, -1605);
      a.moveTo(-1281, 1029);
      a.lineTo(-1285, 1001);
      a.moveTo(-1715, -727);
      a.lineTo(-1688, -640);
      a.lineTo(-1626, -443);
      a.moveTo(-1821, -1306);
      a.quadraticCurveTo(-1810, -1147, -1778, -986);
      a.moveTo(-1400, 404);
      a.lineTo(-1338, 701);
      a.moveTo(-1262, 1557);
      a.quadraticCurveTo(-1273, 1698, -1300, 1834);
      a.moveTo(-1281, 1029);
      a.quadraticCurveTo(-1265, 1153, -1259, 1273);
      a.moveTo(-1457, 2316);
      a.quadraticCurveTo(-1410, 2213, -1373, 2107);
      a.moveTo(1782, 2285);
      a.quadraticCurveTo(1730, 2222, 1688, 2157);
      a.moveTo(1484, 1644);
      a.quadraticCurveTo(1503, 1765, 1546, 1881);
      a.moveTo(1534,
        1012);
      a.lineTo(1508, 1124);
      a.quadraticCurveTo(1484, 1229, 1475, 1330);
      a.moveTo(1665, 437);
      a.lineTo(1603, 712);
      a.moveTo(-1547, -174);
      a.lineTo(-1468, 121);
      a.moveTo(1798, -156);
      a.lineTo(1735, 128)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14898, 11225);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2105, -1920);
      a.lineTo(-1945, -2063);
      a.quadraticCurveTo(-1835, -2165, -1712, -2247);
      a.quadraticCurveTo(-1598, -2324, -1473, -2385);
      a.quadraticCurveTo(-775, -2725, 8, -2730);
      a.quadraticCurveTo(765, -2734, 1472, -2456);
      a.quadraticCurveTo(1597, -2407, 1717, -2349);
      a.lineTo(1895, -2258);
      a.quadraticCurveTo(2369, -1999, 2763, -1603);
      a.quadraticCurveTo(3043, -1322, 3399, -1154);
      a.lineTo(3461, -1126);
      a.moveTo(-3226, -1142);
      a.lineTo(-3179, -1168);
      a.quadraticCurveTo(-2607, -1485, -2105, -1920);
      a.moveTo(-3224, 679);
      a.quadraticCurveTo(-2577, 909, -2202, 1509);
      a.quadraticCurveTo(-2096, 1677, -1969, 1830);
      a.quadraticCurveTo(-1882, 1935, -1784, 2034);
      a.quadraticCurveTo(-1628,
        2191, -1457, 2316);
      a.moveTo(-1969, 1830);
      a.quadraticCurveTo(-2031, 2311, -1940, 2784);
      a.lineTo(-1926, 2835);
      a.quadraticCurveTo(-1749, 2657, -1542, 2741);
      a.quadraticCurveTo(-1433, 2786, -1366, 2898);
      a.quadraticCurveTo(-1288, 3028, -1244, 3172);
      a.lineTo(-1221, 3164);
      a.quadraticCurveTo(-990, 3009, -922, 2720);
      a.lineTo(-895, 2627);
      a.quadraticCurveTo(-1193, 2510, -1457, 2316);
      a.moveTo(-895, 2627);
      a.quadraticCurveTo(-716, 2697, -524, 2739);
      a.quadraticCurveTo(190, 2895, 988, 2671);
      a.lineTo(1069, 2647);
      a.quadraticCurveTo(1453, 2524, 1782,
        2285);
      a.moveTo(-3242, 673);
      a.lineTo(-3224, 679);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(3391, 751, 3509, 704);
      a.moveTo(3270, 825);
      a.quadraticCurveTo(2848, 1083, 2398, 1675);
      a.quadraticCurveTo(2251, 1867, 2090, 2025);
      a.quadraticCurveTo(2234, 2453, 2146, 2897);
      a.lineTo(2109, 2838);
      a.quadraticCurveTo(2051, 2751, 1958, 2726);
      a.quadraticCurveTo(1483, 2595, 1495, 3185);
      a.lineTo(1464, 3159);
      a.quadraticCurveTo(1240, 2920, 1069, 2647);
      a.moveTo(2090, 2025);
      a.quadraticCurveTo(1942, 2169, 1782, 2285)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48,
        14924, 10667);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.quadraticCurveTo(1866, -1390, 1927, -1547);
      a.quadraticCurveTo(2065, -1909, 1846, -2264);
      a.closePath();
      a.moveTo(-1866, -2414);
      a.quadraticCurveTo(-1988, -2163, -1979, -1755);
      a.quadraticCurveTo(-1973, -1467, -1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.closePath();
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1187, -981, 1265, -981);
      a.quadraticCurveTo(1268, -981, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.quadraticCurveTo(1602, -2564, 1486, -2661);
      a.closePath();
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1591, -2730, -1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1398, -906, -1198, -906);
      a.quadraticCurveTo(-1195, -906, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.lineTo(-1158, -2446);
      a.quadraticCurveTo(-1266, -2592, -1444, -2773);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10667);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(1691, -2467);
      a.lineTo(1617, -2397);
      a.quadraticCurveTo(1036, -1774, 1540, -1045);
      a.quadraticCurveTo(1681, -1119, 1789, -1277);
      a.lineTo(1766, -1339);
      a.quadraticCurveTo(1594, -1821, 1846, -2264);
      a.quadraticCurveTo(1783, -2366, 1691, -2467);
      a.closePath();
      a.moveTo(-1706, -2639);
      a.quadraticCurveTo(-1719, -2639, -1719, -2618);
      a.quadraticCurveTo(-1808, -2534, -1866, -2414);
      a.lineTo(-1839, -2375);
      a.quadraticCurveTo(-1463, -1799, -1881, -1276);
      a.quadraticCurveTo(-1828, -1165, -1546, -963);
      a.quadraticCurveTo(-1083, -1736, -1560, -2461);
      a.quadraticCurveTo(-1620, -2552, -1697, -2637);
      a.quadraticCurveTo(-1702, -2639, -1706, -2639);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10667);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(504, -7675);
      a.quadraticCurveTo(483, -7675, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.lineTo(72, -7173);
      a.quadraticCurveTo(-75, -6552, -84, -5920);
      a.lineTo(0, -5470);
      a.quadraticCurveTo(3, -5138, -4, -4806);
      a.lineTo(-55, -2986);
      a.quadraticCurveTo(-60, -2829, -132, -2714);
      a.quadraticCurveTo(-249, -2531, -379, -2531);
      a.quadraticCurveTo(-522, -2531, -683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.quadraticCurveTo(-1286, -3404, -1395, -3404);
      a.quadraticCurveTo(-1475, -3404, -1555, -3334);
      a.quadraticCurveTo(-1801, -3121, -1548, -2877);
      a.lineTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.quadraticCurveTo(-811, -1894, -769, -1831);
      a.quadraticCurveTo(-380, -1249, -298, -527);
      a.quadraticCurveTo(-189, 432, -50, 1385);
      a.lineTo(-38, 1575);
      a.quadraticCurveTo(14, 2265, -214, 2911);
      a.quadraticCurveTo(-140, 3258, -59, 3411);
      a.quadraticCurveTo(33, 3510, 122, 3510);
      a.quadraticCurveTo(271, 3510, 409, 3232);
      a.quadraticCurveTo(627, 2788, 824, 1738);
      a.quadraticCurveTo(910, 1280, 991, 893);
      a.quadraticCurveTo(1073,
        494, 1151, 169);
      a.lineTo(1190, 6);
      a.quadraticCurveTo(1359, -675, 1540, -1045);
      a.lineTo(1540, -1045);
      a.quadraticCurveTo(1419, -982, 1272, -982);
      a.quadraticCurveTo(1269, -981, 1265, -981);
      a.quadraticCurveTo(1187, -981, 1125, -1322);
      a.quadraticCurveTo(1059, -1678, 1060, -2423);
      a.quadraticCurveTo(1274, -2525, 1486, -2661);
      a.lineTo(1592, -2731);
      a.quadraticCurveTo(1934, -2966, 1778, -3215);
      a.quadraticCurveTo(1683, -3365, 1533, -3365);
      a.quadraticCurveTo(1434, -3365, 1310, -3300);
      a.lineTo(1238, -3260);
      a.quadraticCurveTo(1248, -3864, 882, -4324);
      a.quadraticCurveTo(516, -4785, 384, -5168);
      a.quadraticCurveTo(251, -5551, 317, -6093);
      a.quadraticCurveTo(382, -6636, 557, -7180);
      a.quadraticCurveTo(608, -7337, 621, -7444);
      a.lineTo(621, -7444);
      a.quadraticCurveTo(621, -7444, 621, -7444);
      a.quadraticCurveTo(649, -7675, 504, -7675);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10667);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(110, -7354);
      a.quadraticCurveTo(-40, -7132, -215, -6755);
      a.quadraticCurveTo(-613, -5895, -596, -5022);
      a.quadraticCurveTo(-591, -4787, -614, -4479);
      a.lineTo(-635, -4248);
      a.quadraticCurveTo(-1077, -3768, -1179, -3274);
      a.quadraticCurveTo(-1125, -3208, -1071, -3109);
      a.quadraticCurveTo(-915, -2821, -683, -2750);
      a.quadraticCurveTo(-523, -2531, -379, -2531);
      a.quadraticCurveTo(-248, -2531, -132, -2714);
      a.quadraticCurveTo(-60, -2829, -55, -2986);
      a.lineTo(-4, -4806);
      a.quadraticCurveTo(3, -5138, 0, -5470);
      a.lineTo(-84, -5920);
      a.quadraticCurveTo(-75, -6552, 72, -7173);
      a.lineTo(110, -7354);
      a.closePath();
      a.moveTo(-1077, -2330);
      a.lineTo(-1048, -1864);
      a.quadraticCurveTo(-1025, -1437, -1191, -906);
      a.quadraticCurveTo(-1194, -906, -1198, -906);
      a.quadraticCurveTo(-1398, -906, -1546, -963);
      a.lineTo(-1546, -963);
      a.quadraticCurveTo(-1223, -398, -997, 123);
      a.quadraticCurveTo(-786, 610, -659, 1058);
      a.quadraticCurveTo(-565, 1388, -484, 1706);
      a.quadraticCurveTo(-338, 2281, -233, 2814);
      a.lineTo(-214, 2911);
      a.quadraticCurveTo(14, 2265, -38, 1575);
      a.lineTo(-50, 1385);
      a.quadraticCurveTo(-189, 432, -298, -527);
      a.quadraticCurveTo(-380, -1249, -769, -1831);
      a.quadraticCurveTo(-811, -1894, -875, -1936);
      a.lineTo(-875, -1936);
      a.quadraticCurveTo(-875, -1936, -875, -1936);
      a.quadraticCurveTo(-901, -2012, -930, -2073);
      a.quadraticCurveTo(-993, -2202, -1077, -2330);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10667);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(621, -7444);
      a.quadraticCurveTo(653, -7709, 458, -7670);
      a.quadraticCurveTo(303, -7639, 110, -7354);
      a.moveTo(621, -7444);
      a.quadraticCurveTo(608, -7337, 557, -7180);
      a.quadraticCurveTo(382, -6636, 317, -6093);
      a.quadraticCurveTo(251, -5551, 384, -5168);
      a.quadraticCurveTo(516, -4785, 882, -4324);
      a.quadraticCurveTo(1248, -3864, 1238, -3260);
      a.lineTo(1310, -3300);
      a.quadraticCurveTo(1621, -3464, 1778, -3215);
      a.quadraticCurveTo(1934, -2966, 1592, -2731);
      a.lineTo(1486, -2661);
      a.quadraticCurveTo(1602, -2564, 1691, -2467);
      a.quadraticCurveTo(1783, -2366, 1846, -2264);
      a.quadraticCurveTo(2065, -1909, 1927, -1547);
      a.quadraticCurveTo(1866, -1390, 1789, -1277);
      a.quadraticCurveTo(1681, -1119, 1540, -1045);
      a.quadraticCurveTo(1359, -675, 1190, 6);
      a.lineTo(1151,
        169);
      a.quadraticCurveTo(1073, 494, 991, 893);
      a.quadraticCurveTo(910, 1280, 824, 1738);
      a.quadraticCurveTo(627, 2788, 409, 3232);
      a.quadraticCurveTo(190, 3675, -59, 3411);
      a.quadraticCurveTo(-140, 3258, -214, 2911);
      a.lineTo(-233, 2814);
      a.quadraticCurveTo(-338, 2281, -484, 1706);
      a.quadraticCurveTo(-565, 1388, -659, 1058);
      a.quadraticCurveTo(-786, 610, -997, 123);
      a.quadraticCurveTo(-1223, -398, -1546, -963);
      a.quadraticCurveTo(-1828, -1165, -1881, -1276);
      a.quadraticCurveTo(-1973, -1467, -1979, -1755);
      a.quadraticCurveTo(-1988, -2163, -1866, -2414);
      a.quadraticCurveTo(-1808, -2534, -1719, -2618);
      a.moveTo(-1697, -2637);
      a.quadraticCurveTo(-1591, -2730, -1444, -2773);
      a.lineTo(-1548, -2877);
      a.quadraticCurveTo(-1801, -3121, -1555, -3334);
      a.quadraticCurveTo(-1365, -3500, -1179, -3274);
      a.quadraticCurveTo(-1077, -3768, -635, -4248);
      a.lineTo(-614, -4479);
      a.quadraticCurveTo(-591, -4787, -596, -5022);
      a.quadraticCurveTo(-613, -5895, -215, -6755);
      a.quadraticCurveTo(-40, -7132, 110, -7354);
      a.moveTo(1486, -2661);
      a.quadraticCurveTo(1274, -2525, 1060, -2423);
      a.quadraticCurveTo(1059, -1678, 1125, -1322);
      a.quadraticCurveTo(1190, -967, 1272, -982);
      a.quadraticCurveTo(1419, -982, 1540, -1045);
      a.quadraticCurveTo(1036, -1774, 1617, -2397);
      a.lineTo(1691, -2467);
      a.moveTo(1060, -2423);
      a.lineTo(901, -2353);
      a.quadraticCurveTo(553, -2210, 543, -1729);
      a.moveTo(483, -2694);
      a.quadraticCurveTo(941, -3088, 1238, -3260);
      a.moveTo(1846, -2264);
      a.quadraticCurveTo(1594, -1821, 1766, -1339);
      a.lineTo(1789, -1277);
      a.moveTo(-683, -2750);
      a.quadraticCurveTo(-915, -2821, -1071, -3109);
      a.quadraticCurveTo(-1125, -3208, -1179, -3274);
      a.moveTo(-1444, -2773);
      a.quadraticCurveTo(-1266, -2592, -1158, -2446);
      a.lineTo(-1077, -2330);
      a.quadraticCurveTo(-993, -2202, -930, -2073);
      a.quadraticCurveTo(-901, -2012, -875, -1936);
      a.moveTo(-421, -2734);
      a.quadraticCurveTo(-562, -2713, -683, -2750);
      a.moveTo(-1881, -1276);
      a.quadraticCurveTo(-1463, -1799, -1839, -2375);
      a.lineTo(-1866, -2414);
      a.moveTo(-1719, -2618);
      a.lineTo(-1697, -2637);
      a.quadraticCurveTo(-1620, -2552, -1560, -2461);
      a.quadraticCurveTo(-1083, -1736, -1546, -963);
      a.quadraticCurveTo(-1395, -905, -1191, -906);
      a.quadraticCurveTo(-1025, -1437, -1048, -1864);
      a.lineTo(-1077, -2330);
      a.moveTo(-875, -1936);
      a.quadraticCurveTo(-822, -1782, -783, -1568)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 14924, 10667);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(436, -7172);
      a.quadraticCurveTo(526, -7323, 621, -7444);
      a.moveTo(-84, -5920);
      a.lineTo(-8, -6155);
      a.moveTo(128, -6531);
      a.quadraticCurveTo(192, -6693, 259, -6837);
      a.moveTo(683, -1206);
      a.lineTo(537, -1172);
      a.lineTo(538, -1065);
      a.quadraticCurveTo(536, -876, 594, -692);
      a.lineTo(683, -723);
      a.moveTo(362, -1145);
      a.lineTo(537, -1172);
      a.lineTo(563, -1508);
      a.moveTo(1151, 169);
      a.lineTo(790, -299);
      a.lineTo(643, -220);
      a.moveTo(594, -692);
      a.lineTo(790, -299);
      a.lineTo(945, -361);
      a.moveTo(482, -663);
      a.lineTo(594, -692);
      a.moveTo(813, 958);
      a.quadraticCurveTo(901, 924, 991, 893);
      a.moveTo(387, 1139);
      a.quadraticCurveTo(512, 1078, 641, 1025);
      a.moveTo(-50, 1385);
      a.quadraticCurveTo(33, 1331, 120, 1281);
      a.lineTo(147, 1266);
      a.moveTo(-302, -5223);
      a.lineTo(-203, -5526);
      a.moveTo(-88, -5905);
      a.lineTo(-84, -5920);
      a.moveTo(-614, -4479);
      a.quadraticCurveTo(-526, -4617, -410, -4920);
      a.moveTo(-764, -1206);
      a.lineTo(-724, -996);
      a.lineTo(-522, -965);
      a.moveTo(-997, 123);
      a.lineTo(-818, -377);
      a.lineTo(-905, -421);
      a.moveTo(-818, -377);
      a.lineTo(-779, -541);
      a.quadraticCurveTo(-726, -763, -724, -996);
      a.lineTo(-864, -1005);
      a.moveTo(-818, -377);
      a.lineTo(-643, -281);
      a.moveTo(-484, 1706);
      a.quadraticCurveTo(-405, 1633, -318, 1569);
      a.moveTo(-75, 1401);
      a.lineTo(-50, 1385)
    }]
  }
}

function make_baby_0(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4433);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-5896, -1392);
      a.lineTo(-5782, -1391);
      a.lineTo(-5668, -1380);
      a.lineTo(-5668, -1312);
      a.lineTo(-5762, -1283);
      a.quadraticCurveTo(-5814, -1268, -5855, -1248);
      a.quadraticCurveTo(-5897, -1229, -5922, -1206);
      a.lineTo(-5942, -1183);
      a.lineTo(-6198, -1267);
      a.lineTo(-6276, -1282);
      a.lineTo(-6393, -1287);
      a.lineTo(-6488, -1279);
      a.lineTo(-6585, -1266);
      a.lineTo(-6697, -1256);
      a.lineTo(-6710, -1255);
      a.lineTo(-6627, -1293);
      a.quadraticCurveTo(-6576, -1318, -6524, -1345);
      a.lineTo(-6455, -1369);
      a.lineTo(-6354, -1385);
      a.quadraticCurveTo(-6329, -1387, -6306, -1387);
      a.quadraticCurveTo(-6282, -1387, -6260, -1385);
      a.lineTo(-6154, -1374);
      a.lineTo(-6120, -1372);
      a.lineTo(-6008, -1381);
      a.lineTo(-5896, -1392);
      a.closePath();
      a.moveTo(-4981, -1670);
      a.quadraticCurveTo(-5047, -1670, -5113, -1667);
      a.quadraticCurveTo(-5625, -1647, -6229, -1466);
      a.quadraticCurveTo(-6582, -1361, -6758, -1361);
      a.quadraticCurveTo(-6847, -1361, -6891, -1388);
      a.lineTo(-6904, -1398);
      a.lineTo(-6904, -1398);
      a.quadraticCurveTo(-6888, -1231, -6431, -992);
      a.quadraticCurveTo(-6070, -844, -5726, -735);
      a.quadraticCurveTo(-5583, -690, -5310, -573);
      a.quadraticCurveTo(-4828, -366, -4770, -342);
      a.quadraticCurveTo(-4632, -286, -4195, -181);
      a.lineTo(-4164, -173);
      a.lineTo(-4136, -167);
      a.lineTo(-3470, -18);
      a.quadraticCurveTo(-3305, 18, -3122, 81);
      a.quadraticCurveTo(-2905, 155, -2810, 219);
      a.quadraticCurveTo(-2702, 292, -2590, 294);
      a.quadraticCurveTo(-2393, 284, -2185, 284);
      a.lineTo(-1544, 316);
      a.lineTo(-1184,
        347);
      a.lineTo(-1089, 340);
      a.quadraticCurveTo(-1060, 326, -1060, 262);
      a.lineTo(-1060, 260);
      a.quadraticCurveTo(-1061, 237, -1089, 209);
      a.quadraticCurveTo(-1121, 178, -1187, 142);
      a.quadraticCurveTo(-1258, 102, -1368, 55);
      a.lineTo(-1634, -51);
      a.quadraticCurveTo(-1793, -114, -1868, -152);
      a.quadraticCurveTo(-2006, -222, -2188, -380);
      a.lineTo(-2402, -574);
      a.lineTo(-2402, -581);
      a.quadraticCurveTo(-2323, -561, -2128, -487);
      a.lineTo(-1756, -348);
      a.quadraticCurveTo(-1245, -166, -962, -166);
      a.quadraticCurveTo(-687, -166, -561, -363);
      a.quadraticCurveTo(-470, -505, -470, -714);
      a.quadraticCurveTo(-470, -772, -473, -793);
      a.lineTo(-475, -807);
      a.quadraticCurveTo(-647, -734, -849, -734);
      a.quadraticCurveTo(-935, -734, -1026, -747);
      a.quadraticCurveTo(-1530, -821, -2102, -947);
      a.quadraticCurveTo(-2674, -1074, -3132, -1239);
      a.quadraticCurveTo(-3590, -1404, -4096, -1546);
      a.quadraticCurveTo(-4537, -1670, -4981, -1670);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4433);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-5896, -1392);
      a.lineTo(-6008, -1381);
      a.lineTo(-6120, -1372);
      a.lineTo(-6154, -1374);
      a.lineTo(-6260, -1385);
      a.quadraticCurveTo(-6282, -1387, -6306, -1387);
      a.quadraticCurveTo(-6329, -1387, -6354, -1385);
      a.lineTo(-6455, -1369);
      a.lineTo(-6524, -1345);
      a.quadraticCurveTo(-6576, -1318, -6627, -1293);
      a.lineTo(-6710, -1255);
      a.lineTo(-6697, -1256);
      a.lineTo(-6585, -1266);
      a.lineTo(-6488, -1279);
      a.lineTo(-6393, -1287);
      a.lineTo(-6276, -1282);
      a.lineTo(-6198, -1267);
      a.lineTo(-5942, -1183);
      a.lineTo(-5922, -1206);
      a.quadraticCurveTo(-5897, -1229, -5855, -1248);
      a.quadraticCurveTo(-5814, -1268, -5762, -1283);
      a.lineTo(-5668, -1312);
      a.lineTo(-5668, -1380);
      a.lineTo(-5782, -1391);
      a.lineTo(-5896, -1392);
      a.closePath();
      a.moveTo(28, -1311);
      a.quadraticCurveTo(-15, -1206, -86, -1116);
      a.quadraticCurveTo(-256, -902, -475, -807);
      a.lineTo(-473, -793);
      a.quadraticCurveTo(-470, -772, -470, -714);
      a.quadraticCurveTo(-470, -505, -561, -363);
      a.quadraticCurveTo(-687, -166, -962, -166);
      a.quadraticCurveTo(-1245, -166, -1756, -348);
      a.lineTo(-2128, -487);
      a.quadraticCurveTo(-2323, -561, -2402, -581);
      a.lineTo(-2402, -574);
      a.lineTo(-2188, -380);
      a.quadraticCurveTo(-2006, -222, -1868, -152);
      a.quadraticCurveTo(-1793, -114, -1634, -51);
      a.lineTo(-1368, 55);
      a.quadraticCurveTo(-1258, 102, -1187, 142);
      a.quadraticCurveTo(-1121, 178, -1089, 209);
      a.quadraticCurveTo(-1061, 237, -1060, 260);
      a.lineTo(-1060, 262);
      a.quadraticCurveTo(-1060, 326, -1089, 340);
      a.lineTo(-1184, 347);
      a.lineTo(-1544, 316);
      a.lineTo(-2185, 284);
      a.quadraticCurveTo(-2393, 284, -2590, 294);
      a.quadraticCurveTo(-2702, 292, -2810, 219);
      a.quadraticCurveTo(-2905, 155, -3122, 81);
      a.quadraticCurveTo(-3305, 18, -3470, -18);
      a.lineTo(-4136, -167);
      a.lineTo(-4164, -173);
      a.lineTo(-4195, -181);
      a.quadraticCurveTo(-4632, -286, -4770, -342);
      a.quadraticCurveTo(-4828, -366, -5310, -573);
      a.quadraticCurveTo(-5583, -690, -5726, -735);
      a.quadraticCurveTo(-6070, -844, -6431, -992);
      a.lineTo(-6431, -992);
      a.lineTo(-6280, -917);
      a.quadraticCurveTo(-5675, -628, -5167, -417);
      a.quadraticCurveTo(-4660, -206, -4185, -66);
      a.quadraticCurveTo(-3710, 72, -3284, 242);
      a.quadraticCurveTo(-2859, 411, -2520, 617);
      a.quadraticCurveTo(-2266, 560, -2195, 557);
      a.quadraticCurveTo(-2139, 554, -2034, 554);
      a.quadraticCurveTo(-2008,
        554, -1978, 554);
      a.lineTo(-1828, 557);
      a.quadraticCurveTo(-1139, 557, -630, 817);
      a.quadraticCurveTo(-363, 935, -248, 999);
      a.quadraticCurveTo(-133, 1063, -41, 1075);
      a.quadraticCurveTo(84, 837, 190, 592);
      a.quadraticCurveTo(382, 149, 369, -326);
      a.quadraticCurveTo(355, -857, 28, -1311);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4433);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-475, -807);
      a.quadraticCurveTo(-256, -902, -86, -1116);
      a.quadraticCurveTo(-15, -1206, 28, -1311);
      a.quadraticCurveTo(355, -857, 369, -326);
      a.quadraticCurveTo(382, 149, 190, 592);
      a.quadraticCurveTo(84, 837, -41, 1075);
      a.quadraticCurveTo(-133, 1063, -248, 999);
      a.quadraticCurveTo(-363, 935, -630, 817);
      a.quadraticCurveTo(-1139, 557, -1828, 557);
      a.lineTo(-1978, 554);
      a.quadraticCurveTo(-2125, 553, -2195, 557);
      a.quadraticCurveTo(-2266, 560, -2520, 617);
      a.quadraticCurveTo(-2859, 411, -3284, 242);
      a.quadraticCurveTo(-3710, 72, -4185, -66);
      a.quadraticCurveTo(-4660, -206, -5167, -417);
      a.quadraticCurveTo(-5675, -628, -6280, -917);
      a.lineTo(-6431, -992);
      a.quadraticCurveTo(-6888, -1231, -6904, -1398);
      a.lineTo(-6891, -1388);
      a.quadraticCurveTo(-6760, -1308, -6229, -1466);
      a.quadraticCurveTo(-5625, -1647, -5113, -1667);
      a.quadraticCurveTo(-4602, -1688, -4096, -1546);
      a.quadraticCurveTo(-3590, -1404, -3132, -1239);
      a.quadraticCurveTo(-2674, -1074, -2102, -947);
      a.quadraticCurveTo(-1530, -821, -1026, -747);
      a.quadraticCurveTo(-720, -703, -475, -807);
      a.closePath();
      a.moveTo(-6524, -1345);
      a.lineTo(-6455, -1369);
      a.lineTo(-6354, -1385);
      a.quadraticCurveTo(-6305, -1389, -6260, -1385);
      a.lineTo(-6154, -1374);
      a.lineTo(-6120, -1372);
      a.lineTo(-6008, -1381);
      a.lineTo(-5896, -1392);
      a.lineTo(-5782, -1391);
      a.lineTo(-5668, -1380);
      a.lineTo(-5668, -1312);
      a.lineTo(-5762, -1283);
      a.quadraticCurveTo(-5814, -1268, -5855, -1248);
      a.quadraticCurveTo(-5897, -1229, -5922, -1206);
      a.lineTo(-5942, -1183);
      a.lineTo(-6198, -1267);
      a.lineTo(-6276, -1282);
      a.lineTo(-6393, -1287);
      a.lineTo(-6488, -1279);
      a.lineTo(-6585, -1266);
      a.lineTo(-6697, -1256);
      a.lineTo(-6710, -1255);
      a.lineTo(-6627, -1293);
      a.quadraticCurveTo(-6576, -1318, -6524, -1345);
      a.closePath();
      a.moveTo(-6120, -1372);
      a.lineTo(-6198, -1267)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4433);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-1187, 142);
      a.lineTo(-1174, 122);
      a.lineTo(-1164, 108);
      a.lineTo(-1241, 57);
      a.moveTo(-6035, -967);
      a.lineTo(-5887, -933);
      a.moveTo(-5021, -570);
      a.lineTo(-4877, -498);
      a.moveTo(-5541, -820);
      a.lineTo(-5395, -757);
      a.moveTo(-5286, -704);
      a.lineTo(-5148, -633);
      a.moveTo(-5764, -898);
      a.lineTo(-5616, -848);
      a.moveTo(-1089, 209);
      a.lineTo(-1096, 228);
      a.moveTo(-3830, -1258);
      a.lineTo(-3881, -1275);
      a.quadraticCurveTo(-4013, -1320, -4155, -1354);
      a.moveTo(-3485, -1146);
      a.lineTo(-3735, -1226);
      a.moveTo(-4276, -1381);
      a.quadraticCurveTo(-4450, -1416, -4638, -1435);
      a.moveTo(-4753, -1445);
      a.lineTo(-4841, -1451);
      a.lineTo(-5164, -1451);
      a.moveTo(-4466, -302);
      a.lineTo(-4297, -228);
      a.moveTo(-4738, -431);
      a.lineTo(-4600, -365);
      a.moveTo(-3927, -86);
      a.lineTo(-3828, -53);
      a.lineTo(-3752, -30);
      a.moveTo(-4164, -173);
      a.lineTo(-4026, -121);
      a.moveTo(-3154, -1053);
      a.lineTo(-3196, -1064);
      a.lineTo(-3344, -1104);
      a.moveTo(-2318, -860);
      a.lineTo(-2561, -908);
      a.lineTo(-2603, -918);
      a.moveTo(-2642, -594);
      a.quadraticCurveTo(-2645, -629, -2639, -649);
      a.lineTo(-2637, -655);
      a.lineTo(-2670, -666);
      a.lineTo(-2902, -744);
      a.moveTo(-2637, -655);
      a.quadraticCurveTo(-2623, -690, -2558, -735);
      a.moveTo(-2516, -538);
      a.quadraticCurveTo(-2504, -566, -2479, -591);
      a.lineTo(-2475, -595);
      a.lineTo(-2637, -655);
      a.moveTo(-1707, -791);
      a.lineTo(-1847, -802);
      a.moveTo(-2290, -518);
      a.quadraticCurveTo(-2127, -447, -1976, -367);
      a.lineTo(-1922, -338);
      a.moveTo(-1965, -814);
      a.lineTo(-2195, -841);
      a.moveTo(-2746, -952);
      a.lineTo(-3020, -1020);
      a.moveTo(-2411, -637);
      a.quadraticCurveTo(-2447, -621, -2475, -595);
      a.lineTo(-2421, -573);
      a.moveTo(-1545, -215);
      a.quadraticCurveTo(-1571, -202, -1607, -163);
      a.quadraticCurveTo(-1485, -94, -1369, -23);
      a.moveTo(-1651, -103);
      a.quadraticCurveTo(-1647, -118, -1612, -158);
      a.lineTo(-1607, -163);
      a.lineTo(-1792, -268);
      a.moveTo(-181, -896);
      a.lineTo(-260, -827);
      a.moveTo(-540, -635);
      a.lineTo(-638, -581);
      a.moveTo(-20, -201);
      a.lineTo(-168, -282);
      a.moveTo(-271, -336);
      a.lineTo(-465, -435);
      a.moveTo(-363, -743);
      a.lineTo(-425, -701);
      a.moveTo(-558, -480);
      a.lineTo(-654, -526);
      a.moveTo(-768, -579);
      a.quadraticCurveTo(-842, -612, -920, -637);
      a.moveTo(78, -1122);
      a.lineTo(-61, -1002);
      a.lineTo(-98, -969);
      a.moveTo(-3436, -903);
      a.quadraticCurveTo(-3234, -848, -3037, -786);
      a.moveTo(-1164, 108);
      a.lineTo(-1131, 51);
      a.moveTo(-1201, 165);
      a.lineTo(-1187, 142);
      a.moveTo(-1089, 209);
      a.lineTo(-1066, 175);
      a.lineTo(-1164, 108);
      a.moveTo(-1060, 260);
      a.quadraticCurveTo(-1053, 241, -1028, 213);
      a.lineTo(-1022, 207);
      a.lineTo(-1066, 175);
      a.lineTo(-1061, 168);
      a.quadraticCurveTo(-1025, 124, -997, 114);
      a.moveTo(-829, 270);
      a.quadraticCurveTo(-861, 289, -882, 311);
      a.lineTo(-808, 368);
      a.moveTo(-882, 311);
      a.quadraticCurveTo(-905, 334, -913, 361);
      a.moveTo(-948, 149);
      a.quadraticCurveTo(-991, 174, -1022, 207);
      a.lineTo(-882, 311);
      a.moveTo(-3672, -7);
      a.lineTo(-3555, 23)
    }, function(a) {
      a.transform(0.48, 0, 0,
        0.48, 4959, 4433);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-5896, -1392);
      a.lineTo(-5782, -1391);
      a.lineTo(-5668, -1380);
      a.lineTo(-5668, -1312);
      a.lineTo(-5762, -1283);
      a.quadraticCurveTo(-5814, -1268, -5855, -1248);
      a.quadraticCurveTo(-5897, -1229, -5922, -1206);
      a.lineTo(-5942, -1183);
      a.lineTo(-6198, -1267);
      a.lineTo(-6276, -1282);
      a.lineTo(-6393, -1287);
      a.lineTo(-6488, -1279);
      a.lineTo(-6585, -1266);
      a.lineTo(-6697, -1256);
      a.lineTo(-6710, -1255);
      a.lineTo(-6627, -1293);
      a.quadraticCurveTo(-6576, -1318, -6524, -1345);
      a.lineTo(-6455, -1369);
      a.lineTo(-6354, -1385);
      a.quadraticCurveTo(-6329, -1387, -6306, -1387);
      a.quadraticCurveTo(-6282, -1387, -6260, -1385);
      a.lineTo(-6154, -1374);
      a.lineTo(-6120, -1372);
      a.lineTo(-6008, -1381);
      a.lineTo(-5896, -1392);
      a.closePath();
      a.moveTo(-4981, -1670);
      a.quadraticCurveTo(-5047, -1670, -5113, -1667);
      a.quadraticCurveTo(-5625, -1647, -6229, -1466);
      a.quadraticCurveTo(-6582, -1361, -6758, -1361);
      a.quadraticCurveTo(-6847, -1361, -6891, -1388);
      a.lineTo(-6904, -1398);
      a.lineTo(-6904, -1398);
      a.quadraticCurveTo(-6888, -1231, -6431, -992);
      a.quadraticCurveTo(-6070, -844, -5726, -735);
      a.quadraticCurveTo(-5583, -690, -5310, -573);
      a.quadraticCurveTo(-4828, -366, -4770, -342);
      a.quadraticCurveTo(-4632, -286, -4195, -181);
      a.lineTo(-4164, -173);
      a.lineTo(-4136, -167);
      a.lineTo(-3470, -18);
      a.quadraticCurveTo(-3305, 18, -3122, 81);
      a.quadraticCurveTo(-2905, 155, -2810, 219);
      a.quadraticCurveTo(-2702, 292, -2590, 294);
      a.quadraticCurveTo(-2393, 284, -2185, 284);
      a.lineTo(-1544, 316);
      a.lineTo(-1184, 347);
      a.lineTo(-1089, 340);
      a.quadraticCurveTo(-1060, 326, -1060, 262);
      a.lineTo(-1060, 260);
      a.quadraticCurveTo(-1061,
        237, -1089, 209);
      a.quadraticCurveTo(-1121, 178, -1187, 142);
      a.quadraticCurveTo(-1258, 102, -1368, 55);
      a.lineTo(-1634, -51);
      a.quadraticCurveTo(-1793, -114, -1868, -152);
      a.quadraticCurveTo(-2006, -222, -2188, -380);
      a.lineTo(-2402, -574);
      a.lineTo(-2402, -581);
      a.quadraticCurveTo(-2323, -561, -2128, -487);
      a.lineTo(-1756, -348);
      a.quadraticCurveTo(-1245, -166, -962, -166);
      a.quadraticCurveTo(-687, -166, -561, -363);
      a.quadraticCurveTo(-470, -505, -470, -714);
      a.quadraticCurveTo(-470, -772, -473, -793);
      a.lineTo(-475, -807);
      a.quadraticCurveTo(-647, -734, -849, -734);
      a.quadraticCurveTo(-935, -734, -1026, -747);
      a.quadraticCurveTo(-1530, -821, -2102, -947);
      a.quadraticCurveTo(-2674, -1074, -3132, -1239);
      a.quadraticCurveTo(-3590, -1404, -4096, -1546);
      a.quadraticCurveTo(-4537, -1670, -4981, -1670);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4433);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-5896, -1392);
      a.lineTo(-6008, -1381);
      a.lineTo(-6120, -1372);
      a.lineTo(-6154, -1374);
      a.lineTo(-6260, -1385);
      a.quadraticCurveTo(-6282, -1387, -6306, -1387);
      a.quadraticCurveTo(-6329, -1387, -6354, -1385);
      a.lineTo(-6455, -1369);
      a.lineTo(-6524, -1345);
      a.quadraticCurveTo(-6576, -1318, -6627, -1293);
      a.lineTo(-6710, -1255);
      a.lineTo(-6697, -1256);
      a.lineTo(-6585, -1266);
      a.lineTo(-6488, -1279);
      a.lineTo(-6393, -1287);
      a.lineTo(-6276, -1282);
      a.lineTo(-6198, -1267);
      a.lineTo(-5942, -1183);
      a.lineTo(-5922, -1206);
      a.quadraticCurveTo(-5897, -1229, -5855, -1248);
      a.quadraticCurveTo(-5814, -1268, -5762, -1283);
      a.lineTo(-5668, -1312);
      a.lineTo(-5668, -1380);
      a.lineTo(-5782, -1391);
      a.lineTo(-5896, -1392);
      a.closePath();
      a.moveTo(28, -1311);
      a.quadraticCurveTo(-15, -1206, -86, -1116);
      a.quadraticCurveTo(-256, -902, -475, -807);
      a.lineTo(-473, -793);
      a.quadraticCurveTo(-470, -772, -470, -714);
      a.quadraticCurveTo(-470, -505, -561, -363);
      a.quadraticCurveTo(-687, -166, -962, -166);
      a.quadraticCurveTo(-1245, -166, -1756, -348);
      a.lineTo(-2128, -487);
      a.quadraticCurveTo(-2323, -561, -2402, -581);
      a.lineTo(-2402, -574);
      a.lineTo(-2188, -380);
      a.quadraticCurveTo(-2006, -222, -1868, -152);
      a.quadraticCurveTo(-1793, -114, -1634, -51);
      a.lineTo(-1368, 55);
      a.quadraticCurveTo(-1258,
        102, -1187, 142);
      a.quadraticCurveTo(-1121, 178, -1089, 209);
      a.quadraticCurveTo(-1061, 237, -1060, 260);
      a.lineTo(-1060, 262);
      a.quadraticCurveTo(-1060, 326, -1089, 340);
      a.lineTo(-1184, 347);
      a.lineTo(-1544, 316);
      a.lineTo(-2185, 284);
      a.quadraticCurveTo(-2393, 284, -2590, 294);
      a.quadraticCurveTo(-2702, 292, -2810, 219);
      a.quadraticCurveTo(-2905, 155, -3122, 81);
      a.quadraticCurveTo(-3305, 18, -3470, -18);
      a.lineTo(-4136, -167);
      a.lineTo(-4164, -173);
      a.lineTo(-4195, -181);
      a.quadraticCurveTo(-4632, -286, -4770, -342);
      a.quadraticCurveTo(-4828, -366, -5310, -573);
      a.quadraticCurveTo(-5583, -690, -5726, -735);
      a.quadraticCurveTo(-6070, -844, -6431, -992);
      a.lineTo(-6431, -992);
      a.lineTo(-6280, -917);
      a.quadraticCurveTo(-5675, -628, -5167, -417);
      a.quadraticCurveTo(-4660, -206, -4185, -66);
      a.quadraticCurveTo(-3710, 72, -3284, 242);
      a.quadraticCurveTo(-2859, 411, -2520, 617);
      a.quadraticCurveTo(-2266, 560, -2195, 557);
      a.quadraticCurveTo(-2139, 554, -2034, 554);
      a.quadraticCurveTo(-2008, 554, -1978, 554);
      a.lineTo(-1828, 557);
      a.quadraticCurveTo(-1139, 557, -630, 817);
      a.quadraticCurveTo(-363,
        935, -248, 999);
      a.quadraticCurveTo(-133, 1063, -41, 1075);
      a.quadraticCurveTo(84, 837, 190, 592);
      a.quadraticCurveTo(382, 149, 369, -326);
      a.quadraticCurveTo(355, -857, 28, -1311);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4433);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-475, -807);
      a.quadraticCurveTo(-256, -902, -86, -1116);
      a.quadraticCurveTo(-15, -1206, 28, -1311);
      a.quadraticCurveTo(355, -857, 369, -326);
      a.quadraticCurveTo(382, 149, 190, 592);
      a.quadraticCurveTo(84, 837, -41, 1075);
      a.quadraticCurveTo(-133, 1063, -248, 999);
      a.quadraticCurveTo(-363, 935, -630, 817);
      a.quadraticCurveTo(-1139, 557, -1828, 557);
      a.lineTo(-1978, 554);
      a.quadraticCurveTo(-2125, 553, -2195, 557);
      a.quadraticCurveTo(-2266, 560, -2520, 617);
      a.quadraticCurveTo(-2859, 411, -3284, 242);
      a.quadraticCurveTo(-3710, 72, -4185, -66);
      a.quadraticCurveTo(-4660, -206, -5167, -417);
      a.quadraticCurveTo(-5675, -628, -6280, -917);
      a.lineTo(-6431, -992);
      a.quadraticCurveTo(-6888, -1231, -6904, -1398);
      a.lineTo(-6891, -1388);
      a.quadraticCurveTo(-6760, -1308, -6229, -1466);
      a.quadraticCurveTo(-5625, -1647, -5113, -1667);
      a.quadraticCurveTo(-4602, -1688, -4096, -1546);
      a.quadraticCurveTo(-3590, -1404, -3132, -1239);
      a.quadraticCurveTo(-2674, -1074, -2102, -947);
      a.quadraticCurveTo(-1530, -821, -1026, -747);
      a.quadraticCurveTo(-720, -703, -475, -807);
      a.closePath();
      a.moveTo(-6524, -1345);
      a.lineTo(-6455, -1369);
      a.lineTo(-6354, -1385);
      a.quadraticCurveTo(-6305, -1389, -6260, -1385);
      a.lineTo(-6154, -1374);
      a.lineTo(-6120, -1372);
      a.lineTo(-6008, -1381);
      a.lineTo(-5896, -1392);
      a.lineTo(-5782, -1391);
      a.lineTo(-5668, -1380);
      a.lineTo(-5668, -1312);
      a.lineTo(-5762, -1283);
      a.quadraticCurveTo(-5814, -1268, -5855, -1248);
      a.quadraticCurveTo(-5897, -1229, -5922, -1206);
      a.lineTo(-5942, -1183);
      a.lineTo(-6198, -1267);
      a.lineTo(-6276, -1282);
      a.lineTo(-6393, -1287);
      a.lineTo(-6488, -1279);
      a.lineTo(-6585, -1266);
      a.lineTo(-6697, -1256);
      a.lineTo(-6710, -1255);
      a.lineTo(-6627, -1293);
      a.quadraticCurveTo(-6576, -1318, -6524, -1345);
      a.closePath();
      a.moveTo(-6120, -1372);
      a.lineTo(-6198, -1267)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4433);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-1187, 142);
      a.lineTo(-1174, 122);
      a.lineTo(-1164, 108);
      a.lineTo(-1241, 57);
      a.moveTo(-6035, -967);
      a.lineTo(-5887, -933);
      a.moveTo(-5021, -570);
      a.lineTo(-4877, -498);
      a.moveTo(-5541, -820);
      a.lineTo(-5395, -757);
      a.moveTo(-5286, -704);
      a.lineTo(-5148, -633);
      a.moveTo(-5764, -898);
      a.lineTo(-5616, -848);
      a.moveTo(-1089, 209);
      a.lineTo(-1096, 228);
      a.moveTo(-3830, -1258);
      a.lineTo(-3881, -1275);
      a.quadraticCurveTo(-4013, -1320, -4155, -1354);
      a.moveTo(-3485, -1146);
      a.lineTo(-3735, -1226);
      a.moveTo(-4276, -1381);
      a.quadraticCurveTo(-4450, -1416, -4638, -1435);
      a.moveTo(-4753, -1445);
      a.lineTo(-4841, -1451);
      a.lineTo(-5164, -1451);
      a.moveTo(-4466, -302);
      a.lineTo(-4297, -228);
      a.moveTo(-4738, -431);
      a.lineTo(-4600, -365);
      a.moveTo(-3927, -86);
      a.lineTo(-3828, -53);
      a.lineTo(-3752, -30);
      a.moveTo(-4164, -173);
      a.lineTo(-4026, -121);
      a.moveTo(-3154, -1053);
      a.lineTo(-3196, -1064);
      a.lineTo(-3344, -1104);
      a.moveTo(-2318, -860);
      a.lineTo(-2561, -908);
      a.lineTo(-2603, -918);
      a.moveTo(-2642, -594);
      a.quadraticCurveTo(-2645, -629, -2639, -649);
      a.lineTo(-2637, -655);
      a.lineTo(-2670, -666);
      a.lineTo(-2902, -744);
      a.moveTo(-2637, -655);
      a.quadraticCurveTo(-2623, -690, -2558, -735);
      a.moveTo(-2516, -538);
      a.quadraticCurveTo(-2504, -566, -2479, -591);
      a.lineTo(-2475, -595);
      a.lineTo(-2637, -655);
      a.moveTo(-1707, -791);
      a.lineTo(-1847, -802);
      a.moveTo(-2290, -518);
      a.quadraticCurveTo(-2127, -447, -1976, -367);
      a.lineTo(-1922, -338);
      a.moveTo(-1965, -814);
      a.lineTo(-2195, -841);
      a.moveTo(-2746, -952);
      a.lineTo(-3020, -1020);
      a.moveTo(-2411, -637);
      a.quadraticCurveTo(-2447, -621, -2475, -595);
      a.lineTo(-2421, -573);
      a.moveTo(-1545, -215);
      a.quadraticCurveTo(-1571, -202, -1607, -163);
      a.quadraticCurveTo(-1485, -94, -1369, -23);
      a.moveTo(-1651, -103);
      a.quadraticCurveTo(-1647, -118, -1612, -158);
      a.lineTo(-1607, -163);
      a.lineTo(-1792, -268);
      a.moveTo(-181, -896);
      a.lineTo(-260, -827);
      a.moveTo(-540, -635);
      a.lineTo(-638, -581);
      a.moveTo(-20, -201);
      a.lineTo(-168, -282);
      a.moveTo(-271, -336);
      a.lineTo(-465, -435);
      a.moveTo(-363, -743);
      a.lineTo(-425, -701);
      a.moveTo(-558, -480);
      a.lineTo(-654, -526);
      a.moveTo(-768, -579);
      a.quadraticCurveTo(-842, -612, -920, -637);
      a.moveTo(78, -1122);
      a.lineTo(-61, -1002);
      a.lineTo(-98, -969);
      a.moveTo(-3436, -903);
      a.quadraticCurveTo(-3234, -848, -3037, -786);
      a.moveTo(-1164, 108);
      a.lineTo(-1131, 51);
      a.moveTo(-1201, 165);
      a.lineTo(-1187, 142);
      a.moveTo(-1089, 209);
      a.lineTo(-1066, 175);
      a.lineTo(-1164, 108);
      a.moveTo(-1060, 260);
      a.quadraticCurveTo(-1053,
        241, -1028, 213);
      a.lineTo(-1022, 207);
      a.lineTo(-1066, 175);
      a.lineTo(-1061, 168);
      a.quadraticCurveTo(-1025, 124, -997, 114);
      a.moveTo(-829, 270);
      a.quadraticCurveTo(-861, 289, -882, 311);
      a.lineTo(-808, 368);
      a.moveTo(-882, 311);
      a.quadraticCurveTo(-905, 334, -913, 361);
      a.moveTo(-948, 149);
      a.quadraticCurveTo(-991, 174, -1022, 207);
      a.lineTo(-882, 311);
      a.moveTo(-3672, -7);
      a.lineTo(-3555, 23)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4611);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-511, -1436);
      a.quadraticCurveTo(-578, -1436, -653, -1410);
      a.quadraticCurveTo(-750, -1377, -878, -1294);
      a.quadraticCurveTo(-1014, -1205, -1087, -1169);
      a.quadraticCurveTo(-1142, -1141, -1188, -1129);
      a.lineTo(-1195, -1127);
      a.quadraticCurveTo(-1384, -945, -1481, -700);
      a.quadraticCurveTo(-1678, -205, -1473, 277);
      a.quadraticCurveTo(-1521, 322, -1569, 348);
      a.quadraticCurveTo(-1611, 370, -1661, 383);
      a.lineTo(-1745, 466);
      a.lineTo(-1847, 564);
      a.quadraticCurveTo(-2008, 702, -2110, 702);
      a.quadraticCurveTo(-2111, 702, -2111, 702);
      a.lineTo(-2111, 702);
      a.quadraticCurveTo(-2018, 720, -1972, 803);
      a.quadraticCurveTo(-1935,
        873, -1962, 1012);
      a.lineTo(-1964, 1023);
      a.lineTo(-1839, 1003);
      a.quadraticCurveTo(-1753, 1003, -1721, 1100);
      a.quadraticCurveTo(-1709, 1136, -1698, 1200);
      a.quadraticCurveTo(-1588, 1171, -1445, 1052);
      a.quadraticCurveTo(-1315, 943, -1245, 847);
      a.quadraticCurveTo(-1218, 904, -1144, 1132);
      a.quadraticCurveTo(-1102, 1238, -1054, 1316);
      a.quadraticCurveTo(-949, 1384, -836, 1437);
      a.quadraticCurveTo(-716, 1494, -588, 1533);
      a.quadraticCurveTo(-310, 1620, -17, 1628);
      a.quadraticCurveTo(12, 1629, 41, 1629);
      a.quadraticCurveTo(299, 1629, 550, 1566);
      a.lineTo(561,
        1563);
      a.quadraticCurveTo(702, 1521, 837, 1461);
      a.quadraticCurveTo(1086, 1133, 1238, 753);
      a.quadraticCurveTo(1389, 372, 1301, -51);
      a.quadraticCurveTo(1213, -476, 873, -608);
      a.quadraticCurveTo(873, -608, 873, -608);
      a.lineTo(873, -608);
      a.lineTo(566, -598);
      a.quadraticCurveTo(453, -589, 340, -589);
      a.quadraticCurveTo(43, -589, -245, -649);
      a.quadraticCurveTo(-664, -735, -809, -1138);
      a.quadraticCurveTo(-695, -1325, -506, -1436);
      a.quadraticCurveTo(-508, -1436, -511, -1436);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4611);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-1245, 847);
      a.quadraticCurveTo(-1315, 943, -1445, 1052);
      a.quadraticCurveTo(-1588, 1171, -1698, 1200);
      a.lineTo(-1687, 1276);
      a.quadraticCurveTo(-1643, 1232, -1552, 1204);
      a.lineTo(-1396, 1163);
      a.lineTo(-1343, 1144);
      a.lineTo(-1303, 1122);
      a.quadraticCurveTo(-1213, 1206, -1113, 1275);
      a.lineTo(-1054, 1316);
      a.quadraticCurveTo(-1102, 1238, -1144, 1132);
      a.quadraticCurveTo(-1218, 904, -1245, 847);
      a.closePath();
      a.moveTo(203, -1627);
      a.quadraticCurveTo(-169, -1627, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.quadraticCurveTo(-664, -735, -245, -649);
      a.quadraticCurveTo(44, -589, 340, -589);
      a.quadraticCurveTo(452, -589, 566, -598);
      a.lineTo(873, -608);
      a.quadraticCurveTo(1213, -476, 1301, -51);
      a.quadraticCurveTo(1389, 372, 1238, 753);
      a.quadraticCurveTo(1086, 1133, 837, 1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275, 1221, 1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632, 1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.quadraticCurveTo(2028, 792, 1933, 741);
      a.quadraticCurveTo(2014, 696, 2103, 683);
      a.lineTo(2103, 672);
      a.quadraticCurveTo(1833, 633, 1624, 483);
      a.lineTo(1581, 451);
      a.lineTo(1585, 439);
      a.quadraticCurveTo(1461, 297, 1434, 244);
      a.lineTo(1432, 240);
      a.quadraticCurveTo(1522, 18, 1560, -281);
      a.quadraticCurveTo(1610, -669, 1341, -1139);
      a.lineTo(1328, -1132);
      a.lineTo(1288, -1126);
      a.quadraticCurveTo(1217, -1126, 1135, -1201);
      a.quadraticCurveTo(1086, -1246, 1043, -1254);
      a.lineTo(1043, -1254);
      a.quadraticCurveTo(1043, -1254,
        1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(295, -1627, 203, -1627);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4611);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1585, 439);
      a.lineTo(1624, 483);
      a.moveTo(2096, 874);
      a.lineTo(2111, 876);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(1073, -1208, 1097, -1155);
      a.quadraticCurveTo(1156, -1025, 1034, -893);
      a.moveTo(902, -694);
      a.quadraticCurveTo(924, -747, 959, -798);
      a.moveTo(936, -144);
      a.quadraticCurveTo(910, -212, 893, -271);
      a.moveTo(861, -426);
      a.quadraticCurveTo(856, -473, 859, -512);
      a.quadraticCurveTo(861, -559, 873, -608);
      a.moveTo(-809, -1138);
      a.lineTo(-816, -1126);
      a.quadraticCurveTo(-833, -1073, -838, -1018);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(-88, -1673, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.moveTo(1851, 861);
      a.lineTo(1739, 839);
      a.moveTo(1655, 816);
      a.lineTo(1639, 811);
      a.lineTo(1596, 798);
      a.moveTo(2096, 874);
      a.lineTo(1948, 868);
      a.moveTo(1581, 451);
      a.lineTo(1585, 439);
      a.moveTo(1117, 367);
      a.quadraticCurveTo(1104, 260, 1067, 158);
      a.moveTo(1540, 828);
      a.lineTo(1545, 810);
      a.lineTo(1552, 783);
      a.lineTo(1574, 664);
      a.moveTo(1581, 451);
      a.lineTo(1581, 557);
      a.moveTo(1047, 885);
      a.quadraticCurveTo(1127, 668, 1124, 467);
      a.moveTo(561, 1563);
      a.lineTo(675, 1471);
      a.moveTo(1433, 1007);
      a.quadraticCurveTo(1485, 954, 1517, 889);
      a.moveTo(930, 1139);
      a.lineTo(1007, 984);
      a.moveTo(773, 1368);
      a.lineTo(858,
        1257);
      a.moveTo(1021, 51);
      a.lineTo(974, -51);
      a.moveTo(-811, -775);
      a.lineTo(-831, -855);
      a.moveTo(-730, -579);
      a.quadraticCurveTo(-741, -617, -760, -654);
      a.lineTo(-766, -666);
      a.moveTo(-792, -126);
      a.quadraticCurveTo(-769, -183, -752, -242);
      a.moveTo(-736, -314);
      a.quadraticCurveTo(-725, -372, -720, -431);
      a.moveTo(-926, 49);
      a.lineTo(-903, 76);
      a.lineTo(-839, -27);
      a.moveTo(-982, 129);
      a.lineTo(-962, 156);
      a.lineTo(-940, 126);
      a.lineTo(-903, 76);
      a.lineTo(-897, 85);
      a.lineTo(-854, 145);
      a.moveTo(-962, 156);
      a.lineTo(-951, 168);
      a.lineTo(-894,
        217);
      a.moveTo(-1062, 257);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1005, 215, -962, 156);
      a.moveTo(-974, 321);
      a.lineTo(-1022, 288);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1067, 349, -1083, 424);
      a.lineTo(-1077, 424);
      a.lineTo(-998, 425);
      a.moveTo(-1150, 465);
      a.lineTo(-1092, 471);
      a.lineTo(-1083, 424);
      a.lineTo(-1126, 417);
      a.moveTo(-1092, 471);
      a.lineTo(-982, 473);
      a.moveTo(-1385, 901);
      a.lineTo(-1419, 869);
      a.lineTo(-1445, 843);
      a.moveTo(-1517, 769);
      a.lineTo(-1559, 723);
      a.lineTo(-1581, 699);
      a.lineTo(-1592, 687);
      a.moveTo(-1059, 888);
      a.lineTo(-1087, 752);
      a.moveTo(-1092, 471);
      a.quadraticCurveTo(-1105, 553, -1100, 640);
      a.lineTo(-1093, 641);
      a.quadraticCurveTo(-1039, 646, -1014, 641);
      a.moveTo(-1098, 673);
      a.lineTo(-1100, 640);
      a.lineTo(-1150, 633);
      a.moveTo(-977, 1143);
      a.lineTo(-1024, 1011);
      a.moveTo(-836, 1437);
      a.lineTo(-931, 1253);
      a.moveTo(-1236, 1019);
      a.lineTo(-1326, 952);
      a.moveTo(-1962, 1012);
      a.lineTo(-1801, 916);
      a.lineTo(-1777, 900);
      a.moveTo(-1644, 623);
      a.lineTo(-1697, 548);
      a.moveTo(-1710, 852);
      a.lineTo(-1662, 813);
      a.lineTo(-1595, 756);
      a.moveTo(-1720, 511);
      a.lineTo(-1745, 466)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4611);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1333, -1153);
      a.lineTo(1341, -1139);
      a.quadraticCurveTo(1610, -669, 1560, -281);
      a.quadraticCurveTo(1522, 18, 1432, 240);
      a.moveTo(1624, 483);
      a.quadraticCurveTo(1833, 633, 2103, 672);
      a.lineTo(2103, 683);
      a.quadraticCurveTo(2014, 696, 1933, 741);
      a.quadraticCurveTo(2028, 792, 2096, 874);
      a.moveTo(837,
        1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275, 1221, 1473, 1038);
      a.lineTo(1433, 1007);
      a.lineTo(1354, 938);
      a.moveTo(1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632, 1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.moveTo(1432, 240);
      a.lineTo(1371, 372);
      a.moveTo(1581, 451);
      a.lineTo(1566, 438);
      a.moveTo(837, 1461);
      a.quadraticCurveTo(702, 1521, 561, 1563);
      a.lineTo(550, 1566);
      a.quadraticCurveTo(270, 1636, -17, 1628);
      a.quadraticCurveTo(-310, 1620, -588, 1533);
      a.quadraticCurveTo(-716, 1494, -836, 1437);
      a.quadraticCurveTo(-949, 1384, -1054, 1316);
      a.lineTo(-1113, 1275);
      a.quadraticCurveTo(-1213, 1206, -1303, 1122);
      a.lineTo(-1343, 1144);
      a.lineTo(-1396, 1163);
      a.lineTo(-1552, 1204);
      a.quadraticCurveTo(-1643, 1232, -1687, 1276);
      a.lineTo(-1698, 1200);
      a.quadraticCurveTo(-1709, 1136, -1721, 1100);
      a.quadraticCurveTo(-1753, 1003, -1839, 1003);
      a.lineTo(-1964, 1023);
      a.lineTo(-1962, 1012);
      a.quadraticCurveTo(-1935, 873, -1972, 803);
      a.quadraticCurveTo(-2018,
        720, -2111, 702);
      a.quadraticCurveTo(-2009, 703, -1847, 564);
      a.lineTo(-1745, 466);
      a.lineTo(-1661, 383);
      a.lineTo(-1630, 353);
      a.moveTo(1624, 483);
      a.lineTo(1581, 451);
      a.moveTo(-1473, 277);
      a.quadraticCurveTo(-1678, -205, -1481, -700);
      a.quadraticCurveTo(-1384, -945, -1195, -1127);
      a.moveTo(-1452, 325);
      a.lineTo(-1473, 277);
      a.moveTo(-1303, 1122);
      a.quadraticCurveTo(-1285, 1110, -1272, 1096);
      a.quadraticCurveTo(-1244, 1065, -1236, 1019);
      a.quadraticCurveTo(-1230, 986, -1235, 946)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4038);
      a.fillStyle =
        "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(-1533, -1810);
      a.lineTo(-1556, -1763);
      a.quadraticCurveTo(-1589, -1690, -1604, -1603);
      a.quadraticCurveTo(-1634, -1434, -1628, -1259);
      a.quadraticCurveTo(-1624, -1128, -1578, -1017);
      a.quadraticCurveTo(-1534, -1127, -1506, -1266);
      a.quadraticCurveTo(-1478, -1406, -1483, -1522);
      a.quadraticCurveTo(-1488, -1638, -1501, -1699);
      a.lineTo(-1533, -1810);
      a.closePath();
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1768, -1635, 1734, -1473);
      a.quadraticCurveTo(1699, -1312, 1677, -1133);
      a.quadraticCurveTo(1655, -955, 1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.quadraticCurveTo(1795, -843, 1815, -911);
      a.quadraticCurveTo(1843, -1010, 1858, -1122);
      a.quadraticCurveTo(1871, -1221, 1872, -1344);
      a.lineTo(1869, -1428);
      a.lineTo(1859, -1535);
      a.lineTo(1858, -1547);
      a.lineTo(1851, -1595);
      a.quadraticCurveTo(1846, -1642, 1823, -1690);
      a.lineTo(1821, -1692);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4038);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(257, -3296);
      a.quadraticCurveTo(234, -3208, 234, -3032);
      a.quadraticCurveTo(234, -2810, 289, -2652);
      a.quadraticCurveTo(314, -2580, 404, -2402);
      a.lineTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(535, -2385);
      a.quadraticCurveTo(904, -2083, 985, -1597);
      a.quadraticCurveTo(1061, -1141, 982, -686);
      a.quadraticCurveTo(907, -252, 649, 108);
      a.quadraticCurveTo(489, 332, 278, 503);
      a.lineTo(294, 494);
      a.quadraticCurveTo(441, 412, 517, 344);
      a.lineTo(607, 265);
      a.lineTo(685, 215);
      a.quadraticCurveTo(760, 167, 902, 100);
      a.lineTo(903, 99);
      a.quadraticCurveTo(1045, 31, 1189, -109);
      a.lineTo(1197, -117);
      a.lineTo(1261, -184);
      a.lineTo(1294, -218);
      a.lineTo(1358, -293);
      a.quadraticCurveTo(1432, -377, 1482, -474);
      a.quadraticCurveTo(1524, -553, 1548, -641);
      a.lineTo(1563, -680);
      a.quadraticCurveTo(1582, -721, 1627, -728);
      a.lineTo(1706, -722);
      a.lineTo(1712, -725);
      a.quadraticCurveTo(1735, -742, 1743, -770);
      a.lineTo(1754, -811);
      a.lineTo(1754, -811);
      a.quadraticCurveTo(1734, -796, 1711, -789);
      a.lineTo(1665, -781);
      a.quadraticCurveTo(1663, -781, 1662, -781);
      a.quadraticCurveTo(1620, -781, 1589, -807);
      a.quadraticCurveTo(1541, -849, 1540, -985);
      a.quadraticCurveTo(1543, -1069, 1560, -1193);
      a.quadraticCurveTo(1577, -1318, 1596, -1408);
      a.lineTo(1616, -1514);
      a.lineTo(1658, -1645);
      a.quadraticCurveTo(1691, -1743, 1747, -1743);
      a.quadraticCurveTo(1752, -1743, 1757, -1742);
      a.quadraticCurveTo(1794, -1729, 1821, -1692);
      a.lineTo(1823, -1690);
      a.quadraticCurveTo(1831, -1776, 1821, -1809);
      a.lineTo(1786, -1888);
      a.quadraticCurveTo(1761, -1934, 1704, -1955);
      a.lineTo(1679, -1963);
      a.lineTo(1618, -1967);
      a.quadraticCurveTo(1492, -1830, 1429, -1653);
      a.lineTo(1402, -1578);
      a.quadraticCurveTo(1357, -1711, 1366, -1853);
      a.quadraticCurveTo(1370, -1912, 1400, -1962);
      a.quadraticCurveTo(1309, -1970, 1252, -2008);
      a.lineTo(1243, -2015);
      a.lineTo(1101, -2129);
      a.lineTo(987, -2219);
      a.quadraticCurveTo(939, -2253, 873, -2287);
      a.lineTo(833, -2328);
      a.quadraticCurveTo(730, -2436, 657, -2562);
      a.lineTo(581, -2696);
      a.quadraticCurveTo(534, -2779, 488, -2893);
      a.quadraticCurveTo(442, -3007, 429, -3077);
      a.lineTo(408, -3192);
      a.lineTo(401, -3237);
      a.quadraticCurveTo(394, -3288, 390, -3338);
      a.lineTo(389, -3343);
      a.lineTo(384, -3402);
      a.lineTo(383, -3430);
      a.lineTo(381, -3453);
      a.lineTo(377, -3479);
      a.lineTo(373, -3506);
      a.lineTo(370, -3529);
      a.lineTo(365, -3555);
      a.lineTo(355, -3594);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4038);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1579, -1967);
      a.lineTo(1505, -1963);
      a.lineTo(1497, -1963);
      a.quadraticCurveTo(1467, -1961, 1439, -1961);
      a.quadraticCurveTo(1418, -1961, 1400, -1962);
      a.quadraticCurveTo(1370, -1912, 1366, -1853);
      a.quadraticCurveTo(1357, -1711, 1402, -1578);
      a.lineTo(1429, -1653);
      a.quadraticCurveTo(1492, -1830, 1618, -1967);
      a.closePath();
      a.moveTo(278, -3664);
      a.lineTo(203, -3566);
      a.lineTo(149, -3489);
      a.lineTo(113, -3449);
      a.lineTo(68, -3405);
      a.lineTo(-1, -3314);
      a.lineTo(-2, -3313);
      a.lineTo(-62, -3219);
      a.lineTo(-111, -3132);
      a.lineTo(-158, -3050);
      a.lineTo(-216, -2952);
      a.lineTo(-249, -2898);
      a.lineTo(-284, -2842);
      a.lineTo(-322, -2782);
      a.lineTo(-354, -2731);
      a.lineTo(-388, -2681);
      a.lineTo(-422, -2631);
      a.lineTo(-481, -2551);
      a.lineTo(-535, -2479);
      a.lineTo(-601, -2397);
      a.lineTo(-678, -2306);
      a.lineTo(-721, -2256);
      a.quadraticCurveTo(-894, -2191, -1046, -2105);
      a.quadraticCurveTo(-1199, -2020, -1302, -1940);
      a.lineTo(-1349, -1966);
      a.quadraticCurveTo(-1397, -1994, -1433, -1994);
      a.quadraticCurveTo(-1474, -1994, -1500, -1957);
      a.quadraticCurveTo(-1498, -1920, -1482, -1886);
      a.lineTo(-1457, -1830);
      a.lineTo(-1454, -1823);
      a.lineTo(-1445, -1802);
      a.lineTo(-1440, -1790);
      a.quadraticCurveTo(-1418, -1735, -1406, -1676);
      a.quadraticCurveTo(-1331, -1314, -1496, -1018);
      a.lineTo(-1526, -969);
      a.lineTo(-1542, -945);
      a.lineTo(-1552, -931);
      a.quadraticCurveTo(-1553, -870, -1511, -841);
      a.quadraticCurveTo(-1500, -833, -1485, -833);
      a.quadraticCurveTo(-1465, -833, -1437, -848);
      a.quadraticCurveTo(-1339, -789, -1327, -697);
      a.quadraticCurveTo(-1315, -606, -1307, -485);
      a.quadraticCurveTo(-1299, -364, -1198, -222);
      a.quadraticCurveTo(-1097, -80, -1037, -7);
      a.quadraticCurveTo(-977, 64, -857, 170);
      a.lineTo(-600, 393);
      a.quadraticCurveTo(-533, 451, -459, 490);
      a.quadraticCurveTo(-383, 529, -301, 548);
      a.quadraticCurveTo(-202, 571, -101, 571);
      a.quadraticCurveTo(-65, 571, -29, 568);
      a.quadraticCurveTo(-13, 569, 3, 569);
      a.quadraticCurveTo(151, 569, 278, 503);
      a.quadraticCurveTo(489,
        332, 649, 108);
      a.quadraticCurveTo(907, -252, 982, -686);
      a.quadraticCurveTo(1061, -1141, 985, -1597);
      a.quadraticCurveTo(904, -2083, 535, -2385);
      a.lineTo(531, -2386);
      a.lineTo(404, -2402);
      a.quadraticCurveTo(314, -2580, 289, -2652);
      a.quadraticCurveTo(234, -2810, 234, -3032);
      a.quadraticCurveTo(234, -3208, 257, -3296);
      a.lineTo(355, -3594);
      a.lineTo(351, -3608);
      a.quadraticCurveTo(341, -3646, 278, -3664);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4038);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(-1482, -1886);
      a.quadraticCurveTo(-1511, -1851, -1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.lineTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.closePath();
      a.moveTo(1747, -1743);
      a.quadraticCurveTo(1691, -1743, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318, 1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1620, -781, 1662, -781);
      a.quadraticCurveTo(1664, -781, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1752, -1743, 1747, -1743);
      a.closePath()
    }, function(a) {
      a.transform(0.48,
        0, 0, 0.48, 5486, 4038);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(365, -3555);
      a.lineTo(370, -3529);
      a.lineTo(373, -3506);
      a.lineTo(377, -3479);
      a.lineTo(381, -3453);
      a.lineTo(383, -3430);
      a.lineTo(384, -3402);
      a.lineTo(389, -3343);
      a.lineTo(390, -3338);
      a.quadraticCurveTo(394, -3288, 401, -3237);
      a.lineTo(408, -3192);
      a.lineTo(429, -3077);
      a.quadraticCurveTo(442, -3007, 488, -2893);
      a.quadraticCurveTo(534, -2779, 581, -2696);
      a.lineTo(657, -2562);
      a.quadraticCurveTo(730, -2436, 833, -2328);
      a.lineTo(873, -2287);
      a.quadraticCurveTo(939, -2253, 987, -2219);
      a.lineTo(1101, -2129);
      a.lineTo(1243, -2015);
      a.lineTo(1252, -2008);
      a.quadraticCurveTo(1309, -1970, 1400, -1962);
      a.quadraticCurveTo(1444, -1959, 1497, -1963);
      a.lineTo(1505, -1963);
      a.lineTo(1579, -1967);
      a.lineTo(1618, -1967);
      a.lineTo(1679, -1963);
      a.lineTo(1704, -1955);
      a.quadraticCurveTo(1761, -1934, 1786, -1888);
      a.lineTo(1821, -1809);
      a.quadraticCurveTo(1831, -1776, 1823, -1690);
      a.quadraticCurveTo(1846, -1642, 1851, -1595);
      a.lineTo(1858, -1547);
      a.lineTo(1859, -1535);
      a.lineTo(1869, -1428);
      a.lineTo(1872, -1344);
      a.quadraticCurveTo(1871, -1221, 1858, -1122);
      a.quadraticCurveTo(1843, -1010, 1815, -911);
      a.quadraticCurveTo(1795, -843, 1754, -811);
      a.lineTo(1743, -770);
      a.quadraticCurveTo(1735, -742, 1712, -725);
      a.lineTo(1706, -722);
      a.lineTo(1627, -728);
      a.quadraticCurveTo(1582, -721, 1563, -680);
      a.lineTo(1548, -641);
      a.quadraticCurveTo(1524, -553, 1482, -474);
      a.quadraticCurveTo(1432, -377, 1358, -293);
      a.lineTo(1294, -218);
      a.lineTo(1261, -184);
      a.lineTo(1197, -117);
      a.lineTo(1189, -109);
      a.quadraticCurveTo(1045, 31, 903, 99);
      a.moveTo(902, 100);
      a.quadraticCurveTo(760, 167, 685, 215);
      a.lineTo(607, 265);
      a.lineTo(517, 344);
      a.quadraticCurveTo(441, 412, 294, 494);
      a.lineTo(278, 503);
      a.quadraticCurveTo(137, 576, -29, 568);
      a.quadraticCurveTo(-167, 579, -301, 548);
      a.quadraticCurveTo(-383, 529, -459, 490);
      a.quadraticCurveTo(-533, 451, -600, 393);
      a.lineTo(-857, 170);
      a.quadraticCurveTo(-977, 64, -1037, -7);
      a.quadraticCurveTo(-1097, -80, -1198, -222);
      a.quadraticCurveTo(-1299, -364, -1307, -485);
      a.quadraticCurveTo(-1315, -606, -1327, -697);
      a.quadraticCurveTo(-1339, -789, -1437, -848);
      a.quadraticCurveTo(-1485, -823, -1511, -841);
      a.quadraticCurveTo(-1553, -870, -1552, -931);
      a.lineTo(-1542, -945);
      a.lineTo(-1578, -1017);
      a.quadraticCurveTo(-1624, -1128, -1628, -1259);
      a.quadraticCurveTo(-1634, -1434, -1604, -1603);
      a.quadraticCurveTo(-1589, -1690, -1556, -1763);
      a.lineTo(-1533, -1810);
      a.quadraticCurveTo(-1511, -1851, -1482, -1886);
      a.quadraticCurveTo(-1498, -1920, -1500, -1957);
      a.quadraticCurveTo(-1452, -2026, -1349, -1966);
      a.lineTo(-1302, -1940);
      a.quadraticCurveTo(-1199, -2020, -1046, -2105);
      a.quadraticCurveTo(-894, -2191, -721, -2256);
      a.lineTo(-678, -2306);
      a.lineTo(-601, -2397);
      a.lineTo(-535, -2479);
      a.lineTo(-481, -2551);
      a.lineTo(-422, -2631);
      a.lineTo(-388, -2681);
      a.lineTo(-354, -2731);
      a.lineTo(-322, -2782);
      a.lineTo(-284, -2842);
      a.lineTo(-249, -2898);
      a.lineTo(-216, -2952);
      a.lineTo(-158, -3050);
      a.lineTo(-111, -3132);
      a.lineTo(-62, -3219);
      a.lineTo(-2, -3313);
      a.lineTo(-1, -3314);
      a.lineTo(68, -3405);
      a.lineTo(113, -3449);
      a.lineTo(149, -3489);
      a.lineTo(203, -3566);
      a.lineTo(278, -3664);
      a.quadraticCurveTo(341, -3646, 351, -3608);
      a.lineTo(355, -3594);
      a.moveTo(404, -2402);
      a.lineTo(531, -2386);
      a.moveTo(404, -2402);
      a.lineTo(303, -2408);
      a.moveTo(535, -2385);
      a.lineTo(604, -2373);
      a.lineTo(705, -2350);
      a.quadraticCurveTo(788, -2328, 843, -2301);
      a.lineTo(873, -2287);
      a.moveTo(531, -2386);
      a.lineTo(535, -2385);
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1694, -1751, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318,
        1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1621, -780, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.closePath();
      a.moveTo(1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.moveTo(-420, -2347);
      a.quadraticCurveTo(-568, -2313, -721, -2256);
      a.moveTo(-420, -2347);
      a.lineTo(-382, -2355);
      a.quadraticCurveTo(-215, -2390, -44, -2398);
      a.moveTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.moveTo(-1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.moveTo(-1302, -1940);
      a.quadraticCurveTo(-1237, -1897, -1172, -1831);
      a.moveTo(-1373, -895);
      a.quadraticCurveTo(-1409, -864, -1437, -848)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4038);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(903, 99);
      a.lineTo(902, 100);
      a.moveTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(488, -2488);
      a.moveTo(390, -3338);
      a.quadraticCurveTo(368, -3290, 354, -3242);
      a.moveTo(33, -3088);
      a.lineTo(33, -3128);
      a.lineTo(30, -3177);
      a.moveTo(335, -3159);
      a.quadraticCurveTo(327, -3115, 326, -3071);
      a.moveTo(424, -2649);
      a.lineTo(452, -2577);
      a.moveTo(363, -2815);
      a.lineTo(370, -2795);
      a.lineTo(393, -2732);
      a.moveTo(705, -2350);
      a.lineTo(790, -2265);
      a.moveTo(856, -2190);
      a.lineTo(898, -2140);
      a.moveTo(328, -2981);
      a.lineTo(341, -2898);
      a.moveTo(11, -2889);
      a.lineTo(29, -3013);
      a.moveTo(1164, -1579);
      a.lineTo(1204, -1591);
      a.lineTo(1208, -1591);
      a.quadraticCurveTo(1158, -1743, 1076, -1882);
      a.lineTo(1068, -1895);
      a.moveTo(1310, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1263, -1363);
      a.lineTo(1280, -1237);
      a.lineTo(1307, -1244);
      a.lineTo(1359, -1258);
      a.moveTo(1211, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1239, -1483);
      a.lineTo(1218, -1481);
      a.lineTo(1179, -1475);
      a.moveTo(1347, -1087);
      a.lineTo(1290, -1083);
      a.lineTo(1291, -998);
      a.lineTo(1324, -998);
      a.moveTo(1239, -998);
      a.lineTo(1291, -998);
      a.lineTo(1289, -938);
      a.lineTo(1343, -941);
      a.moveTo(1234, -1083);
      a.lineTo(1276, -1083);
      a.lineTo(1290, -1083);
      a.lineTo(1287, -1146);
      a.lineTo(1280, -1237);
      a.lineTo(1229, -1220);
      a.moveTo(1291, -1594);
      a.lineTo(1208, -1591);
      a.lineTo(1239, -1483);
      a.lineTo(1315, -1485);
      a.moveTo(1234, -938);
      a.lineTo(1246, -938);
      a.lineTo(1289, -938);
      a.lineTo(1284, -855);
      a.moveTo(1334, -683);
      a.lineTo(1264, -689);
      a.lineTo(1253, -630);
      a.moveTo(1206, -703);
      a.lineTo(1249, -693);
      a.lineTo(1264, -689);
      a.lineTo(1275, -761);
      a.moveTo(1281, -476);
      a.lineTo(1214, -476);
      a.lineTo(1204, -445);
      a.moveTo(1159, -490);
      a.lineTo(1191, -479);
      a.lineTo(1214, -476);
      a.lineTo(1233, -543);
      a.moveTo(1161, -336);
      a.lineTo(1147, -306);
      a.quadraticCurveTo(1045, -100, 903, 99);
      a.moveTo(958, -2062);
      a.lineTo(1015, -1979);
      a.moveTo(-55, -2701);
      a.lineTo(-33, -2747);
      a.lineTo(-15, -2791);
      a.moveTo(-160, -2552);
      a.quadraticCurveTo(-124, -2592, -95, -2635);
      a.moveTo(-801, -2035);
      a.lineTo(-771, -2068);
      a.lineTo(-710, -2127);
      a.moveTo(-540, -2261);
      a.lineTo(-420, -2347);
      a.moveTo(-653, -2174);
      a.lineTo(-600, -2217);
      a.moveTo(-369, -2375);
      a.lineTo(-316, -2412);
      a.moveTo(-273, -2445);
      a.lineTo(-208, -2502);
      a.moveTo(-1250, -769);
      a.quadraticCurveTo(-1301, -970, -1270, -1196);
      a.quadraticCurveTo(-1251, -1332, -1185, -1487);
      a.lineTo(-1152, -1557);
      a.moveTo(-1082, -1679);
      a.lineTo(-997, -1800);
      a.lineTo(-857, -1972);
      a.moveTo(-1188, -588);
      a.lineTo(-1182, -573);
      a.quadraticCurveTo(-1161, -588, -1140, -590);
      a.moveTo(-1045, -462);
      a.quadraticCurveTo(-1079, -455, -1116, -429);
      a.lineTo(-1117, -428);
      a.lineTo(-1094, -380);
      a.lineTo(-1091, -382);
      a.lineTo(-1031, -415);
      a.moveTo(-1158, -391);
      a.quadraticCurveTo(-1148, -408, -1117, -428);
      a.lineTo(-1139, -474);
      a.lineTo(-1143, -472);
      a.lineTo(-1182, -443);
      a.moveTo(-1067, -328);
      a.lineTo(-1094, -380);
      a.quadraticCurveTo(-1115, -368, -1122, -360);
      a.moveTo(-1182, -573);
      a.lineTo(-1139, -474);
      a.quadraticCurveTo(-1103, -498, -1073, -508);
      a.moveTo(-1182, -573);
      a.lineTo(-1218, -540);
      a.moveTo(-684, 238);
      a.lineTo(-790, 107);
      a.moveTo(-459, 490);
      a.lineTo(-627, 305);
      a.moveTo(21, -3237);
      a.lineTo(-1, -3314);
      a.moveTo(-849, 29);
      a.lineTo(-933, -93)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4038);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 60;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1821, -1692);
      a.lineTo(1823, -1690)
    }]
  }
}

function make_baby_1(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4484);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-5977, -2450);
      a.quadraticCurveTo(-6167, -2450, -6346, -2366);
      a.lineTo(-6384, -2346);
      a.quadraticCurveTo(-6268, -2367, -6151, -2367);
      a.quadraticCurveTo(-6018, -2367, -5885, -2340);
      a.lineTo(-5609, -2243);
      a.lineTo(-5576, -2266);
      a.quadraticCurveTo(-5464, -2328, -5335, -2337);
      a.lineTo(-5341, -2406);
      a.quadraticCurveTo(-5531, -2438, -5724, -2438);
      a.quadraticCurveTo(-5772, -2438, -5820, -2436);
      a.quadraticCurveTo(-5899, -2450, -5977, -2450);
      a.closePath();
      a.moveTo(-6056, -2214);
      a.lineTo(-6056, -2214);
      a.quadraticCurveTo(-5730, -2092, -5468, -1857);
      a.quadraticCurveTo(-5198, -1613, -5048, -1282);
      a.quadraticCurveTo(-4917, -991, -4639, -828);
      a.quadraticCurveTo(-4388, -681, -4129, -550);
      a.quadraticCurveTo(-3814, -390, -3518, -201);
      a.quadraticCurveTo(-3221, -12, -2939, 201);
      a.quadraticCurveTo(-2666, 411, -2327, 442);
      a.lineTo(-2327, 443);
      a.quadraticCurveTo(-2132, 405, -1937, 405);
      a.quadraticCurveTo(-1789, 405, -1640, 427);
      a.quadraticCurveTo(-1313, 477, -1013, 609);
      a.quadraticCurveTo(-718, 738, -431, 886);
      a.quadraticCurveTo(-237, 986, -39, 1068);
      a.quadraticCurveTo(112, 788, 230, 494);
      a.quadraticCurveTo(341, 215, 360, -81);
      a.quadraticCurveTo(385, -462, 280, -828);
      a.quadraticCurveTo(202, -1101, 60, -1347);
      a.quadraticCurveTo(-55, -1209, -173, -1143);
      a.quadraticCurveTo(-292, -1077, -384, -1046);
      a.quadraticCurveTo(-273, -707, -478, -402);
      a.quadraticCurveTo(-595, -229, -773, -229);
      a.quadraticCurveTo(-852, -229, -942, -263);
      a.quadraticCurveTo(-1228, -369, -1463, -566);
      a.quadraticCurveTo(-1674, -741, -1898, -905);
      a.lineTo(-1898, -905);
      a.quadraticCurveTo(-1721, -403, -1274, -109);
      a.lineTo(-1035, 58);
      a.lineTo(-960, 135);
      a.lineTo(-945, 168);
      a.quadraticCurveTo(-942, 178, -942, 190);
      a.quadraticCurveTo(-1020, 297, -1148, 297);
      a.quadraticCurveTo(-1218, 297, -1304, 265);
      a.quadraticCurveTo(-1620, 144, -1960, 136);
      a.quadraticCurveTo(-2190, 131, -2391, 29);
      a.quadraticCurveTo(-2653, -102, -2930, -210);
      a.lineTo(-3537, -433);
      a.quadraticCurveTo(-3847, -541, -4143, -686);
      a.quadraticCurveTo(-4272, -751, -4394, -833);
      a.quadraticCurveTo(-4675, -1031, -4877, -1307);
      a.quadraticCurveTo(-5070, -1571, -5292, -1807);
      a.quadraticCurveTo(-5520, -2049, -5842, -2146);
      a.lineTo(-6056, -2214);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4484);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-5977, -2450);
      a.quadraticCurveTo(-5900, -2450, -5820, -2436);
      a.quadraticCurveTo(-5772, -2438, -5724, -2438);
      a.quadraticCurveTo(-5532, -2438, -5341, -2406);
      a.lineTo(-5335, -2337);
      a.quadraticCurveTo(-5464, -2328, -5576, -2266);
      a.lineTo(-5609, -2243);
      a.lineTo(-5885, -2340);
      a.quadraticCurveTo(-6019, -2367, -6151, -2367);
      a.quadraticCurveTo(-6268, -2367, -6384, -2346);
      a.lineTo(-6346, -2366);
      a.quadraticCurveTo(-6167, -2450, -5977, -2450);
      a.closePath();
      a.moveTo(-728, -965);
      a.lineTo(-717, -964);
      a.lineTo(-711, -964);
      a.lineTo(-728, -965);
      a.closePath();
      a.moveTo(-679, -961);
      a.lineTo(-671, -960);
      a.lineTo(-664, -959);
      a.lineTo(-672, -960);
      a.lineTo(-679, -961);
      a.closePath();
      a.moveTo(-4906, -2668);
      a.quadraticCurveTo(-5237, -2668, -5561, -2624);
      a.quadraticCurveTo(-5910, -2574, -6246, -2475);
      a.quadraticCurveTo(-6412, -2428, -6554, -2328);
      a.lineTo(-6560, -2328);
      a.lineTo(-6590, -2310);
      a.quadraticCurveTo(-6576, -2310, -6562, -2310);
      a.quadraticCurveTo(-6450, -2310, -6340, -2282);
      a.lineTo(-6056, -2214);
      a.lineTo(-5842, -2146);
      a.quadraticCurveTo(-5520, -2049, -5292, -1807);
      a.quadraticCurveTo(-5070, -1571, -4877, -1307);
      a.quadraticCurveTo(-4675, -1031, -4394, -833);
      a.quadraticCurveTo(-4272, -751, -4143, -686);
      a.quadraticCurveTo(-3847, -541, -3537, -433);
      a.lineTo(-2930, -210);
      a.quadraticCurveTo(-2653, -102, -2391, 29);
      a.quadraticCurveTo(-2190, 131, -1960,
        136);
      a.quadraticCurveTo(-1620, 144, -1304, 265);
      a.quadraticCurveTo(-1219, 297, -1148, 297);
      a.quadraticCurveTo(-1020, 297, -942, 190);
      a.quadraticCurveTo(-942, 178, -945, 168);
      a.lineTo(-960, 135);
      a.lineTo(-1035, 58);
      a.lineTo(-1274, -109);
      a.quadraticCurveTo(-1721, -403, -1898, -905);
      a.lineTo(-1898, -905);
      a.quadraticCurveTo(-1674, -741, -1463, -566);
      a.quadraticCurveTo(-1228, -369, -942, -263);
      a.quadraticCurveTo(-851, -229, -773, -229);
      a.quadraticCurveTo(-595, -229, -478, -402);
      a.quadraticCurveTo(-273, -707, -384, -1046);
      a.lineTo(-384, -1046);
      a.quadraticCurveTo(-443, -1018, -525, -992);
      a.lineTo(-616, -966);
      a.lineTo(-617, -966);
      a.lineTo(-613, -968);
      a.lineTo(-624, -966);
      a.lineTo(-625, -966);
      a.lineTo(-629, -965);
      a.lineTo(-618, -966);
      a.lineTo(-625, -963);
      a.lineTo(-646, -959);
      a.lineTo(-648, -958);
      a.lineTo(-642, -958);
      a.lineTo(-639, -957);
      a.lineTo(-643, -957);
      a.lineTo(-648, -958);
      a.lineTo(-647, -959);
      a.lineTo(-645, -960);
      a.lineTo(-642, -962);
      a.lineTo(-641, -963);
      a.lineTo(-664, -963);
      a.lineTo(-665, -965);
      a.lineTo(-679, -965);
      a.lineTo(-696, -964);
      a.lineTo(-683, -964);
      a.lineTo(-683, -963);
      a.lineTo(-682, -963);
      a.lineTo(-682, -962);
      a.lineTo(-681, -962);
      a.lineTo(-680, -961);
      a.lineTo(-679, -959);
      a.lineTo(-702, -962);
      a.lineTo(-699, -961);
      a.lineTo(-684, -959);
      a.lineTo(-720, -963);
      a.lineTo(-722, -964);
      a.lineTo(-726, -964);
      a.lineTo(-731, -965);
      a.lineTo(-737, -965);
      a.lineTo(-737, -966);
      a.lineTo(-740, -966);
      a.lineTo(-907, -980);
      a.quadraticCurveTo(-1111, -1003, -1310, -1055);
      a.quadraticCurveTo(-1643, -1140, -1929, -1339);
      a.quadraticCurveTo(-2198, -1525, -2462, -1719);
      a.quadraticCurveTo(-2694, -1888, -2931, -2051);
      a.quadraticCurveTo(-3222, -2250, -3544, -2394);
      a.quadraticCurveTo(-3857, -2536, -4199, -2599);
      a.quadraticCurveTo(-4541, -2667, -4891, -2668);
      a.quadraticCurveTo(-4898, -2668, -4906, -2668);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4484);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-6560, -2328);
      a.lineTo(-6590, -2310);
      a.quadraticCurveTo(-6463, -2314, -6340, -2282);
      a.lineTo(-6056, -2214);
      a.moveTo(-384, -1046);
      a.quadraticCurveTo(-443, -1018, -525, -992);
      a.lineTo(-616, -966);
      a.lineTo(-617, -966);
      a.lineTo(-625, -963);
      a.lineTo(-646, -959);
      a.lineTo(-642, -958);
      a.lineTo(-639, -957);
      a.lineTo(-643, -957);
      a.lineTo(-648, -958);
      a.lineTo(-649, -958);
      a.lineTo(-651, -956);
      a.lineTo(-656, -956);
      a.lineTo(-657, -956);
      a.lineTo(-663, -957);
      a.lineTo(-664, -957);
      a.lineTo(-679, -959);
      a.lineTo(-684, -959);
      a.lineTo(-720, -963);
      a.lineTo(-724, -964);
      a.lineTo(-731, -965);
      a.lineTo(-735, -965);
      a.lineTo(-737, -965);
      a.lineTo(-740, -966);
      a.lineTo(-737, -966);
      a.lineTo(-740, -966);
      a.lineTo(-907, -980);
      a.quadraticCurveTo(-1111, -1003, -1310, -1055);
      a.quadraticCurveTo(-1643, -1140, -1929, -1339);
      a.quadraticCurveTo(-2198, -1525, -2462, -1719);
      a.quadraticCurveTo(-2694, -1888, -2931, -2051);
      a.quadraticCurveTo(-3222, -2250, -3544, -2394);
      a.quadraticCurveTo(-3857, -2536, -4199, -2599);
      a.quadraticCurveTo(-4541, -2667, -4891, -2668);
      a.quadraticCurveTo(-5229, -2669, -5561, -2624);
      a.quadraticCurveTo(-5910, -2574, -6246, -2475);
      a.quadraticCurveTo(-6412, -2428, -6554, -2328);
      a.moveTo(-5885, -2340);
      a.lineTo(-5820, -2436);
      a.quadraticCurveTo(-6094, -2484, -6346, -2366);
      a.lineTo(-6384, -2346);
      a.quadraticCurveTo(-6136, -2390, -5885, -2340);
      a.closePath();
      a.moveTo(-5885, -2340);
      a.lineTo(-5609, -2243);
      a.lineTo(-5576, -2266);
      a.quadraticCurveTo(-5464, -2328, -5335, -2337);
      a.lineTo(-5341, -2406);
      a.quadraticCurveTo(-5579, -2446, -5820, -2436);
      a.moveTo(-6056, -2214);
      a.quadraticCurveTo(-5730, -2092, -5468, -1857);
      a.quadraticCurveTo(-5198, -1613, -5048, -1282);
      a.quadraticCurveTo(-4917, -991, -4639, -828);
      a.quadraticCurveTo(-4388, -681, -4129, -550);
      a.quadraticCurveTo(-3814, -390, -3518, -201);
      a.quadraticCurveTo(-3221, -12, -2939, 201);
      a.quadraticCurveTo(-2666, 411, -2327, 442);
      a.moveTo(-2327, 443);
      a.quadraticCurveTo(-1985, 377, -1640, 427);
      a.quadraticCurveTo(-1313, 477, -1013, 609);
      a.quadraticCurveTo(-718, 738, -431, 886);
      a.quadraticCurveTo(-237, 986, -39, 1068);
      a.quadraticCurveTo(112, 788, 230, 494);
      a.quadraticCurveTo(341, 215, 360, -81);
      a.quadraticCurveTo(385, -462, 280, -828);
      a.quadraticCurveTo(202, -1101, 60, -1347);
      a.quadraticCurveTo(-55, -1209, -173, -1143);
      a.quadraticCurveTo(-292, -1077, -384, -1046);
      a.moveTo(-624, -966);
      a.lineTo(-625, -966);
      a.lineTo(-629, -965);
      a.lineTo(-618, -966);
      a.lineTo(-624, -966);
      a.closePath();
      a.moveTo(-624, -966);
      a.lineTo(-613, -968);
      a.lineTo(-617, -966);
      a.lineTo(-618, -966);
      a.lineTo(-625, -963);
      a.lineTo(-618, -966);
      a.lineTo(-613, -968);
      a.moveTo(-652, -960);
      a.lineTo(-649, -960);
      a.lineTo(-653, -961);
      a.lineTo(-652, -960);
      a.closePath();
      a.moveTo(-652, -960);
      a.lineTo(-647, -959);
      a.lineTo(-645, -960);
      a.lineTo(-649, -960);
      a.lineTo(-642, -962);
      a.lineTo(-653, -962);
      a.lineTo(-653, -961);
      a.lineTo(-661, -961);
      a.lineTo(-653, -960);
      a.lineTo(-652, -960);
      a.closePath();
      a.moveTo(-652, -960);
      a.lineTo(-652, -959);
      a.lineTo(-648, -958);
      a.lineTo(-647, -959);
      a.lineTo(-646, -959);
      a.lineTo(-648, -958);
      a.lineTo(-642, -958);
      a.lineTo(-641, -957);
      a.lineTo(-639, -957);
      a.moveTo(-652, -959);
      a.lineTo(-652, -958);
      a.lineTo(-650, -958);
      a.lineTo(-648, -958);
      a.lineTo(-645, -958);
      a.lineTo(-642, -958);
      a.moveTo(-654, -963);
      a.lineTo(-653, -962);
      a.lineTo(-664, -963);
      a.lineTo(-664, -962);
      a.lineTo(-653, -962);
      a.moveTo(-653, -960);
      a.lineTo(-655, -959);
      a.lineTo(-652, -959);
      a.moveTo(-642, -962);
      a.lineTo(-641, -963);
      a.lineTo(-649, -963);
      a.lineTo(-654, -963);
      a.lineTo(-664, -963);
      a.lineTo(-672, -963);
      a.lineTo(-670, -963);
      a.lineTo(-664, -963);
      a.moveTo(-645, -960);
      a.lineTo(-642, -962);
      a.moveTo(-639, -957);
      a.lineTo(-641, -957);
      a.lineTo(-643, -957);
      a.lineTo(-645, -958);
      a.lineTo(-648, -958);
      a.moveTo(-650, -958);
      a.lineTo(-649, -958);
      a.moveTo(-651, -956);
      a.lineTo(-654, -957);
      a.lineTo(-656, -956);
      a.lineTo(-660, -958);
      a.lineTo(-663, -957);
      a.lineTo(-679, -959);
      a.moveTo(-651, -956);
      a.lineTo(-652, -957);
      a.lineTo(-654, -957);
      a.lineTo(-659, -958);
      a.lineTo(-660, -958);
      a.lineTo(-664, -959);
      a.lineTo(-663, -957);
      a.lineTo(-671, -960);
      a.lineTo(-679, -961);
      a.lineTo(-679, -959);
      a.lineTo(-702, -962);
      a.lineTo(-699, -961);
      a.lineTo(-684, -959);
      a.moveTo(-650, -958);
      a.lineTo(-652, -957);
      a.lineTo(-652, -958);
      a.lineTo(-657, -959);
      a.lineTo(-659, -958);
      a.lineTo(-662, -959);
      a.lineTo(-664, -959);
      a.lineTo(-671, -960);
      a.lineTo(-672, -960);
      a.lineTo(-679, -961);
      a.lineTo(-679, -962);
      a.lineTo(-681, -962);
      a.lineTo(-680, -961);
      a.lineTo(-679, -961);
      a.moveTo(-629, -965);
      a.lineTo(-641, -963);
      a.moveTo(-649, -963);
      a.lineTo(-629, -965);
      a.moveTo(-625, -966);
      a.lineTo(-642, -966);
      a.lineTo(-665, -965);
      a.lineTo(-664, -963);
      a.lineTo(-673, -964);
      a.lineTo(-672, -963);
      a.lineTo(-664, -963);
      a.moveTo(-679, -964);
      a.lineTo(-683, -964);
      a.lineTo(-679, -963);
      a.lineTo(-679, -964);
      a.closePath();
      a.moveTo(-679, -964);
      a.lineTo(-679, -965);
      a.lineTo(-696, -964);
      a.lineTo(-683, -964);
      a.lineTo(-681, -963);
      a.lineTo(-679, -963);
      a.lineTo(-675, -963);
      a.lineTo(-679, -964);
      a.closePath();
      a.moveTo(-679, -964);
      a.lineTo(-676, -964);
      a.lineTo(-679, -965);
      a.moveTo(-681, -963);
      a.lineTo(-679, -963);
      a.lineTo(-673, -963);
      a.lineTo(-674, -963);
      a.lineTo(-675, -963);
      a.lineTo(-676, -964);
      a.lineTo(-673, -964);
      a.lineTo(-679, -965);
      a.lineTo(-665, -965);
      a.moveTo(-680, -961);
      a.lineTo(-679, -959);
      a.moveTo(-682, -962);
      a.lineTo(-681, -962);
      a.lineTo(-717, -964);
      a.lineTo(-680, -961);
      a.moveTo(-682, -962);
      a.lineTo(-679, -962);
      a.lineTo(-679, -963);
      a.lineTo(-682, -963);
      a.lineTo(-682, -962);
      a.closePath();
      a.moveTo(-682, -962);
      a.lineTo(-708, -964);
      a.lineTo(-709, -964);
      a.lineTo(-711, -964);
      a.lineTo(-717, -964);
      a.lineTo(-726, -964);
      a.lineTo(-722, -964);
      a.lineTo(-717, -964);
      a.lineTo(-728, -965);
      a.lineTo(-734, -965);
      a.lineTo(-731, -965);
      a.lineTo(-726, -964);
      a.moveTo(-679, -962);
      a.lineTo(-676, -962);
      a.lineTo(-677, -962);
      a.lineTo(-679, -962);
      a.closePath();
      a.moveTo(-677, -962);
      a.lineTo(-679, -963);
      a.lineTo(-675, -963);
      a.lineTo(-679, -963);
      a.moveTo(-673, -963);
      a.lineTo(-668, -962);
      a.lineTo(-670, -963);
      a.lineTo(-673, -963);
      a.closePath();
      a.moveTo(-673, -963);
      a.lineTo(-671, -962);
      a.lineTo(-670, -962);
      a.lineTo(-664, -961);
      a.lineTo(-664, -962);
      a.lineTo(-668, -962);
      a.lineTo(-664, -962);
      a.lineTo(-661, -961);
      a.lineTo(-664, -961);
      a.lineTo(-655, -959);
      a.lineTo(-657, -959);
      a.lineTo(-662, -959);
      a.lineTo(-664, -960);
      a.lineTo(-664, -959);
      a.lineTo(-672, -960);
      a.moveTo(-676, -964);
      a.lineTo(-674, -963);
      a.lineTo(-672, -963);
      a.moveTo(-673, -963);
      a.lineTo(-671, -962);
      a.lineTo(-675, -963);
      a.lineTo(-673, -963);
      a.closePath();
      a.moveTo(-672, -960);
      a.lineTo(-676, -962);
      a.lineTo(-668, -961);
      a.lineTo(-670, -962);
      a.lineTo(-677, -962);
      a.moveTo(-664, -961);
      a.lineTo(-667, -961);
      a.lineTo(-664, -961);
      a.closePath();
      a.moveTo(-664, -961);
      a.lineTo(-664, -960);
      a.lineTo(-668, -961);
      a.lineTo(-664, -959);
      a.moveTo(-667, -961);
      a.lineTo(-668, -961);
      a.moveTo(-667, -961);
      a.lineTo(-670, -962);
      a.moveTo(-683, -964);
      a.lineTo(-683, -963);
      a.lineTo(-681, -963);
      a.moveTo(-696, -964);
      a.lineTo(-729, -966);
      a.lineTo(-736, -966);
      a.lineTo(-700, -964);
      a.lineTo(-696, -964);
      a.closePath();
      a.moveTo(-700, -964);
      a.lineTo(-708, -964);
      a.lineTo(-683, -963);
      a.lineTo(-700, -964);
      a.closePath();
      a.moveTo(-683, -963);
      a.lineTo(-682, -963);
      a.lineTo(-708, -964);
      a.moveTo(-728, -965);
      a.lineTo(-732, -965);
      a.lineTo(-734, -965);
      a.lineTo(-737, -966);
      a.lineTo(-737, -965);
      a.moveTo(-722, -964);
      a.lineTo(-724, -964);
      a.moveTo(-699, -961);
      a.lineTo(-712, -963);
      a.lineTo(-720, -963);
      a.lineTo(-722, -964);
      a.lineTo(-712, -963);
      a.moveTo(-711, -964);
      a.lineTo(-728, -965);
      a.moveTo(-736, -966);
      a.lineTo(-732, -965);
      a.lineTo(-709, -964);
      a.moveTo(-736, -966);
      a.lineTo(-737, -966);
      a.lineTo(-732, -965);
      a.moveTo(-734, -965);
      a.lineTo(-735, -965);
      a.moveTo(-736, -966);
      a.lineTo(-740, -966);
      a.lineTo(-729, -966);
      a.lineTo(-642, -966);
      a.moveTo(-702, -962);
      a.lineTo(-717, -964)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4484);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-4768, -2418);
      a.lineTo(-4348, -2364);
      a.lineTo(-4254, -2348);
      a.moveTo(-3535, -2130);
      a.quadraticCurveTo(-3396, -2066, -3263, -1987);
      a.lineTo(-3202, -1948);
      a.moveTo(-4109, -2318);
      a.lineTo(-3671, -2187);
      a.moveTo(-5359, -2046);
      a.lineTo(-5476, -2100);
      a.moveTo(-5578, -2137);
      a.lineTo(-5707, -2171);
      a.moveTo(-4907, -1545);
      a.lineTo(-4984, -1670);
      a.moveTo(-5053, -1770);
      a.lineTo(-5132, -1870);
      a.moveTo(-4743, -1281);
      a.lineTo(-4828, -1418);
      a.moveTo(-4238, -711);
      a.lineTo(-4394, -833);
      a.moveTo(-3603, -373);
      a.lineTo(-3770, -445);
      a.moveTo(-3884, -498);
      a.lineTo(-4118, -629);
      a.moveTo(-4523, -962);
      a.lineTo(-4655, -1145);
      a.moveTo(-5201, -1939);
      a.lineTo(-5302, -2014);
      a.moveTo(-2004, -1243);
      a.lineTo(-1765, -1131);
      a.moveTo(-2394, -1465);
      a.lineTo(-2130, -1312);
      a.moveTo(-2326, -1196);
      a.lineTo(-2091, -1043);
      a.lineTo(-2001, -1133);
      a.moveTo(-2454, -1268);
      a.lineTo(-2870, -1463);
      a.moveTo(-3114, -1892);
      a.lineTo(-2886, -1747);
      a.moveTo(-2741, -1661);
      a.lineTo(-2534, -1544);
      a.moveTo(-2091, -1043);
      a.lineTo(-1960, -941);
      a.lineTo(-1893, -984);
      a.moveTo(-1465, -445);
      a.lineTo(-1163, -128);
      a.moveTo(-715, -734);
      a.lineTo(-603, -651);
      a.moveTo(-369, -468);
      a.lineTo(-211, -353);
      a.moveTo(-1396, -1011);
      a.lineTo(-1290, -986);
      a.moveTo(-1556, -542);
      a.lineTo(-1818, -814);
      a.moveTo(-1666, -1093);
      a.lineTo(-1487, -1036);
      a.moveTo(-122, -293);
      a.lineTo(5, -206);
      a.moveTo(-45, -996);
      a.lineTo(102, -1143);
      a.moveTo(-1035, 58);
      a.lineTo(-1011, 25);
      a.lineTo(-935, 102);
      a.lineTo(-902, 139);
      a.lineTo(-730, 319);
      a.moveTo(-902, 139);
      a.lineTo(-942, 190);
      a.moveTo(-960, 135);
      a.lineTo(-935, 102)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4484);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-5977, -2450);
      a.quadraticCurveTo(-6167, -2450, -6346, -2366);
      a.lineTo(-6384, -2346);
      a.quadraticCurveTo(-6268, -2367, -6151, -2367);
      a.quadraticCurveTo(-6018, -2367, -5885, -2340);
      a.lineTo(-5609, -2243);
      a.lineTo(-5576, -2266);
      a.quadraticCurveTo(-5464, -2328, -5335, -2337);
      a.lineTo(-5341, -2406);
      a.quadraticCurveTo(-5531, -2438, -5724, -2438);
      a.quadraticCurveTo(-5772, -2438, -5820, -2436);
      a.quadraticCurveTo(-5899, -2450, -5977, -2450);
      a.closePath();
      a.moveTo(-6056, -2214);
      a.lineTo(-6056, -2214);
      a.quadraticCurveTo(-5730, -2092, -5468, -1857);
      a.quadraticCurveTo(-5198, -1613, -5048, -1282);
      a.quadraticCurveTo(-4917, -991, -4639, -828);
      a.quadraticCurveTo(-4388, -681, -4129, -550);
      a.quadraticCurveTo(-3814, -390, -3518, -201);
      a.quadraticCurveTo(-3221, -12, -2939, 201);
      a.quadraticCurveTo(-2666, 411, -2327, 442);
      a.lineTo(-2327, 443);
      a.quadraticCurveTo(-2132, 405, -1937, 405);
      a.quadraticCurveTo(-1789, 405, -1640, 427);
      a.quadraticCurveTo(-1313, 477, -1013, 609);
      a.quadraticCurveTo(-718, 738, -431, 886);
      a.quadraticCurveTo(-237, 986, -39, 1068);
      a.quadraticCurveTo(112, 788, 230, 494);
      a.quadraticCurveTo(341, 215, 360, -81);
      a.quadraticCurveTo(385, -462, 280, -828);
      a.quadraticCurveTo(202, -1101, 60, -1347);
      a.quadraticCurveTo(-55, -1209, -173, -1143);
      a.quadraticCurveTo(-292, -1077, -384, -1046);
      a.quadraticCurveTo(-273, -707, -478, -402);
      a.quadraticCurveTo(-595, -229, -773, -229);
      a.quadraticCurveTo(-852, -229, -942, -263);
      a.quadraticCurveTo(-1228, -369, -1463, -566);
      a.quadraticCurveTo(-1674, -741, -1898, -905);
      a.lineTo(-1898, -905);
      a.quadraticCurveTo(-1721, -403, -1274, -109);
      a.lineTo(-1035, 58);
      a.lineTo(-960, 135);
      a.lineTo(-945, 168);
      a.quadraticCurveTo(-942, 178, -942, 190);
      a.quadraticCurveTo(-1020, 297, -1148, 297);
      a.quadraticCurveTo(-1218,
        297, -1304, 265);
      a.quadraticCurveTo(-1620, 144, -1960, 136);
      a.quadraticCurveTo(-2190, 131, -2391, 29);
      a.quadraticCurveTo(-2653, -102, -2930, -210);
      a.lineTo(-3537, -433);
      a.quadraticCurveTo(-3847, -541, -4143, -686);
      a.quadraticCurveTo(-4272, -751, -4394, -833);
      a.quadraticCurveTo(-4675, -1031, -4877, -1307);
      a.quadraticCurveTo(-5070, -1571, -5292, -1807);
      a.quadraticCurveTo(-5520, -2049, -5842, -2146);
      a.lineTo(-6056, -2214);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4484);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-5977, -2450);
      a.quadraticCurveTo(-5900, -2450, -5820, -2436);
      a.quadraticCurveTo(-5772, -2438, -5724, -2438);
      a.quadraticCurveTo(-5532, -2438, -5341, -2406);
      a.lineTo(-5335, -2337);
      a.quadraticCurveTo(-5464, -2328, -5576, -2266);
      a.lineTo(-5609, -2243);
      a.lineTo(-5885, -2340);
      a.quadraticCurveTo(-6019, -2367, -6151, -2367);
      a.quadraticCurveTo(-6268, -2367, -6384, -2346);
      a.lineTo(-6346, -2366);
      a.quadraticCurveTo(-6167, -2450, -5977, -2450);
      a.closePath();
      a.moveTo(-728, -965);
      a.lineTo(-717, -964);
      a.lineTo(-711, -964);
      a.lineTo(-728, -965);
      a.closePath();
      a.moveTo(-679, -961);
      a.lineTo(-671, -960);
      a.lineTo(-664, -959);
      a.lineTo(-672, -960);
      a.lineTo(-679, -961);
      a.closePath();
      a.moveTo(-4906, -2668);
      a.quadraticCurveTo(-5237, -2668, -5561, -2624);
      a.quadraticCurveTo(-5910, -2574, -6246, -2475);
      a.quadraticCurveTo(-6412, -2428, -6554, -2328);
      a.lineTo(-6560, -2328);
      a.lineTo(-6590, -2310);
      a.quadraticCurveTo(-6576, -2310, -6562, -2310);
      a.quadraticCurveTo(-6450, -2310, -6340, -2282);
      a.lineTo(-6056, -2214);
      a.lineTo(-5842, -2146);
      a.quadraticCurveTo(-5520, -2049, -5292, -1807);
      a.quadraticCurveTo(-5070, -1571, -4877, -1307);
      a.quadraticCurveTo(-4675, -1031, -4394, -833);
      a.quadraticCurveTo(-4272, -751, -4143, -686);
      a.quadraticCurveTo(-3847, -541, -3537, -433);
      a.lineTo(-2930, -210);
      a.quadraticCurveTo(-2653, -102, -2391, 29);
      a.quadraticCurveTo(-2190, 131, -1960, 136);
      a.quadraticCurveTo(-1620, 144, -1304, 265);
      a.quadraticCurveTo(-1219, 297, -1148, 297);
      a.quadraticCurveTo(-1020, 297, -942, 190);
      a.quadraticCurveTo(-942, 178, -945, 168);
      a.lineTo(-960, 135);
      a.lineTo(-1035, 58);
      a.lineTo(-1274, -109);
      a.quadraticCurveTo(-1721, -403, -1898, -905);
      a.lineTo(-1898, -905);
      a.quadraticCurveTo(-1674, -741, -1463, -566);
      a.quadraticCurveTo(-1228, -369, -942, -263);
      a.quadraticCurveTo(-851, -229, -773, -229);
      a.quadraticCurveTo(-595, -229, -478, -402);
      a.quadraticCurveTo(-273, -707, -384, -1046);
      a.lineTo(-384, -1046);
      a.quadraticCurveTo(-443, -1018, -525, -992);
      a.lineTo(-616, -966);
      a.lineTo(-617, -966);
      a.lineTo(-613, -968);
      a.lineTo(-624, -966);
      a.lineTo(-625, -966);
      a.lineTo(-629, -965);
      a.lineTo(-618, -966);
      a.lineTo(-625, -963);
      a.lineTo(-646, -959);
      a.lineTo(-648, -958);
      a.lineTo(-642, -958);
      a.lineTo(-639, -957);
      a.lineTo(-643, -957);
      a.lineTo(-648, -958);
      a.lineTo(-647, -959);
      a.lineTo(-645, -960);
      a.lineTo(-642, -962);
      a.lineTo(-641, -963);
      a.lineTo(-664, -963);
      a.lineTo(-665, -965);
      a.lineTo(-679, -965);
      a.lineTo(-696, -964);
      a.lineTo(-683, -964);
      a.lineTo(-683, -963);
      a.lineTo(-682, -963);
      a.lineTo(-682, -962);
      a.lineTo(-681, -962);
      a.lineTo(-680, -961);
      a.lineTo(-679, -959);
      a.lineTo(-702, -962);
      a.lineTo(-699, -961);
      a.lineTo(-684, -959);
      a.lineTo(-720, -963);
      a.lineTo(-722, -964);
      a.lineTo(-726, -964);
      a.lineTo(-731, -965);
      a.lineTo(-737, -965);
      a.lineTo(-737, -966);
      a.lineTo(-740, -966);
      a.lineTo(-907, -980);
      a.quadraticCurveTo(-1111, -1003, -1310, -1055);
      a.quadraticCurveTo(-1643, -1140, -1929, -1339);
      a.quadraticCurveTo(-2198, -1525, -2462, -1719);
      a.quadraticCurveTo(-2694, -1888, -2931, -2051);
      a.quadraticCurveTo(-3222, -2250, -3544, -2394);
      a.quadraticCurveTo(-3857, -2536, -4199, -2599);
      a.quadraticCurveTo(-4541, -2667, -4891, -2668);
      a.quadraticCurveTo(-4898, -2668, -4906, -2668);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4484);
      a.fillStyle =
        "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-6560, -2328);
      a.lineTo(-6590, -2310);
      a.quadraticCurveTo(-6463, -2314, -6340, -2282);
      a.lineTo(-6056, -2214);
      a.moveTo(-384, -1046);
      a.quadraticCurveTo(-443, -1018, -525, -992);
      a.lineTo(-616, -966);
      a.lineTo(-617, -966);
      a.lineTo(-625, -963);
      a.lineTo(-646, -959);
      a.lineTo(-642, -958);
      a.lineTo(-639, -957);
      a.lineTo(-643, -957);
      a.lineTo(-648, -958);
      a.lineTo(-649, -958);
      a.lineTo(-651, -956);
      a.lineTo(-656, -956);
      a.lineTo(-657, -956);
      a.lineTo(-663, -957);
      a.lineTo(-664, -957);
      a.lineTo(-679, -959);
      a.lineTo(-684, -959);
      a.lineTo(-720, -963);
      a.lineTo(-724, -964);
      a.lineTo(-731, -965);
      a.lineTo(-735, -965);
      a.lineTo(-737, -965);
      a.lineTo(-740, -966);
      a.lineTo(-737, -966);
      a.lineTo(-740, -966);
      a.lineTo(-907, -980);
      a.quadraticCurveTo(-1111, -1003, -1310, -1055);
      a.quadraticCurveTo(-1643, -1140, -1929, -1339);
      a.quadraticCurveTo(-2198, -1525, -2462, -1719);
      a.quadraticCurveTo(-2694, -1888, -2931, -2051);
      a.quadraticCurveTo(-3222, -2250, -3544, -2394);
      a.quadraticCurveTo(-3857, -2536, -4199, -2599);
      a.quadraticCurveTo(-4541, -2667, -4891, -2668);
      a.quadraticCurveTo(-5229, -2669, -5561, -2624);
      a.quadraticCurveTo(-5910, -2574, -6246, -2475);
      a.quadraticCurveTo(-6412, -2428, -6554, -2328);
      a.moveTo(-5885, -2340);
      a.lineTo(-5820, -2436);
      a.quadraticCurveTo(-6094, -2484, -6346, -2366);
      a.lineTo(-6384, -2346);
      a.quadraticCurveTo(-6136, -2390, -5885, -2340);
      a.closePath();
      a.moveTo(-5885, -2340);
      a.lineTo(-5609, -2243);
      a.lineTo(-5576, -2266);
      a.quadraticCurveTo(-5464, -2328, -5335, -2337);
      a.lineTo(-5341, -2406);
      a.quadraticCurveTo(-5579, -2446, -5820, -2436);
      a.moveTo(-6056, -2214);
      a.quadraticCurveTo(-5730, -2092, -5468, -1857);
      a.quadraticCurveTo(-5198, -1613, -5048, -1282);
      a.quadraticCurveTo(-4917, -991, -4639, -828);
      a.quadraticCurveTo(-4388, -681, -4129, -550);
      a.quadraticCurveTo(-3814, -390, -3518, -201);
      a.quadraticCurveTo(-3221, -12, -2939, 201);
      a.quadraticCurveTo(-2666, 411, -2327, 442);
      a.moveTo(-2327, 443);
      a.quadraticCurveTo(-1985, 377, -1640, 427);
      a.quadraticCurveTo(-1313, 477, -1013, 609);
      a.quadraticCurveTo(-718,
        738, -431, 886);
      a.quadraticCurveTo(-237, 986, -39, 1068);
      a.quadraticCurveTo(112, 788, 230, 494);
      a.quadraticCurveTo(341, 215, 360, -81);
      a.quadraticCurveTo(385, -462, 280, -828);
      a.quadraticCurveTo(202, -1101, 60, -1347);
      a.quadraticCurveTo(-55, -1209, -173, -1143);
      a.quadraticCurveTo(-292, -1077, -384, -1046);
      a.moveTo(-624, -966);
      a.lineTo(-625, -966);
      a.lineTo(-629, -965);
      a.lineTo(-618, -966);
      a.lineTo(-624, -966);
      a.closePath();
      a.moveTo(-624, -966);
      a.lineTo(-613, -968);
      a.lineTo(-617, -966);
      a.lineTo(-618, -966);
      a.lineTo(-625, -963);
      a.lineTo(-618, -966);
      a.lineTo(-613, -968);
      a.moveTo(-652, -960);
      a.lineTo(-649, -960);
      a.lineTo(-653, -961);
      a.lineTo(-652, -960);
      a.closePath();
      a.moveTo(-652, -960);
      a.lineTo(-647, -959);
      a.lineTo(-645, -960);
      a.lineTo(-649, -960);
      a.lineTo(-642, -962);
      a.lineTo(-653, -962);
      a.lineTo(-653, -961);
      a.lineTo(-661, -961);
      a.lineTo(-653, -960);
      a.lineTo(-652, -960);
      a.closePath();
      a.moveTo(-652, -960);
      a.lineTo(-652, -959);
      a.lineTo(-648, -958);
      a.lineTo(-647, -959);
      a.lineTo(-646, -959);
      a.lineTo(-648, -958);
      a.lineTo(-642, -958);
      a.lineTo(-641, -957);
      a.lineTo(-639, -957);
      a.moveTo(-652, -959);
      a.lineTo(-652, -958);
      a.lineTo(-650, -958);
      a.lineTo(-648, -958);
      a.lineTo(-645, -958);
      a.lineTo(-642, -958);
      a.moveTo(-654, -963);
      a.lineTo(-653, -962);
      a.lineTo(-664, -963);
      a.lineTo(-664, -962);
      a.lineTo(-653, -962);
      a.moveTo(-653, -960);
      a.lineTo(-655, -959);
      a.lineTo(-652, -959);
      a.moveTo(-642, -962);
      a.lineTo(-641, -963);
      a.lineTo(-649, -963);
      a.lineTo(-654, -963);
      a.lineTo(-664, -963);
      a.lineTo(-672, -963);
      a.lineTo(-670, -963);
      a.lineTo(-664, -963);
      a.moveTo(-645, -960);
      a.lineTo(-642, -962);
      a.moveTo(-639, -957);
      a.lineTo(-641, -957);
      a.lineTo(-643, -957);
      a.lineTo(-645, -958);
      a.lineTo(-648, -958);
      a.moveTo(-650, -958);
      a.lineTo(-649, -958);
      a.moveTo(-651, -956);
      a.lineTo(-654, -957);
      a.lineTo(-656, -956);
      a.lineTo(-660, -958);
      a.lineTo(-663, -957);
      a.lineTo(-679, -959);
      a.moveTo(-651, -956);
      a.lineTo(-652, -957);
      a.lineTo(-654, -957);
      a.lineTo(-659, -958);
      a.lineTo(-660, -958);
      a.lineTo(-664, -959);
      a.lineTo(-663, -957);
      a.lineTo(-671, -960);
      a.lineTo(-679, -961);
      a.lineTo(-679, -959);
      a.lineTo(-702, -962);
      a.lineTo(-699, -961);
      a.lineTo(-684, -959);
      a.moveTo(-650, -958);
      a.lineTo(-652, -957);
      a.lineTo(-652, -958);
      a.lineTo(-657, -959);
      a.lineTo(-659, -958);
      a.lineTo(-662, -959);
      a.lineTo(-664, -959);
      a.lineTo(-671, -960);
      a.lineTo(-672, -960);
      a.lineTo(-679, -961);
      a.lineTo(-679, -962);
      a.lineTo(-681, -962);
      a.lineTo(-680, -961);
      a.lineTo(-679, -961);
      a.moveTo(-629, -965);
      a.lineTo(-641, -963);
      a.moveTo(-649, -963);
      a.lineTo(-629, -965);
      a.moveTo(-625, -966);
      a.lineTo(-642, -966);
      a.lineTo(-665, -965);
      a.lineTo(-664, -963);
      a.lineTo(-673, -964);
      a.lineTo(-672, -963);
      a.lineTo(-664, -963);
      a.moveTo(-679, -964);
      a.lineTo(-683, -964);
      a.lineTo(-679, -963);
      a.lineTo(-679, -964);
      a.closePath();
      a.moveTo(-679, -964);
      a.lineTo(-679, -965);
      a.lineTo(-696, -964);
      a.lineTo(-683, -964);
      a.lineTo(-681, -963);
      a.lineTo(-679, -963);
      a.lineTo(-675, -963);
      a.lineTo(-679, -964);
      a.closePath();
      a.moveTo(-679, -964);
      a.lineTo(-676, -964);
      a.lineTo(-679, -965);
      a.moveTo(-681, -963);
      a.lineTo(-679, -963);
      a.lineTo(-673, -963);
      a.lineTo(-674, -963);
      a.lineTo(-675, -963);
      a.lineTo(-676, -964);
      a.lineTo(-673, -964);
      a.lineTo(-679, -965);
      a.lineTo(-665, -965);
      a.moveTo(-680, -961);
      a.lineTo(-679, -959);
      a.moveTo(-682, -962);
      a.lineTo(-681, -962);
      a.lineTo(-717, -964);
      a.lineTo(-680, -961);
      a.moveTo(-682, -962);
      a.lineTo(-679, -962);
      a.lineTo(-679, -963);
      a.lineTo(-682, -963);
      a.lineTo(-682, -962);
      a.closePath();
      a.moveTo(-682, -962);
      a.lineTo(-708, -964);
      a.lineTo(-709, -964);
      a.lineTo(-711, -964);
      a.lineTo(-717, -964);
      a.lineTo(-726, -964);
      a.lineTo(-722, -964);
      a.lineTo(-717, -964);
      a.lineTo(-728, -965);
      a.lineTo(-734, -965);
      a.lineTo(-731, -965);
      a.lineTo(-726, -964);
      a.moveTo(-679, -962);
      a.lineTo(-676, -962);
      a.lineTo(-677, -962);
      a.lineTo(-679, -962);
      a.closePath();
      a.moveTo(-677, -962);
      a.lineTo(-679, -963);
      a.lineTo(-675, -963);
      a.lineTo(-679, -963);
      a.moveTo(-673, -963);
      a.lineTo(-668, -962);
      a.lineTo(-670, -963);
      a.lineTo(-673, -963);
      a.closePath();
      a.moveTo(-673, -963);
      a.lineTo(-671, -962);
      a.lineTo(-670, -962);
      a.lineTo(-664, -961);
      a.lineTo(-664, -962);
      a.lineTo(-668, -962);
      a.lineTo(-664, -962);
      a.lineTo(-661, -961);
      a.lineTo(-664, -961);
      a.lineTo(-655, -959);
      a.lineTo(-657, -959);
      a.lineTo(-662, -959);
      a.lineTo(-664, -960);
      a.lineTo(-664, -959);
      a.lineTo(-672, -960);
      a.moveTo(-676, -964);
      a.lineTo(-674, -963);
      a.lineTo(-672, -963);
      a.moveTo(-673, -963);
      a.lineTo(-671, -962);
      a.lineTo(-675, -963);
      a.lineTo(-673, -963);
      a.closePath();
      a.moveTo(-672, -960);
      a.lineTo(-676, -962);
      a.lineTo(-668, -961);
      a.lineTo(-670, -962);
      a.lineTo(-677, -962);
      a.moveTo(-664, -961);
      a.lineTo(-667, -961);
      a.lineTo(-664, -961);
      a.closePath();
      a.moveTo(-664, -961);
      a.lineTo(-664, -960);
      a.lineTo(-668, -961);
      a.lineTo(-664, -959);
      a.moveTo(-667, -961);
      a.lineTo(-668, -961);
      a.moveTo(-667, -961);
      a.lineTo(-670, -962);
      a.moveTo(-683, -964);
      a.lineTo(-683, -963);
      a.lineTo(-681, -963);
      a.moveTo(-696, -964);
      a.lineTo(-729, -966);
      a.lineTo(-736, -966);
      a.lineTo(-700, -964);
      a.lineTo(-696, -964);
      a.closePath();
      a.moveTo(-700, -964);
      a.lineTo(-708, -964);
      a.lineTo(-683, -963);
      a.lineTo(-700, -964);
      a.closePath();
      a.moveTo(-683, -963);
      a.lineTo(-682, -963);
      a.lineTo(-708, -964);
      a.moveTo(-728, -965);
      a.lineTo(-732, -965);
      a.lineTo(-734, -965);
      a.lineTo(-737, -966);
      a.lineTo(-737, -965);
      a.moveTo(-722, -964);
      a.lineTo(-724, -964);
      a.moveTo(-699, -961);
      a.lineTo(-712, -963);
      a.lineTo(-720, -963);
      a.lineTo(-722, -964);
      a.lineTo(-712, -963);
      a.moveTo(-711, -964);
      a.lineTo(-728, -965);
      a.moveTo(-736, -966);
      a.lineTo(-732, -965);
      a.lineTo(-709, -964);
      a.moveTo(-736, -966);
      a.lineTo(-737, -966);
      a.lineTo(-732, -965);
      a.moveTo(-734, -965);
      a.lineTo(-735, -965);
      a.moveTo(-736, -966);
      a.lineTo(-740, -966);
      a.lineTo(-729, -966);
      a.lineTo(-642, -966);
      a.moveTo(-702, -962);
      a.lineTo(-717, -964)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4484);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-4768, -2418);
      a.lineTo(-4348, -2364);
      a.lineTo(-4254, -2348);
      a.moveTo(-3535, -2130);
      a.quadraticCurveTo(-3396, -2066, -3263, -1987);
      a.lineTo(-3202, -1948);
      a.moveTo(-4109, -2318);
      a.lineTo(-3671, -2187);
      a.moveTo(-5359, -2046);
      a.lineTo(-5476, -2100);
      a.moveTo(-5578, -2137);
      a.lineTo(-5707, -2171);
      a.moveTo(-4907, -1545);
      a.lineTo(-4984, -1670);
      a.moveTo(-5053, -1770);
      a.lineTo(-5132, -1870);
      a.moveTo(-4743, -1281);
      a.lineTo(-4828, -1418);
      a.moveTo(-4238, -711);
      a.lineTo(-4394, -833);
      a.moveTo(-3603, -373);
      a.lineTo(-3770, -445);
      a.moveTo(-3884, -498);
      a.lineTo(-4118, -629);
      a.moveTo(-4523, -962);
      a.lineTo(-4655, -1145);
      a.moveTo(-5201, -1939);
      a.lineTo(-5302, -2014);
      a.moveTo(-2004, -1243);
      a.lineTo(-1765, -1131);
      a.moveTo(-2394, -1465);
      a.lineTo(-2130, -1312);
      a.moveTo(-2326, -1196);
      a.lineTo(-2091, -1043);
      a.lineTo(-2001, -1133);
      a.moveTo(-2454, -1268);
      a.lineTo(-2870, -1463);
      a.moveTo(-3114, -1892);
      a.lineTo(-2886, -1747);
      a.moveTo(-2741, -1661);
      a.lineTo(-2534, -1544);
      a.moveTo(-2091, -1043);
      a.lineTo(-1960, -941);
      a.lineTo(-1893, -984);
      a.moveTo(-1465, -445);
      a.lineTo(-1163, -128);
      a.moveTo(-715, -734);
      a.lineTo(-603, -651);
      a.moveTo(-369, -468);
      a.lineTo(-211, -353);
      a.moveTo(-1396, -1011);
      a.lineTo(-1290, -986);
      a.moveTo(-1556, -542);
      a.lineTo(-1818, -814);
      a.moveTo(-1666, -1093);
      a.lineTo(-1487, -1036);
      a.moveTo(-122, -293);
      a.lineTo(5, -206);
      a.moveTo(-45, -996);
      a.lineTo(102, -1143);
      a.moveTo(-1035, 58);
      a.lineTo(-1011, 25);
      a.lineTo(-935, 102);
      a.lineTo(-902, 139);
      a.lineTo(-730, 319);
      a.moveTo(-902, 139);
      a.lineTo(-942, 190);
      a.moveTo(-960, 135);
      a.lineTo(-935, 102)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4660);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-511, -1436);
      a.quadraticCurveTo(-578, -1436, -653, -1410);
      a.quadraticCurveTo(-750, -1377, -878, -1294);
      a.quadraticCurveTo(-1014, -1205, -1087, -1169);
      a.quadraticCurveTo(-1142, -1141, -1188, -1129);
      a.lineTo(-1195, -1127);
      a.quadraticCurveTo(-1384, -945, -1481, -700);
      a.quadraticCurveTo(-1678, -205, -1473, 277);
      a.quadraticCurveTo(-1521, 322, -1569, 348);
      a.quadraticCurveTo(-1611, 370, -1661, 383);
      a.lineTo(-1745,
        466);
      a.lineTo(-1847, 564);
      a.quadraticCurveTo(-2008, 702, -2110, 702);
      a.quadraticCurveTo(-2111, 702, -2111, 702);
      a.lineTo(-2111, 702);
      a.quadraticCurveTo(-2018, 720, -1972, 803);
      a.quadraticCurveTo(-1935, 873, -1962, 1012);
      a.lineTo(-1964, 1023);
      a.lineTo(-1839, 1003);
      a.quadraticCurveTo(-1753, 1003, -1721, 1100);
      a.quadraticCurveTo(-1709, 1136, -1698, 1200);
      a.quadraticCurveTo(-1588, 1171, -1445, 1052);
      a.quadraticCurveTo(-1315, 943, -1245, 847);
      a.quadraticCurveTo(-1218, 904, -1144, 1132);
      a.quadraticCurveTo(-1102, 1238, -1054, 1316);
      a.quadraticCurveTo(-949,
        1384, -836, 1437);
      a.quadraticCurveTo(-716, 1494, -588, 1533);
      a.quadraticCurveTo(-310, 1620, -17, 1628);
      a.quadraticCurveTo(12, 1629, 41, 1629);
      a.quadraticCurveTo(299, 1629, 550, 1566);
      a.lineTo(561, 1563);
      a.quadraticCurveTo(702, 1521, 837, 1461);
      a.quadraticCurveTo(1086, 1133, 1238, 753);
      a.quadraticCurveTo(1389, 372, 1301, -51);
      a.quadraticCurveTo(1213, -476, 873, -608);
      a.quadraticCurveTo(873, -608, 873, -608);
      a.lineTo(873, -608);
      a.lineTo(566, -598);
      a.quadraticCurveTo(453, -589, 340, -589);
      a.quadraticCurveTo(43, -589, -245, -649);
      a.quadraticCurveTo(-664, -735, -809, -1138);
      a.quadraticCurveTo(-695, -1325, -506, -1436);
      a.quadraticCurveTo(-508, -1436, -511, -1436);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4660);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-1245, 847);
      a.quadraticCurveTo(-1315, 943, -1445, 1052);
      a.quadraticCurveTo(-1588, 1171, -1698, 1200);
      a.lineTo(-1687, 1276);
      a.quadraticCurveTo(-1643, 1232, -1552, 1204);
      a.lineTo(-1396, 1163);
      a.lineTo(-1343, 1144);
      a.lineTo(-1303, 1122);
      a.quadraticCurveTo(-1213, 1206, -1113, 1275);
      a.lineTo(-1054, 1316);
      a.quadraticCurveTo(-1102,
        1238, -1144, 1132);
      a.quadraticCurveTo(-1218, 904, -1245, 847);
      a.closePath();
      a.moveTo(203, -1627);
      a.quadraticCurveTo(-169, -1627, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.quadraticCurveTo(-664, -735, -245, -649);
      a.quadraticCurveTo(44, -589, 340, -589);
      a.quadraticCurveTo(452, -589, 566, -598);
      a.lineTo(873, -608);
      a.quadraticCurveTo(1213, -476, 1301, -51);
      a.quadraticCurveTo(1389, 372, 1238, 753);
      a.quadraticCurveTo(1086, 1133, 837, 1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275,
        1221, 1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632, 1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.quadraticCurveTo(2028, 792, 1933, 741);
      a.quadraticCurveTo(2014, 696, 2103, 683);
      a.lineTo(2103, 672);
      a.quadraticCurveTo(1833, 633, 1624, 483);
      a.lineTo(1581, 451);
      a.lineTo(1585, 439);
      a.quadraticCurveTo(1461, 297, 1434, 244);
      a.lineTo(1432, 240);
      a.quadraticCurveTo(1522, 18, 1560, -281);
      a.quadraticCurveTo(1610, -669, 1341, -1139);
      a.lineTo(1328, -1132);
      a.lineTo(1288, -1126);
      a.quadraticCurveTo(1217, -1126, 1135, -1201);
      a.quadraticCurveTo(1086, -1246, 1043, -1254);
      a.lineTo(1043, -1254);
      a.quadraticCurveTo(1043, -1254, 1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(295, -1627, 203, -1627);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4660);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1585, 439);
      a.lineTo(1624,
        483);
      a.moveTo(2096, 874);
      a.lineTo(2111, 876);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(1073, -1208, 1097, -1155);
      a.quadraticCurveTo(1156, -1025, 1034, -893);
      a.moveTo(902, -694);
      a.quadraticCurveTo(924, -747, 959, -798);
      a.moveTo(936, -144);
      a.quadraticCurveTo(910, -212, 893, -271);
      a.moveTo(861, -426);
      a.quadraticCurveTo(856, -473, 859, -512);
      a.quadraticCurveTo(861, -559, 873, -608);
      a.moveTo(-809, -1138);
      a.lineTo(-816, -1126);
      a.quadraticCurveTo(-833, -1073, -838, -1018);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(-88, -1673, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.moveTo(1851, 861);
      a.lineTo(1739, 839);
      a.moveTo(1655, 816);
      a.lineTo(1639, 811);
      a.lineTo(1596, 798);
      a.moveTo(2096, 874);
      a.lineTo(1948, 868);
      a.moveTo(1581, 451);
      a.lineTo(1585, 439);
      a.moveTo(1117, 367);
      a.quadraticCurveTo(1104, 260, 1067, 158);
      a.moveTo(1540, 828);
      a.lineTo(1545, 810);
      a.lineTo(1552, 783);
      a.lineTo(1574, 664);
      a.moveTo(1581, 451);
      a.lineTo(1581, 557);
      a.moveTo(1047, 885);
      a.quadraticCurveTo(1127, 668, 1124, 467);
      a.moveTo(561, 1563);
      a.lineTo(675, 1471);
      a.moveTo(1433, 1007);
      a.quadraticCurveTo(1485, 954, 1517, 889);
      a.moveTo(930, 1139);
      a.lineTo(1007, 984);
      a.moveTo(773, 1368);
      a.lineTo(858, 1257);
      a.moveTo(1021, 51);
      a.lineTo(974, -51);
      a.moveTo(-811, -775);
      a.lineTo(-831, -855);
      a.moveTo(-730, -579);
      a.quadraticCurveTo(-741, -617, -760, -654);
      a.lineTo(-766, -666);
      a.moveTo(-792, -126);
      a.quadraticCurveTo(-769, -183, -752, -242);
      a.moveTo(-736, -314);
      a.quadraticCurveTo(-725, -372, -720, -431);
      a.moveTo(-926, 49);
      a.lineTo(-903, 76);
      a.lineTo(-839, -27);
      a.moveTo(-982, 129);
      a.lineTo(-962, 156);
      a.lineTo(-940, 126);
      a.lineTo(-903, 76);
      a.lineTo(-897, 85);
      a.lineTo(-854, 145);
      a.moveTo(-962, 156);
      a.lineTo(-951, 168);
      a.lineTo(-894, 217);
      a.moveTo(-1062, 257);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1005, 215, -962, 156);
      a.moveTo(-974, 321);
      a.lineTo(-1022, 288);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1067, 349, -1083, 424);
      a.lineTo(-1077, 424);
      a.lineTo(-998, 425);
      a.moveTo(-1150, 465);
      a.lineTo(-1092, 471);
      a.lineTo(-1083, 424);
      a.lineTo(-1126, 417);
      a.moveTo(-1092, 471);
      a.lineTo(-982, 473);
      a.moveTo(-1385, 901);
      a.lineTo(-1419, 869);
      a.lineTo(-1445, 843);
      a.moveTo(-1517, 769);
      a.lineTo(-1559, 723);
      a.lineTo(-1581, 699);
      a.lineTo(-1592, 687);
      a.moveTo(-1059, 888);
      a.lineTo(-1087, 752);
      a.moveTo(-1092, 471);
      a.quadraticCurveTo(-1105, 553, -1100, 640);
      a.lineTo(-1093, 641);
      a.quadraticCurveTo(-1039, 646, -1014, 641);
      a.moveTo(-1098, 673);
      a.lineTo(-1100, 640);
      a.lineTo(-1150, 633);
      a.moveTo(-977, 1143);
      a.lineTo(-1024, 1011);
      a.moveTo(-836, 1437);
      a.lineTo(-931, 1253);
      a.moveTo(-1236, 1019);
      a.lineTo(-1326, 952);
      a.moveTo(-1962, 1012);
      a.lineTo(-1801, 916);
      a.lineTo(-1777, 900);
      a.moveTo(-1644, 623);
      a.lineTo(-1697, 548);
      a.moveTo(-1710, 852);
      a.lineTo(-1662, 813);
      a.lineTo(-1595, 756);
      a.moveTo(-1720, 511);
      a.lineTo(-1745, 466)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4660);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1333, -1153);
      a.lineTo(1341, -1139);
      a.quadraticCurveTo(1610, -669, 1560, -281);
      a.quadraticCurveTo(1522, 18, 1432, 240);
      a.moveTo(1624, 483);
      a.quadraticCurveTo(1833, 633, 2103, 672);
      a.lineTo(2103, 683);
      a.quadraticCurveTo(2014, 696, 1933, 741);
      a.quadraticCurveTo(2028, 792, 2096, 874);
      a.moveTo(837, 1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275, 1221, 1473, 1038);
      a.lineTo(1433, 1007);
      a.lineTo(1354, 938);
      a.moveTo(1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632, 1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.moveTo(1432, 240);
      a.lineTo(1371, 372);
      a.moveTo(1581, 451);
      a.lineTo(1566, 438);
      a.moveTo(837, 1461);
      a.quadraticCurveTo(702, 1521, 561, 1563);
      a.lineTo(550, 1566);
      a.quadraticCurveTo(270, 1636, -17, 1628);
      a.quadraticCurveTo(-310, 1620, -588, 1533);
      a.quadraticCurveTo(-716, 1494, -836, 1437);
      a.quadraticCurveTo(-949, 1384, -1054, 1316);
      a.lineTo(-1113, 1275);
      a.quadraticCurveTo(-1213, 1206, -1303, 1122);
      a.lineTo(-1343, 1144);
      a.lineTo(-1396, 1163);
      a.lineTo(-1552, 1204);
      a.quadraticCurveTo(-1643, 1232, -1687, 1276);
      a.lineTo(-1698, 1200);
      a.quadraticCurveTo(-1709,
        1136, -1721, 1100);
      a.quadraticCurveTo(-1753, 1003, -1839, 1003);
      a.lineTo(-1964, 1023);
      a.lineTo(-1962, 1012);
      a.quadraticCurveTo(-1935, 873, -1972, 803);
      a.quadraticCurveTo(-2018, 720, -2111, 702);
      a.quadraticCurveTo(-2009, 703, -1847, 564);
      a.lineTo(-1745, 466);
      a.lineTo(-1661, 383);
      a.lineTo(-1630, 353);
      a.moveTo(1624, 483);
      a.lineTo(1581, 451);
      a.moveTo(-1473, 277);
      a.quadraticCurveTo(-1678, -205, -1481, -700);
      a.quadraticCurveTo(-1384, -945, -1195, -1127);
      a.moveTo(-1452, 325);
      a.lineTo(-1473, 277);
      a.moveTo(-1303, 1122);
      a.quadraticCurveTo(-1285,
        1110, -1272, 1096);
      a.quadraticCurveTo(-1244, 1065, -1236, 1019);
      a.quadraticCurveTo(-1230, 986, -1235, 946)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4067);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(-1533, -1810);
      a.lineTo(-1556, -1763);
      a.quadraticCurveTo(-1589, -1690, -1604, -1603);
      a.quadraticCurveTo(-1634, -1434, -1628, -1259);
      a.quadraticCurveTo(-1624, -1128, -1578, -1017);
      a.quadraticCurveTo(-1534, -1127, -1506, -1266);
      a.quadraticCurveTo(-1478, -1406, -1483, -1522);
      a.quadraticCurveTo(-1488, -1638, -1501, -1699);
      a.lineTo(-1533, -1810);
      a.closePath();
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1768, -1635, 1734, -1473);
      a.quadraticCurveTo(1699, -1312, 1677, -1133);
      a.quadraticCurveTo(1655, -955, 1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.quadraticCurveTo(1795, -843, 1815, -911);
      a.quadraticCurveTo(1843, -1010, 1858, -1122);
      a.quadraticCurveTo(1871, -1221, 1872, -1344);
      a.lineTo(1869, -1428);
      a.lineTo(1859, -1535);
      a.lineTo(1858, -1547);
      a.lineTo(1851, -1595);
      a.quadraticCurveTo(1846, -1642, 1823, -1690);
      a.lineTo(1821, -1692);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4067);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(257, -3296);
      a.quadraticCurveTo(234, -3208, 234, -3032);
      a.quadraticCurveTo(234, -2810, 289, -2652);
      a.quadraticCurveTo(314, -2580, 404, -2402);
      a.lineTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(535, -2385);
      a.quadraticCurveTo(904, -2083, 985, -1597);
      a.quadraticCurveTo(1061, -1141, 982, -686);
      a.quadraticCurveTo(907, -252, 649, 108);
      a.quadraticCurveTo(489, 332, 278, 503);
      a.lineTo(294, 494);
      a.quadraticCurveTo(441,
        412, 517, 344);
      a.lineTo(607, 265);
      a.lineTo(685, 215);
      a.quadraticCurveTo(760, 167, 902, 100);
      a.lineTo(903, 99);
      a.quadraticCurveTo(1045, 31, 1189, -109);
      a.lineTo(1197, -117);
      a.lineTo(1261, -184);
      a.lineTo(1294, -218);
      a.lineTo(1358, -293);
      a.quadraticCurveTo(1432, -377, 1482, -474);
      a.quadraticCurveTo(1524, -553, 1548, -641);
      a.lineTo(1563, -680);
      a.quadraticCurveTo(1582, -721, 1627, -728);
      a.lineTo(1706, -722);
      a.lineTo(1712, -725);
      a.quadraticCurveTo(1735, -742, 1743, -770);
      a.lineTo(1754, -811);
      a.lineTo(1754, -811);
      a.quadraticCurveTo(1734, -796, 1711, -789);
      a.lineTo(1665, -781);
      a.quadraticCurveTo(1663, -781, 1662, -781);
      a.quadraticCurveTo(1620, -781, 1589, -807);
      a.quadraticCurveTo(1541, -849, 1540, -985);
      a.quadraticCurveTo(1543, -1069, 1560, -1193);
      a.quadraticCurveTo(1577, -1318, 1596, -1408);
      a.lineTo(1616, -1514);
      a.lineTo(1658, -1645);
      a.quadraticCurveTo(1691, -1743, 1747, -1743);
      a.quadraticCurveTo(1752, -1743, 1757, -1742);
      a.quadraticCurveTo(1794, -1729, 1821, -1692);
      a.lineTo(1823, -1690);
      a.quadraticCurveTo(1831, -1776, 1821, -1809);
      a.lineTo(1786, -1888);
      a.quadraticCurveTo(1761, -1934, 1704, -1955);
      a.lineTo(1679, -1963);
      a.lineTo(1618, -1967);
      a.quadraticCurveTo(1492, -1830, 1429, -1653);
      a.lineTo(1402, -1578);
      a.quadraticCurveTo(1357, -1711, 1366, -1853);
      a.quadraticCurveTo(1370, -1912, 1400, -1962);
      a.quadraticCurveTo(1309, -1970, 1252, -2008);
      a.lineTo(1243, -2015);
      a.lineTo(1101, -2129);
      a.lineTo(987, -2219);
      a.quadraticCurveTo(939, -2253, 873, -2287);
      a.lineTo(833, -2328);
      a.quadraticCurveTo(730, -2436, 657, -2562);
      a.lineTo(581, -2696);
      a.quadraticCurveTo(534, -2779, 488, -2893);
      a.quadraticCurveTo(442, -3007, 429, -3077);
      a.lineTo(408, -3192);
      a.lineTo(401, -3237);
      a.quadraticCurveTo(394, -3288, 390, -3338);
      a.lineTo(389, -3343);
      a.lineTo(384, -3402);
      a.lineTo(383, -3430);
      a.lineTo(381, -3453);
      a.lineTo(377, -3479);
      a.lineTo(373, -3506);
      a.lineTo(370, -3529);
      a.lineTo(365, -3555);
      a.lineTo(355, -3594);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4067);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1579, -1967);
      a.lineTo(1505, -1963);
      a.lineTo(1497, -1963);
      a.quadraticCurveTo(1467, -1961, 1439, -1961);
      a.quadraticCurveTo(1418, -1961, 1400, -1962);
      a.quadraticCurveTo(1370, -1912, 1366, -1853);
      a.quadraticCurveTo(1357, -1711, 1402, -1578);
      a.lineTo(1429, -1653);
      a.quadraticCurveTo(1492, -1830, 1618, -1967);
      a.closePath();
      a.moveTo(278, -3664);
      a.lineTo(203, -3566);
      a.lineTo(149, -3489);
      a.lineTo(113, -3449);
      a.lineTo(68, -3405);
      a.lineTo(-1, -3314);
      a.lineTo(-2, -3313);
      a.lineTo(-62, -3219);
      a.lineTo(-111, -3132);
      a.lineTo(-158, -3050);
      a.lineTo(-216, -2952);
      a.lineTo(-249, -2898);
      a.lineTo(-284, -2842);
      a.lineTo(-322, -2782);
      a.lineTo(-354, -2731);
      a.lineTo(-388, -2681);
      a.lineTo(-422, -2631);
      a.lineTo(-481, -2551);
      a.lineTo(-535, -2479);
      a.lineTo(-601, -2397);
      a.lineTo(-678, -2306);
      a.lineTo(-721, -2256);
      a.quadraticCurveTo(-894, -2191, -1046, -2105);
      a.quadraticCurveTo(-1199, -2020, -1302, -1940);
      a.lineTo(-1349, -1966);
      a.quadraticCurveTo(-1397, -1994, -1433, -1994);
      a.quadraticCurveTo(-1474, -1994, -1500, -1957);
      a.quadraticCurveTo(-1498, -1920, -1482, -1886);
      a.lineTo(-1457, -1830);
      a.lineTo(-1454, -1823);
      a.lineTo(-1445, -1802);
      a.lineTo(-1440, -1790);
      a.quadraticCurveTo(-1418, -1735, -1406, -1676);
      a.quadraticCurveTo(-1331, -1314, -1496, -1018);
      a.lineTo(-1526, -969);
      a.lineTo(-1542, -945);
      a.lineTo(-1552, -931);
      a.quadraticCurveTo(-1553, -870, -1511, -841);
      a.quadraticCurveTo(-1500, -833, -1485, -833);
      a.quadraticCurveTo(-1465, -833, -1437, -848);
      a.quadraticCurveTo(-1339, -789, -1327, -697);
      a.quadraticCurveTo(-1315, -606, -1307, -485);
      a.quadraticCurveTo(-1299, -364, -1198, -222);
      a.quadraticCurveTo(-1097, -80, -1037, -7);
      a.quadraticCurveTo(-977, 64, -857, 170);
      a.lineTo(-600, 393);
      a.quadraticCurveTo(-533, 451, -459, 490);
      a.quadraticCurveTo(-383, 529, -301, 548);
      a.quadraticCurveTo(-202, 571, -101, 571);
      a.quadraticCurveTo(-65, 571, -29, 568);
      a.quadraticCurveTo(-13, 569, 3, 569);
      a.quadraticCurveTo(151, 569, 278, 503);
      a.quadraticCurveTo(489, 332, 649, 108);
      a.quadraticCurveTo(907, -252, 982, -686);
      a.quadraticCurveTo(1061, -1141, 985, -1597);
      a.quadraticCurveTo(904, -2083, 535, -2385);
      a.lineTo(531, -2386);
      a.lineTo(404, -2402);
      a.quadraticCurveTo(314, -2580, 289, -2652);
      a.quadraticCurveTo(234, -2810, 234, -3032);
      a.quadraticCurveTo(234, -3208, 257, -3296);
      a.lineTo(355, -3594);
      a.lineTo(351, -3608);
      a.quadraticCurveTo(341, -3646, 278, -3664);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4067);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(-1482, -1886);
      a.quadraticCurveTo(-1511, -1851, -1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.lineTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.closePath();
      a.moveTo(1747, -1743);
      a.quadraticCurveTo(1691, -1743, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318, 1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1620, -781, 1662, -781);
      a.quadraticCurveTo(1664, -781, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1752, -1743, 1747, -1743);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4067);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(365, -3555);
      a.lineTo(370, -3529);
      a.lineTo(373, -3506);
      a.lineTo(377, -3479);
      a.lineTo(381, -3453);
      a.lineTo(383, -3430);
      a.lineTo(384, -3402);
      a.lineTo(389, -3343);
      a.lineTo(390, -3338);
      a.quadraticCurveTo(394, -3288, 401, -3237);
      a.lineTo(408, -3192);
      a.lineTo(429, -3077);
      a.quadraticCurveTo(442, -3007, 488, -2893);
      a.quadraticCurveTo(534, -2779, 581, -2696);
      a.lineTo(657, -2562);
      a.quadraticCurveTo(730, -2436, 833, -2328);
      a.lineTo(873, -2287);
      a.quadraticCurveTo(939, -2253, 987, -2219);
      a.lineTo(1101, -2129);
      a.lineTo(1243, -2015);
      a.lineTo(1252, -2008);
      a.quadraticCurveTo(1309, -1970, 1400, -1962);
      a.quadraticCurveTo(1444, -1959, 1497, -1963);
      a.lineTo(1505, -1963);
      a.lineTo(1579, -1967);
      a.lineTo(1618, -1967);
      a.lineTo(1679, -1963);
      a.lineTo(1704, -1955);
      a.quadraticCurveTo(1761, -1934, 1786, -1888);
      a.lineTo(1821, -1809);
      a.quadraticCurveTo(1831, -1776, 1823, -1690);
      a.quadraticCurveTo(1846, -1642, 1851, -1595);
      a.lineTo(1858, -1547);
      a.lineTo(1859, -1535);
      a.lineTo(1869, -1428);
      a.lineTo(1872, -1344);
      a.quadraticCurveTo(1871, -1221, 1858, -1122);
      a.quadraticCurveTo(1843, -1010, 1815, -911);
      a.quadraticCurveTo(1795, -843, 1754, -811);
      a.lineTo(1743, -770);
      a.quadraticCurveTo(1735, -742, 1712, -725);
      a.lineTo(1706, -722);
      a.lineTo(1627, -728);
      a.quadraticCurveTo(1582, -721, 1563, -680);
      a.lineTo(1548, -641);
      a.quadraticCurveTo(1524, -553, 1482, -474);
      a.quadraticCurveTo(1432, -377, 1358, -293);
      a.lineTo(1294, -218);
      a.lineTo(1261, -184);
      a.lineTo(1197, -117);
      a.lineTo(1189, -109);
      a.quadraticCurveTo(1045, 31, 903, 99);
      a.moveTo(902, 100);
      a.quadraticCurveTo(760, 167, 685, 215);
      a.lineTo(607, 265);
      a.lineTo(517, 344);
      a.quadraticCurveTo(441, 412, 294, 494);
      a.lineTo(278, 503);
      a.quadraticCurveTo(137, 576, -29, 568);
      a.quadraticCurveTo(-167, 579, -301, 548);
      a.quadraticCurveTo(-383, 529, -459, 490);
      a.quadraticCurveTo(-533, 451, -600, 393);
      a.lineTo(-857, 170);
      a.quadraticCurveTo(-977, 64, -1037, -7);
      a.quadraticCurveTo(-1097, -80, -1198, -222);
      a.quadraticCurveTo(-1299, -364, -1307, -485);
      a.quadraticCurveTo(-1315, -606, -1327, -697);
      a.quadraticCurveTo(-1339, -789, -1437, -848);
      a.quadraticCurveTo(-1485, -823, -1511, -841);
      a.quadraticCurveTo(-1553, -870, -1552, -931);
      a.lineTo(-1542, -945);
      a.lineTo(-1578, -1017);
      a.quadraticCurveTo(-1624, -1128, -1628, -1259);
      a.quadraticCurveTo(-1634, -1434, -1604, -1603);
      a.quadraticCurveTo(-1589, -1690, -1556, -1763);
      a.lineTo(-1533, -1810);
      a.quadraticCurveTo(-1511, -1851, -1482, -1886);
      a.quadraticCurveTo(-1498, -1920, -1500, -1957);
      a.quadraticCurveTo(-1452, -2026, -1349, -1966);
      a.lineTo(-1302, -1940);
      a.quadraticCurveTo(-1199, -2020, -1046, -2105);
      a.quadraticCurveTo(-894, -2191, -721, -2256);
      a.lineTo(-678, -2306);
      a.lineTo(-601, -2397);
      a.lineTo(-535, -2479);
      a.lineTo(-481, -2551);
      a.lineTo(-422, -2631);
      a.lineTo(-388, -2681);
      a.lineTo(-354, -2731);
      a.lineTo(-322, -2782);
      a.lineTo(-284, -2842);
      a.lineTo(-249, -2898);
      a.lineTo(-216, -2952);
      a.lineTo(-158, -3050);
      a.lineTo(-111, -3132);
      a.lineTo(-62, -3219);
      a.lineTo(-2, -3313);
      a.lineTo(-1, -3314);
      a.lineTo(68, -3405);
      a.lineTo(113, -3449);
      a.lineTo(149, -3489);
      a.lineTo(203, -3566);
      a.lineTo(278, -3664);
      a.quadraticCurveTo(341, -3646, 351, -3608);
      a.lineTo(355, -3594);
      a.moveTo(404, -2402);
      a.lineTo(531, -2386);
      a.moveTo(404, -2402);
      a.lineTo(303, -2408);
      a.moveTo(535, -2385);
      a.lineTo(604, -2373);
      a.lineTo(705, -2350);
      a.quadraticCurveTo(788, -2328, 843, -2301);
      a.lineTo(873, -2287);
      a.moveTo(531, -2386);
      a.lineTo(535, -2385);
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1694, -1751, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318, 1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1621, -780, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.closePath();
      a.moveTo(1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.moveTo(-420, -2347);
      a.quadraticCurveTo(-568, -2313, -721, -2256);
      a.moveTo(-420, -2347);
      a.lineTo(-382, -2355);
      a.quadraticCurveTo(-215, -2390, -44, -2398);
      a.moveTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.moveTo(-1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.moveTo(-1302, -1940);
      a.quadraticCurveTo(-1237, -1897, -1172, -1831);
      a.moveTo(-1373, -895);
      a.quadraticCurveTo(-1409, -864, -1437, -848)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4067);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(903, 99);
      a.lineTo(902, 100);
      a.moveTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(488, -2488);
      a.moveTo(390, -3338);
      a.quadraticCurveTo(368, -3290, 354, -3242);
      a.moveTo(33, -3088);
      a.lineTo(33, -3128);
      a.lineTo(30, -3177);
      a.moveTo(335, -3159);
      a.quadraticCurveTo(327, -3115, 326, -3071);
      a.moveTo(424, -2649);
      a.lineTo(452, -2577);
      a.moveTo(363, -2815);
      a.lineTo(370, -2795);
      a.lineTo(393, -2732);
      a.moveTo(705, -2350);
      a.lineTo(790, -2265);
      a.moveTo(856, -2190);
      a.lineTo(898, -2140);
      a.moveTo(328, -2981);
      a.lineTo(341, -2898);
      a.moveTo(11, -2889);
      a.lineTo(29, -3013);
      a.moveTo(1164, -1579);
      a.lineTo(1204, -1591);
      a.lineTo(1208, -1591);
      a.quadraticCurveTo(1158, -1743, 1076, -1882);
      a.lineTo(1068, -1895);
      a.moveTo(1310, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1263, -1363);
      a.lineTo(1280, -1237);
      a.lineTo(1307, -1244);
      a.lineTo(1359, -1258);
      a.moveTo(1211, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1239, -1483);
      a.lineTo(1218, -1481);
      a.lineTo(1179, -1475);
      a.moveTo(1347, -1087);
      a.lineTo(1290, -1083);
      a.lineTo(1291, -998);
      a.lineTo(1324, -998);
      a.moveTo(1239, -998);
      a.lineTo(1291, -998);
      a.lineTo(1289, -938);
      a.lineTo(1343, -941);
      a.moveTo(1234, -1083);
      a.lineTo(1276, -1083);
      a.lineTo(1290, -1083);
      a.lineTo(1287, -1146);
      a.lineTo(1280, -1237);
      a.lineTo(1229, -1220);
      a.moveTo(1291, -1594);
      a.lineTo(1208, -1591);
      a.lineTo(1239, -1483);
      a.lineTo(1315, -1485);
      a.moveTo(1234, -938);
      a.lineTo(1246, -938);
      a.lineTo(1289, -938);
      a.lineTo(1284, -855);
      a.moveTo(1334, -683);
      a.lineTo(1264, -689);
      a.lineTo(1253, -630);
      a.moveTo(1206, -703);
      a.lineTo(1249, -693);
      a.lineTo(1264, -689);
      a.lineTo(1275, -761);
      a.moveTo(1281, -476);
      a.lineTo(1214, -476);
      a.lineTo(1204, -445);
      a.moveTo(1159, -490);
      a.lineTo(1191, -479);
      a.lineTo(1214, -476);
      a.lineTo(1233, -543);
      a.moveTo(1161, -336);
      a.lineTo(1147, -306);
      a.quadraticCurveTo(1045, -100, 903, 99);
      a.moveTo(958, -2062);
      a.lineTo(1015, -1979);
      a.moveTo(-55, -2701);
      a.lineTo(-33, -2747);
      a.lineTo(-15, -2791);
      a.moveTo(-160, -2552);
      a.quadraticCurveTo(-124, -2592, -95, -2635);
      a.moveTo(-801, -2035);
      a.lineTo(-771, -2068);
      a.lineTo(-710, -2127);
      a.moveTo(-540, -2261);
      a.lineTo(-420, -2347);
      a.moveTo(-653, -2174);
      a.lineTo(-600, -2217);
      a.moveTo(-369, -2375);
      a.lineTo(-316, -2412);
      a.moveTo(-273, -2445);
      a.lineTo(-208, -2502);
      a.moveTo(-1250, -769);
      a.quadraticCurveTo(-1301, -970, -1270, -1196);
      a.quadraticCurveTo(-1251, -1332, -1185, -1487);
      a.lineTo(-1152, -1557);
      a.moveTo(-1082, -1679);
      a.lineTo(-997, -1800);
      a.lineTo(-857, -1972);
      a.moveTo(-1188, -588);
      a.lineTo(-1182, -573);
      a.quadraticCurveTo(-1161, -588, -1140, -590);
      a.moveTo(-1045, -462);
      a.quadraticCurveTo(-1079, -455, -1116, -429);
      a.lineTo(-1117, -428);
      a.lineTo(-1094, -380);
      a.lineTo(-1091, -382);
      a.lineTo(-1031, -415);
      a.moveTo(-1158, -391);
      a.quadraticCurveTo(-1148, -408, -1117, -428);
      a.lineTo(-1139, -474);
      a.lineTo(-1143, -472);
      a.lineTo(-1182, -443);
      a.moveTo(-1067, -328);
      a.lineTo(-1094, -380);
      a.quadraticCurveTo(-1115, -368, -1122, -360);
      a.moveTo(-1182, -573);
      a.lineTo(-1139, -474);
      a.quadraticCurveTo(-1103, -498, -1073, -508);
      a.moveTo(-1182, -573);
      a.lineTo(-1218, -540);
      a.moveTo(-684, 238);
      a.lineTo(-790, 107);
      a.moveTo(-459, 490);
      a.lineTo(-627, 305);
      a.moveTo(21, -3237);
      a.lineTo(-1, -3314);
      a.moveTo(-849, 29);
      a.lineTo(-933, -93)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4067);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth =
        60;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1821, -1692);
      a.lineTo(1823, -1690)
    }]
  }
}

function make_baby_2(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4535);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-5189, -4163);
      a.quadraticCurveTo(-5023, -4163, -4865, -4106);
      a.quadraticCurveTo(-4780, -4075, -4707, -4021);
      a.quadraticCurveTo(-4547, -3956, -4412, -3850);
      a.lineTo(-4379, -3822);
      a.lineTo(-4408, -3751);
      a.lineTo(-4501, -3769);
      a.quadraticCurveTo(-4510, -3770, -4519, -3770);
      a.quadraticCurveTo(-4570, -3770, -4618, -3750);
      a.lineTo(-4637, -3744);
      a.lineTo(-4804, -3954);
      a.quadraticCurveTo(-4980, -4089, -5193, -4142);
      a.lineTo(-5262, -4160);
      a.quadraticCurveTo(-5225, -4163, -5189, -4163);
      a.closePath();
      a.moveTo(-589, -998);
      a.lineTo(-589, -998);
      a.lineTo(-590, -998);
      a.lineTo(-589, -998);
      a.closePath();
      a.moveTo(-603, -998);
      a.lineTo(-613, -997);
      a.lineTo(-619, -998);
      a.closePath();
      a.moveTo(-5248, -4233);
      a.quadraticCurveTo(-5353, -4233, -5457, -4215);
      a.lineTo(-5464, -4219);
      a.lineTo(-5507, -4213);
      a.quadraticCurveTo(-5436, -4183, -5368, -4147);
      a.quadraticCurveTo(-5172, -4037, -5004, -3882);
      a.lineTo(-4924, -3797);
      a.quadraticCurveTo(-4780, -3648, -4695, -3459);
      a.quadraticCurveTo(-4602, -3252, -4565, -3029);
      a.lineTo(-4490, -2580);
      a.lineTo(-4415, -2124);
      a.quadraticCurveTo(-4389, -1958, -4347, -1795);
      a.quadraticCurveTo(-4290, -1575, -4188, -1371);
      a.lineTo(-4153, -1314);
      a.quadraticCurveTo(-4029, -1113, -3849, -964);
      a.quadraticCurveTo(-3679, -823, -3483, -720);
      a.quadraticCurveTo(-3288, -618, -3085, -536);
      a.quadraticCurveTo(-2881, -455, -2689, -351);
      a.quadraticCurveTo(-2549, -276, -2413, -194);
      a.quadraticCurveTo(-2258, -100, -2084, -63);
      a.lineTo(-1802, -4);
      a.quadraticCurveTo(-1588,
        35, -1398, 125);
      a.quadraticCurveTo(-1306, 166, -1207, 192);
      a.quadraticCurveTo(-1170, 201, -1137, 201);
      a.quadraticCurveTo(-1032, 201, -959, 110);
      a.lineTo(-975, 53);
      a.lineTo(-1045, -27);
      a.quadraticCurveTo(-1209, -159, -1363, -299);
      a.quadraticCurveTo(-1526, -447, -1627, -643);
      a.quadraticCurveTo(-1731, -846, -1766, -1074);
      a.lineTo(-1766, -1074);
      a.lineTo(-1403, -679);
      a.quadraticCurveTo(-1230, -487, -1005, -361);
      a.quadraticCurveTo(-881, -290, -742, -284);
      a.lineTo(-656, -296);
      a.quadraticCurveTo(-583, -323, -532, -380);
      a.quadraticCurveTo(-409, -516, -367, -693);
      a.quadraticCurveTo(-322, -879, -374, -1065);
      a.lineTo(-589, -998);
      a.lineTo(-589, -998);
      a.lineTo(-588, -999);
      a.lineTo(-598, -999);
      a.lineTo(-613, -1001);
      a.lineTo(-634, -1001);
      a.lineTo(-647, -1002);
      a.lineTo(-647, -1001);
      a.lineTo(-650, -1001);
      a.lineTo(-655, -1002);
      a.lineTo(-662, -1003);
      a.lineTo(-668, -1003);
      a.lineTo(-671, -1004);
      a.lineTo(-676, -1005);
      a.lineTo(-679, -1005);
      a.lineTo(-688, -1006);
      a.lineTo(-692, -1007);
      a.lineTo(-698, -1008);
      a.lineTo(-698, -1007);
      a.lineTo(-699, -1007);
      a.lineTo(-699, -1008);
      a.lineTo(-701, -1008);
      a.lineTo(-848, -1041);
      a.quadraticCurveTo(-1067, -1089, -1268, -1195);
      a.quadraticCurveTo(-1461, -1298, -1619, -1452);
      a.quadraticCurveTo(-1762, -1590, -1890, -1741);
      a.lineTo(-2188, -2099);
      a.quadraticCurveTo(-2327, -2272, -2455, -2452);
      a.quadraticCurveTo(-2565, -2606, -2682, -2753);
      a.quadraticCurveTo(-2776, -2870, -2877, -2973);
      a.lineTo(-3172, -3281);
      a.quadraticCurveTo(-3315, -3434, -3477, -3564);
      a.quadraticCurveTo(-3658, -3711, -3860, -3825);
      a.quadraticCurveTo(-4068, -3940, -4287, -4022);
      a.quadraticCurveTo(-4453, -4085, -4626, -4129);
      a.quadraticCurveTo(-4839, -4182, -5057, -4218);
      a.quadraticCurveTo(-5152, -4233, -5248, -4233);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4535);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-5189, -4163);
      a.quadraticCurveTo(-5225, -4163, -5262, -4160);
      a.lineTo(-5193, -4142);
      a.quadraticCurveTo(-4980, -4089, -4804, -3954);
      a.lineTo(-4637, -3744);
      a.lineTo(-4618, -3750);
      a.quadraticCurveTo(-4569, -3770, -4519, -3770);
      a.quadraticCurveTo(-4510, -3770, -4501, -3769);
      a.lineTo(-4408, -3751);
      a.lineTo(-4379, -3822);
      a.lineTo(-4412, -3850);
      a.quadraticCurveTo(-4547, -3956, -4707, -4021);
      a.quadraticCurveTo(-4780, -4075, -4865, -4106);
      a.quadraticCurveTo(-5023, -4163, -5189, -4163);
      a.closePath();
      a.moveTo(-5005, -3881);
      a.lineTo(-5005, -3881);
      a.quadraticCurveTo(-4882, -3737, -4805, -3565);
      a.quadraticCurveTo(-4718, -3369, -4671, -3165);
      a.quadraticCurveTo(-4628, -2981, -4597, -2796);
      a.quadraticCurveTo(-4564, -2602, -4545, -2406);
      a.lineTo(-4508, -2018);
      a.quadraticCurveTo(-4486, -1799, -4412, -1595);
      a.quadraticCurveTo(-4337, -1386, -4203, -1205);
      a.quadraticCurveTo(-4086, -1048, -3953, -901);
      a.quadraticCurveTo(-3793, -724, -3618, -559);
      a.quadraticCurveTo(-3488, -435, -3347, -320);
      a.lineTo(-3116, -131);
      a.quadraticCurveTo(-2964, -5, -2792, 95);
      a.quadraticCurveTo(-2594, 210, -2369, 256);
      a.lineTo(-2369, 257);
      a.lineTo(-2188, 243);
      a.quadraticCurveTo(-2154, 242, -2121, 242);
      a.quadraticCurveTo(-1933, 242, -1748, 280);
      a.quadraticCurveTo(-1581, 311, -1419, 367);
      a.quadraticCurveTo(-1258, 424, -1111, 505);
      a.quadraticCurveTo(-581, 798, -39, 1065);
      a.lineTo(98, 776);
      a.quadraticCurveTo(214, 535, 293, 278);
      a.quadraticCurveTo(336,
        137, 351, -8);
      a.quadraticCurveTo(369, -185, 355, -363);
      a.quadraticCurveTo(313, -889, 50, -1351);
      a.lineTo(-6, -1288);
      a.quadraticCurveTo(-158, -1127, -375, -1064);
      a.quadraticCurveTo(-323, -878, -368, -692);
      a.quadraticCurveTo(-410, -515, -533, -379);
      a.quadraticCurveTo(-584, -322, -657, -295);
      a.lineTo(-743, -283);
      a.quadraticCurveTo(-882, -289, -1006, -360);
      a.quadraticCurveTo(-1231, -486, -1404, -678);
      a.lineTo(-1767, -1073);
      a.lineTo(-1767, -1073);
      a.quadraticCurveTo(-1732, -845, -1628, -642);
      a.quadraticCurveTo(-1527, -446, -1364, -298);
      a.quadraticCurveTo(-1210, -158, -1046, -26);
      a.lineTo(-976, 54);
      a.lineTo(-960, 111);
      a.quadraticCurveTo(-1033, 202, -1138, 202);
      a.quadraticCurveTo(-1171, 202, -1208, 193);
      a.quadraticCurveTo(-1307, 167, -1399, 126);
      a.quadraticCurveTo(-1589, 36, -1803, -3);
      a.lineTo(-2085, -62);
      a.quadraticCurveTo(-2259, -99, -2414, -193);
      a.quadraticCurveTo(-2550, -275, -2690, -350);
      a.quadraticCurveTo(-2882, -454, -3086, -535);
      a.quadraticCurveTo(-3289, -617, -3484, -719);
      a.quadraticCurveTo(-3680, -822, -3850, -963);
      a.quadraticCurveTo(-4030, -1112, -4154, -1313);
      a.lineTo(-4189, -1370);
      a.quadraticCurveTo(-4291, -1574, -4348, -1794);
      a.quadraticCurveTo(-4390, -1957, -4416, -2123);
      a.lineTo(-4491, -2579);
      a.lineTo(-4566, -3028);
      a.quadraticCurveTo(-4603, -3251, -4696, -3458);
      a.quadraticCurveTo(-4781, -3647, -4925, -3796);
      a.lineTo(-5005, -3881);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4535);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-375, -1064);
      a.quadraticCurveTo(-158, -1127, -6, -1288);
      a.lineTo(50, -1351);
      a.quadraticCurveTo(313, -889, 355, -363);
      a.quadraticCurveTo(369, -185, 351, -8);
      a.quadraticCurveTo(336, 137, 293, 278);
      a.quadraticCurveTo(214, 535, 98, 776);
      a.lineTo(-39, 1065);
      a.quadraticCurveTo(-581, 798, -1111, 505);
      a.quadraticCurveTo(-1258, 424, -1419, 367);
      a.quadraticCurveTo(-1581, 311, -1748, 280);
      a.quadraticCurveTo(-1966, 235, -2188, 243);
      a.lineTo(-2369, 257);
      a.moveTo(-2369, 256);
      a.quadraticCurveTo(-2594, 210, -2792, 95);
      a.quadraticCurveTo(-2964, -5, -3116, -131);
      a.lineTo(-3347, -320);
      a.quadraticCurveTo(-3488, -435, -3618, -559);
      a.quadraticCurveTo(-3793, -724, -3953, -901);
      a.quadraticCurveTo(-4086, -1048, -4203, -1205);
      a.quadraticCurveTo(-4337, -1386, -4412, -1595);
      a.quadraticCurveTo(-4486, -1799, -4508, -2018);
      a.lineTo(-4545, -2406);
      a.quadraticCurveTo(-4564, -2602, -4597, -2796);
      a.quadraticCurveTo(-4628, -2981, -4671, -3165);
      a.quadraticCurveTo(-4718, -3369, -4805, -3565);
      a.quadraticCurveTo(-4882, -3737, -5005, -3881);
      a.quadraticCurveTo(-5173, -4036, -5369, -4146);
      a.quadraticCurveTo(-5437, -4182, -5508, -4212);
      a.lineTo(-5465, -4218);
      a.moveTo(-5458, -4214);
      a.quadraticCurveTo(-5258, -4248, -5058, -4217);
      a.quadraticCurveTo(-4840, -4181, -4627, -4128);
      a.quadraticCurveTo(-4454, -4084, -4288, -4021);
      a.quadraticCurveTo(-4069, -3939, -3861, -3824);
      a.quadraticCurveTo(-3659, -3710, -3478, -3563);
      a.quadraticCurveTo(-3316, -3433, -3173, -3280);
      a.lineTo(-2878, -2972);
      a.quadraticCurveTo(-2777, -2869, -2683, -2752);
      a.quadraticCurveTo(-2566, -2605, -2456, -2451);
      a.quadraticCurveTo(-2328, -2271, -2189, -2098);
      a.lineTo(-1891, -1740);
      a.quadraticCurveTo(-1763, -1589, -1620, -1451);
      a.quadraticCurveTo(-1462, -1297, -1269, -1194);
      a.quadraticCurveTo(-1068, -1088, -849, -1040);
      a.lineTo(-702, -1007);
      a.lineTo(-700, -1007);
      a.lineTo(-699, -1007);
      a.lineTo(-693, -1006);
      a.moveTo(-689, -1005);
      a.lineTo(-614, -1E3);
      a.lineTo(-599, -998);
      a.lineTo(-598, -998);
      a.lineTo(-589, -998);
      a.lineTo(-590, -997);
      a.lineTo(-591, -997);
      a.lineTo(-375, -1064);
      a.moveTo(-4865, -4106);
      a.quadraticCurveTo(-4780, -4075, -4707, -4021);
      a.quadraticCurveTo(-4547, -3956, -4412, -3850);
      a.lineTo(-4379, -3822);
      a.lineTo(-4408, -3751);
      a.lineTo(-4501, -3769);
      a.quadraticCurveTo(-4561, -3773, -4618, -3750);
      a.lineTo(-4637, -3744);
      a.lineTo(-4804, -3954);
      a.quadraticCurveTo(-4980, -4089, -5193, -4142);
      a.lineTo(-5262, -4160);
      a.quadraticCurveTo(-5057, -4175, -4865, -4106);
      a.closePath();
      a.moveTo(-694, -1005);
      a.lineTo(-691, -1003);
      a.lineTo(-690, -1004);
      a.lineTo(-689, -1003);
      a.lineTo(-689, -1004);
      a.lineTo(-691, -1004);
      a.lineTo(-694, -1005);
      a.closePath();
      a.moveTo(-694, -1005);
      a.lineTo(-692, -1005);
      a.lineTo(-683, -1004);
      a.lineTo(-682, -1004);
      a.lineTo(-679, -1003);
      a.lineTo(-675, -1003);
      a.lineTo(-672, -1003);
      a.lineTo(-677, -1004);
      a.lineTo(-680, -1004);
      a.moveTo(-692, -1005);
      a.lineTo(-691, -1004);
      a.lineTo(-683, -1004);
      a.lineTo(-686, -1003);
      a.lineTo(-685, -1003);
      a.lineTo(-684, -1003);
      a.lineTo(-682, -1003);
      a.lineTo(-682, -1004);
      a.moveTo(-693, -1006);
      a.lineTo(-694, -1005);
      a.lineTo(-697, -1006);
      a.lineTo(-697, -1005);
      a.lineTo(-695, -1005);
      a.lineTo(-694, -1005);
      a.lineTo(-696, -1004);
      a.lineTo(-697, -1005);
      a.lineTo(-698, -1005);
      a.lineTo(-698, -1006);
      a.moveTo(-700, -1006);
      a.lineTo(-702, -1007);
      a.lineTo(-700, -1006);
      a.closePath();
      a.moveTo(-700, -1006);
      a.lineTo(-700, -1007);
      a.lineTo(-699, -1006);
      a.lineTo(-699, -1007);
      a.lineTo(-694, -1005);
      a.moveTo(-697, -1005);
      a.lineTo(-698, -1006);
      a.lineTo(-698, -1005);
      a.moveTo(-698, -1006);
      a.lineTo(-700, -1006);
      a.moveTo(-698, -1006);
      a.lineTo(-697, -1006);
      a.lineTo(-699, -1006);
      a.lineTo(-698, -1006);
      a.closePath();
      a.moveTo(-698, -1006);
      a.lineTo(-700, -1007);
      a.moveTo(-696, -1004);
      a.lineTo(-697, -1005);
      a.moveTo(-686, -1003);
      a.lineTo(-685, -1002);
      a.lineTo(-685, -1003);
      a.moveTo(-685, -1002);
      a.lineTo(-680, -1001);
      a.lineTo(-684, -1002);
      a.lineTo(-685, -1002);
      a.closePath();
      a.moveTo(-684, -1002);
      a.lineTo(-683, -1002);
      a.lineTo(-684, -1003);
      a.lineTo(-684, -1002);
      a.closePath();
      a.moveTo(-686, -1003);
      a.lineTo(-687, -1003);
      a.lineTo(-685, -1002);
      a.moveTo(-686, -1003);
      a.lineTo(-688, -1004);
      a.lineTo(-687, -1003);
      a.lineTo(-689, -1004);
      a.lineTo(-688, -1004);
      a.moveTo(-683, -1002);
      a.lineTo(-682, -1003);
      a.moveTo(-691, -1003);
      a.lineTo(-689, -1003);
      a.lineTo(-687, -1003);
      a.moveTo(-695, -1005);
      a.lineTo(-696, -1004);
      a.moveTo(-683, -1002);
      a.lineTo(-680, -1001);
      a.lineTo(-676, -1E3);
      a.lineTo(-667, -999);
      a.moveTo(-669, -1E3);
      a.lineTo(-675, -1002);
      a.lineTo(-682, -1003);
      a.lineTo(-677, -1003);
      a.lineTo(-679, -1003);
      a.moveTo(-677, -1003);
      a.lineTo(-675, -1003);
      a.moveTo(-666, -999);
      a.lineTo(-667, -999);
      a.moveTo(-665, -1001);
      a.lineTo(-666, -1002);
      a.lineTo(-667, -1002);
      a.moveTo(-651, -999);
      a.lineTo(-651, -1E3);
      a.lineTo(-656, -1001);
      a.lineTo(-663, -1002);
      a.lineTo(-666, -1002);
      a.lineTo(-669, -1002);
      a.lineTo(-667, -1002);
      a.moveTo(-675, -1002);
      a.lineTo(-660, -1E3);
      a.lineTo(-664, -1001);
      a.lineTo(-669, -1002);
      a.lineTo(-672, -1003);
      a.moveTo(-665, -1001);
      a.lineTo(-664, -1001);
      a.moveTo(-676, -1E3);
      a.lineTo(-661, -997);
      a.lineTo(-652, -996);
      a.lineTo(-651, -995);
      a.lineTo(-648, -995);
      a.lineTo(-648, -996);
      a.lineTo(-649, -997);
      a.lineTo(-675, -1002);
      a.moveTo(-650, -998);
      a.lineTo(-649, -997);
      a.lineTo(-648, -997);
      a.lineTo(-648, -998);
      a.lineTo(-650, -998);
      a.closePath();
      a.moveTo(-650, -998);
      a.lineTo(-651, -998);
      a.lineTo(-655, -999);
      a.lineTo(-660, -1E3);
      a.moveTo(-651, -1E3);
      a.lineTo(-650, -999);
      a.lineTo(-648, -999);
      a.lineTo(-648, -1E3);
      a.lineTo(-651, -1E3);
      a.closePath();
      a.moveTo(-647, -998);
      a.lineTo(-648, -999);
      a.lineTo(-648, -998);
      a.lineTo(-647, -998);
      a.closePath();
      a.moveTo(-647, -998);
      a.lineTo(-645, -998);
      a.lineTo(-642, -997);
      a.lineTo(-643, -998);
      a.lineTo(-644, -999);
      a.lineTo(-646, -999);
      a.lineTo(-648, -999);
      a.moveTo(-644, -999);
      a.lineTo(-645, -1E3);
      a.lineTo(-646, -1E3);
      a.lineTo(-648, -1E3);
      a.lineTo(-646, -999);
      a.moveTo(-648, -1001);
      a.lineTo(-648, -1E3);
      a.moveTo(-646, -1E3);
      a.lineTo(-648, -1001);
      a.lineTo(-635, -1E3);
      a.lineTo(-614, -1E3);
      a.moveTo(-651, -998);
      a.lineTo(-651, -999);
      a.lineTo(-655, -999);
      a.moveTo(-652, -996);
      a.lineTo(-655, -996);
      a.moveTo(-651, -999);
      a.lineTo(-650, -999);
      a.moveTo(-648, -1001);
      a.lineTo(-656, -1001);
      a.moveTo(-648, -996);
      a.lineTo(-648, -997);
      a.lineTo(-642, -995);
      a.lineTo(-642, -996);
      a.lineTo(-645, -998);
      a.lineTo(-641, -997);
      a.lineTo(-642, -997);
      a.lineTo(-641, -997);
      a.lineTo(-643, -999);
      a.lineTo(-643, -998);
      a.lineTo(-644, -999);
      a.moveTo(-635, -998);
      a.lineTo(-639, -998);
      a.lineTo(-640, -998);
      a.lineTo(-639, -996);
      a.lineTo(-635, -997);
      a.lineTo(-635, -998);
      a.closePath();
      a.moveTo(-635, -998);
      a.lineTo(-643, -1E3);
      a.lineTo(-642, -999);
      a.lineTo(-639, -998);
      a.moveTo(-635, -998);
      a.lineTo(-635, -1E3);
      a.moveTo(-643, -999);
      a.lineTo(-644, -999);
      a.lineTo(-645, -1E3);
      a.lineTo(-643, -1E3);
      a.moveTo(-641, -998);
      a.lineTo(-642, -999);
      a.lineTo(-643, -999);
      a.lineTo(-641, -998);
      a.closePath();
      a.moveTo(-641, -998);
      a.lineTo(-640, -998);
      a.moveTo(-641, -997);
      a.lineTo(-640, -997);
      a.lineTo(-641, -997);
      a.closePath();
      a.moveTo(-641, -998);
      a.lineTo(-640, -997);
      a.lineTo(-639, -996);
      a.lineTo(-638, -996);
      a.lineTo(-635, -996);
      a.lineTo(-635, -997);
      a.lineTo(-625, -996);
      a.lineTo(-635, -998);
      a.lineTo(-626, -998);
      a.lineTo(-620, -997);
      a.lineTo(-604, -997);
      a.lineTo(-601, -997);
      a.lineTo(-599, -998);
      a.moveTo(-641, -995);
      a.lineTo(-636, -994);
      a.lineTo(-642, -996);
      a.lineTo(-641, -995);
      a.closePath();
      a.moveTo(-641, -995);
      a.lineTo(-642, -995);
      a.moveTo(-634, -994);
      a.lineTo(-635, -995);
      a.lineTo(-635, -994);
      a.lineTo(-634, -994);
      a.closePath();
      a.moveTo(-634, -994);
      a.lineTo(-632, -994);
      a.lineTo(-628, -993);
      a.lineTo(-635, -996);
      a.lineTo(-635, -995);
      a.lineTo(-635, -994);
      a.lineTo(-631, -993);
      a.lineTo(-632, -994);
      a.moveTo(-641, -995);
      a.lineTo(-635, -992);
      a.lineTo(-634, -992);
      a.lineTo(-635, -994);
      a.lineTo(-636, -994);
      a.moveTo(-635, -996);
      a.lineTo(-637, -995);
      a.lineTo(-635, -994);
      a.moveTo(-637, -995);
      a.lineTo(-638, -996);
      a.lineTo(-639, -996);
      a.lineTo(-641, -997);
      a.moveTo(-635, -996);
      a.lineTo(-632, -996);
      a.lineTo(-635, -997);
      a.moveTo(-639, -996);
      a.lineTo(-640, -997);
      a.moveTo(-648, -995);
      a.lineTo(-635, -992);
      a.moveTo(-626, -991);
      a.lineTo(-630, -992);
      a.lineTo(-631, -993);
      a.lineTo(-629, -990);
      a.lineTo(-626, -990);
      a.lineTo(-626, -991);
      a.closePath();
      a.moveTo(-626, -991);
      a.lineTo(-624, -991);
      a.lineTo(-624, -992);
      a.lineTo(-628, -993);
      a.lineTo(-630, -992);
      a.moveTo(-634, -992);
      a.lineTo(-631, -992);
      a.lineTo(-631, -993);
      a.moveTo(-624, -991);
      a.lineTo(-622, -992);
      a.lineTo(-624, -992);
      a.lineTo(-624, -993);
      a.lineTo(-625, -993);
      a.lineTo(-628, -993);
      a.moveTo(-626, -991);
      a.lineTo(-624, -990);
      a.lineTo(-623, -990);
      a.lineTo(-624, -991);
      a.moveTo(-624, -995);
      a.lineTo(-624, -994);
      a.lineTo(-623, -994);
      a.lineTo(-624, -995);
      a.closePath();
      a.moveTo(-624, -995);
      a.lineTo(-632, -996);
      a.lineTo(-624, -994);
      a.lineTo(-619, -992);
      a.lineTo(-618, -992);
      a.lineTo(-621, -994);
      a.lineTo(-623, -994);
      a.moveTo(-624, -994);
      a.lineTo(-624, -993);
      a.lineTo(-622, -992);
      a.lineTo(-620, -992);
      a.lineTo(-618, -991);
      a.lineTo(-619, -992);
      a.lineTo(-593, -996);
      a.lineTo(-592, -998);
      a.lineTo(-601, -997);
      a.moveTo(-623, -990);
      a.lineTo(-622, -992);
      a.moveTo(-625, -996);
      a.lineTo(-624, -996);
      a.lineTo(-626, -998);
      a.moveTo(-624, -995);
      a.lineTo(-624, -996);
      a.lineTo(-615, -995);
      a.lineTo(-614, -995);
      a.lineTo(-614, -996);
      a.lineTo(-620, -997);
      a.moveTo(-625, -993);
      a.lineTo(-624, -994);
      a.moveTo(-626, -990);
      a.lineTo(-624, -990);
      a.moveTo(-615, -995);
      a.lineTo(-618, -992);
      a.moveTo(-619, -992);
      a.lineTo(-617, -991);
      a.lineTo(-615, -992);
      a.lineTo(-613, -990);
      a.lineTo(-614, -990);
      a.lineTo(-616, -990);
      a.lineTo(-618, -990);
      a.lineTo(-619, -990);
      a.lineTo(-620, -992);
      a.lineTo(-618, -990);
      a.lineTo(-618, -991);
      a.moveTo(-616, -990);
      a.lineTo(-618, -991);
      a.lineTo(-617, -991);
      a.moveTo(-615, -992);
      a.lineTo(-614, -990);
      a.moveTo(-621, -994);
      a.lineTo(-615, -995);
      a.moveTo(-634, -992);
      a.lineTo(-629, -990);
      a.moveTo(-593, -996);
      a.lineTo(-591, -997);
      a.lineTo(-592, -998);
      a.lineTo(-590, -997);
      a.moveTo(-598, -998);
      a.lineTo(-592, -998);
      a.moveTo(-614, -996);
      a.lineTo(-604, -997);
      a.moveTo(-4707, -4021);
      a.lineTo(-4804, -3954)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4535);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-693, -1006);
      a.lineTo(-689, -1005);
      a.moveTo(-1046, -26);
      a.lineTo(-1022, -57);
      a.lineTo(-951, 23);
      a.lineTo(-921, 63);
      a.lineTo(-753, 257);
      a.moveTo(-3729, -3423);
      a.lineTo(-4019, -3647);
      a.moveTo(-3364, -3081);
      a.lineTo(-3645, -3350);
      a.moveTo(-4738, -3693);
      a.lineTo(-4656, -3601);
      a.moveTo(-4513, -3337);
      a.lineTo(-4472, -3194);
      a.moveTo(-4599, -3515);
      a.lineTo(-4540, -3401);
      a.moveTo(-4410, -2716);
      a.lineTo(-4391, -2498);
      a.moveTo(-4368, -2278);
      a.lineTo(-4341, -2048);
      a.moveTo(-4450, -3070);
      a.lineTo(-4428, -2893);
      a.moveTo(-4309, -1828);
      a.lineTo(-4254, -1553);
      a.moveTo(-4189, -1370);
      a.lineTo(-4107, -1205);
      a.moveTo(-3806, -844);
      a.lineTo(-3679, -746);
      a.moveTo(-4037, -1096);
      a.lineTo(-3887, -918);
      a.moveTo(-2653, -2317);
      a.lineTo(-2918, -2571);
      a.moveTo(-1916, -1584);
      a.lineTo(-2153, -1829);
      a.moveTo(-1826, -1346);
      a.lineTo(-1932, -1254);
      a.lineTo(-1821, -1121);
      a.lineTo(-1748, -1159);
      a.moveTo(-1932, -1254);
      a.lineTo(-2142, -1475);
      a.moveTo(-2707, -1926);
      a.lineTo(-2264, -1587);
      a.moveTo(-680, -1004);
      a.lineTo(-689, -1005);
      a.moveTo(-667, -999);
      a.lineTo(-669, -1E3);
      a.moveTo(-667, -1002);
      a.lineTo(-665, -1001);
      a.lineTo(-651, -999);
      a.moveTo(-661, -997);
      a.lineTo(-666, -999);
      a.moveTo(-677, -1004);
      a.lineTo(-663, -1002);
      a.moveTo(-655, -996);
      a.lineTo(-651, -995);
      a.moveTo(-655, -996);
      a.lineTo(-661, -997);
      a.moveTo(-1361, -1162);
      a.lineTo(-1515, -1249);
      a.moveTo(-1190, -1083);
      a.lineTo(-1283, -1123);
      a.moveTo(-1160, -221);
      a.lineTo(-1420, -559);
      a.moveTo(-229, -370);
      a.lineTo(-382, -490);
      a.moveTo(-12, -216);
      a.lineTo(-141, -307);
      a.moveTo(-596, -683);
      a.lineTo(-697, -772);
      a.moveTo(-1601, -1307);
      a.lineTo(-1806, -1477);
      a.moveTo(-2287, -1962);
      a.lineTo(-2497, -2165);
      a.moveTo(-1705, -967);
      a.lineTo(-1496, -663);
      a.moveTo(-2998, -2664);
      a.lineTo(-3267, -2977);
      a.moveTo(-960, 111);
      a.lineTo(-921, 63);
      a.moveTo(-976, 54);
      a.lineTo(-951, 23);
      a.moveTo(90, -1143);
      a.lineTo(-55, -999)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4535);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-5189, -4163);
      a.quadraticCurveTo(-5023, -4163, -4865, -4106);
      a.quadraticCurveTo(-4780, -4075, -4707, -4021);
      a.quadraticCurveTo(-4547, -3956, -4412, -3850);
      a.lineTo(-4379, -3822);
      a.lineTo(-4408, -3751);
      a.lineTo(-4501, -3769);
      a.quadraticCurveTo(-4510, -3770, -4519, -3770);
      a.quadraticCurveTo(-4570, -3770, -4618, -3750);
      a.lineTo(-4637, -3744);
      a.lineTo(-4804, -3954);
      a.quadraticCurveTo(-4980, -4089, -5193, -4142);
      a.lineTo(-5262, -4160);
      a.quadraticCurveTo(-5225, -4163, -5189, -4163);
      a.closePath();
      a.moveTo(-589, -998);
      a.lineTo(-589, -998);
      a.lineTo(-590, -998);
      a.lineTo(-589, -998);
      a.closePath();
      a.moveTo(-603, -998);
      a.lineTo(-613, -997);
      a.lineTo(-619, -998);
      a.closePath();
      a.moveTo(-5248, -4233);
      a.quadraticCurveTo(-5353, -4233, -5457, -4215);
      a.lineTo(-5464, -4219);
      a.lineTo(-5507, -4213);
      a.quadraticCurveTo(-5436, -4183, -5368, -4147);
      a.quadraticCurveTo(-5172, -4037, -5004, -3882);
      a.lineTo(-4924, -3797);
      a.quadraticCurveTo(-4780, -3648, -4695, -3459);
      a.quadraticCurveTo(-4602, -3252, -4565, -3029);
      a.lineTo(-4490, -2580);
      a.lineTo(-4415, -2124);
      a.quadraticCurveTo(-4389, -1958, -4347, -1795);
      a.quadraticCurveTo(-4290, -1575, -4188, -1371);
      a.lineTo(-4153, -1314);
      a.quadraticCurveTo(-4029, -1113, -3849, -964);
      a.quadraticCurveTo(-3679, -823, -3483, -720);
      a.quadraticCurveTo(-3288, -618, -3085, -536);
      a.quadraticCurveTo(-2881, -455, -2689, -351);
      a.quadraticCurveTo(-2549, -276, -2413, -194);
      a.quadraticCurveTo(-2258, -100, -2084, -63);
      a.lineTo(-1802, -4);
      a.quadraticCurveTo(-1588, 35, -1398, 125);
      a.quadraticCurveTo(-1306, 166, -1207, 192);
      a.quadraticCurveTo(-1170, 201, -1137, 201);
      a.quadraticCurveTo(-1032, 201, -959, 110);
      a.lineTo(-975, 53);
      a.lineTo(-1045, -27);
      a.quadraticCurveTo(-1209, -159, -1363, -299);
      a.quadraticCurveTo(-1526, -447, -1627, -643);
      a.quadraticCurveTo(-1731, -846, -1766, -1074);
      a.lineTo(-1766, -1074);
      a.lineTo(-1403, -679);
      a.quadraticCurveTo(-1230, -487, -1005, -361);
      a.quadraticCurveTo(-881, -290, -742, -284);
      a.lineTo(-656, -296);
      a.quadraticCurveTo(-583, -323, -532, -380);
      a.quadraticCurveTo(-409, -516, -367, -693);
      a.quadraticCurveTo(-322, -879, -374, -1065);
      a.lineTo(-589, -998);
      a.lineTo(-589, -998);
      a.lineTo(-588, -999);
      a.lineTo(-598, -999);
      a.lineTo(-613, -1001);
      a.lineTo(-634, -1001);
      a.lineTo(-647, -1002);
      a.lineTo(-647, -1001);
      a.lineTo(-650, -1001);
      a.lineTo(-655, -1002);
      a.lineTo(-662, -1003);
      a.lineTo(-668, -1003);
      a.lineTo(-671, -1004);
      a.lineTo(-676, -1005);
      a.lineTo(-679, -1005);
      a.lineTo(-688, -1006);
      a.lineTo(-692, -1007);
      a.lineTo(-698, -1008);
      a.lineTo(-698, -1007);
      a.lineTo(-699, -1007);
      a.lineTo(-699, -1008);
      a.lineTo(-701, -1008);
      a.lineTo(-848, -1041);
      a.quadraticCurveTo(-1067, -1089, -1268, -1195);
      a.quadraticCurveTo(-1461, -1298, -1619, -1452);
      a.quadraticCurveTo(-1762, -1590, -1890, -1741);
      a.lineTo(-2188, -2099);
      a.quadraticCurveTo(-2327, -2272, -2455, -2452);
      a.quadraticCurveTo(-2565, -2606, -2682, -2753);
      a.quadraticCurveTo(-2776, -2870, -2877, -2973);
      a.lineTo(-3172, -3281);
      a.quadraticCurveTo(-3315, -3434, -3477, -3564);
      a.quadraticCurveTo(-3658, -3711, -3860, -3825);
      a.quadraticCurveTo(-4068, -3940, -4287, -4022);
      a.quadraticCurveTo(-4453, -4085, -4626, -4129);
      a.quadraticCurveTo(-4839, -4182, -5057, -4218);
      a.quadraticCurveTo(-5152, -4233, -5248, -4233);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4535);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-5189, -4163);
      a.quadraticCurveTo(-5225, -4163, -5262, -4160);
      a.lineTo(-5193, -4142);
      a.quadraticCurveTo(-4980, -4089, -4804, -3954);
      a.lineTo(-4637, -3744);
      a.lineTo(-4618, -3750);
      a.quadraticCurveTo(-4569, -3770, -4519, -3770);
      a.quadraticCurveTo(-4510, -3770, -4501, -3769);
      a.lineTo(-4408, -3751);
      a.lineTo(-4379, -3822);
      a.lineTo(-4412, -3850);
      a.quadraticCurveTo(-4547, -3956, -4707, -4021);
      a.quadraticCurveTo(-4780, -4075, -4865, -4106);
      a.quadraticCurveTo(-5023, -4163, -5189, -4163);
      a.closePath();
      a.moveTo(-5005, -3881);
      a.lineTo(-5005, -3881);
      a.quadraticCurveTo(-4882, -3737, -4805, -3565);
      a.quadraticCurveTo(-4718, -3369, -4671, -3165);
      a.quadraticCurveTo(-4628, -2981, -4597, -2796);
      a.quadraticCurveTo(-4564, -2602, -4545, -2406);
      a.lineTo(-4508, -2018);
      a.quadraticCurveTo(-4486, -1799, -4412, -1595);
      a.quadraticCurveTo(-4337, -1386, -4203, -1205);
      a.quadraticCurveTo(-4086, -1048, -3953, -901);
      a.quadraticCurveTo(-3793, -724, -3618, -559);
      a.quadraticCurveTo(-3488, -435, -3347, -320);
      a.lineTo(-3116, -131);
      a.quadraticCurveTo(-2964, -5, -2792, 95);
      a.quadraticCurveTo(-2594, 210, -2369, 256);
      a.lineTo(-2369, 257);
      a.lineTo(-2188, 243);
      a.quadraticCurveTo(-2154, 242, -2121, 242);
      a.quadraticCurveTo(-1933, 242, -1748, 280);
      a.quadraticCurveTo(-1581, 311, -1419, 367);
      a.quadraticCurveTo(-1258, 424, -1111, 505);
      a.quadraticCurveTo(-581, 798, -39, 1065);
      a.lineTo(98, 776);
      a.quadraticCurveTo(214, 535, 293, 278);
      a.quadraticCurveTo(336, 137, 351, -8);
      a.quadraticCurveTo(369, -185, 355, -363);
      a.quadraticCurveTo(313, -889, 50, -1351);
      a.lineTo(-6, -1288);
      a.quadraticCurveTo(-158, -1127, -375, -1064);
      a.quadraticCurveTo(-323, -878, -368, -692);
      a.quadraticCurveTo(-410, -515, -533, -379);
      a.quadraticCurveTo(-584, -322, -657, -295);
      a.lineTo(-743, -283);
      a.quadraticCurveTo(-882, -289, -1006, -360);
      a.quadraticCurveTo(-1231, -486, -1404, -678);
      a.lineTo(-1767, -1073);
      a.lineTo(-1767, -1073);
      a.quadraticCurveTo(-1732, -845, -1628, -642);
      a.quadraticCurveTo(-1527, -446, -1364, -298);
      a.quadraticCurveTo(-1210, -158, -1046, -26);
      a.lineTo(-976, 54);
      a.lineTo(-960, 111);
      a.quadraticCurveTo(-1033, 202, -1138, 202);
      a.quadraticCurveTo(-1171, 202, -1208, 193);
      a.quadraticCurveTo(-1307, 167, -1399, 126);
      a.quadraticCurveTo(-1589, 36, -1803, -3);
      a.lineTo(-2085, -62);
      a.quadraticCurveTo(-2259, -99, -2414, -193);
      a.quadraticCurveTo(-2550, -275, -2690, -350);
      a.quadraticCurveTo(-2882, -454, -3086, -535);
      a.quadraticCurveTo(-3289, -617, -3484, -719);
      a.quadraticCurveTo(-3680, -822, -3850, -963);
      a.quadraticCurveTo(-4030, -1112, -4154, -1313);
      a.lineTo(-4189, -1370);
      a.quadraticCurveTo(-4291, -1574, -4348, -1794);
      a.quadraticCurveTo(-4390, -1957, -4416, -2123);
      a.lineTo(-4491, -2579);
      a.lineTo(-4566, -3028);
      a.quadraticCurveTo(-4603, -3251, -4696, -3458);
      a.quadraticCurveTo(-4781, -3647, -4925, -3796);
      a.lineTo(-5005, -3881);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4535);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-375, -1064);
      a.quadraticCurveTo(-158, -1127, -6, -1288);
      a.lineTo(50, -1351);
      a.quadraticCurveTo(313, -889, 355, -363);
      a.quadraticCurveTo(369, -185, 351, -8);
      a.quadraticCurveTo(336, 137, 293, 278);
      a.quadraticCurveTo(214, 535, 98, 776);
      a.lineTo(-39, 1065);
      a.quadraticCurveTo(-581, 798, -1111, 505);
      a.quadraticCurveTo(-1258, 424, -1419, 367);
      a.quadraticCurveTo(-1581, 311, -1748, 280);
      a.quadraticCurveTo(-1966,
        235, -2188, 243);
      a.lineTo(-2369, 257);
      a.moveTo(-2369, 256);
      a.quadraticCurveTo(-2594, 210, -2792, 95);
      a.quadraticCurveTo(-2964, -5, -3116, -131);
      a.lineTo(-3347, -320);
      a.quadraticCurveTo(-3488, -435, -3618, -559);
      a.quadraticCurveTo(-3793, -724, -3953, -901);
      a.quadraticCurveTo(-4086, -1048, -4203, -1205);
      a.quadraticCurveTo(-4337, -1386, -4412, -1595);
      a.quadraticCurveTo(-4486, -1799, -4508, -2018);
      a.lineTo(-4545, -2406);
      a.quadraticCurveTo(-4564, -2602, -4597, -2796);
      a.quadraticCurveTo(-4628, -2981, -4671, -3165);
      a.quadraticCurveTo(-4718, -3369, -4805, -3565);
      a.quadraticCurveTo(-4882, -3737, -5005, -3881);
      a.quadraticCurveTo(-5173, -4036, -5369, -4146);
      a.quadraticCurveTo(-5437, -4182, -5508, -4212);
      a.lineTo(-5465, -4218);
      a.moveTo(-5458, -4214);
      a.quadraticCurveTo(-5258, -4248, -5058, -4217);
      a.quadraticCurveTo(-4840, -4181, -4627, -4128);
      a.quadraticCurveTo(-4454, -4084, -4288, -4021);
      a.quadraticCurveTo(-4069, -3939, -3861, -3824);
      a.quadraticCurveTo(-3659, -3710, -3478, -3563);
      a.quadraticCurveTo(-3316, -3433, -3173, -3280);
      a.lineTo(-2878, -2972);
      a.quadraticCurveTo(-2777, -2869, -2683, -2752);
      a.quadraticCurveTo(-2566, -2605, -2456, -2451);
      a.quadraticCurveTo(-2328, -2271, -2189, -2098);
      a.lineTo(-1891, -1740);
      a.quadraticCurveTo(-1763, -1589, -1620, -1451);
      a.quadraticCurveTo(-1462, -1297, -1269, -1194);
      a.quadraticCurveTo(-1068, -1088, -849, -1040);
      a.lineTo(-702, -1007);
      a.lineTo(-700, -1007);
      a.lineTo(-699, -1007);
      a.lineTo(-693, -1006);
      a.moveTo(-689, -1005);
      a.lineTo(-614, -1E3);
      a.lineTo(-599, -998);
      a.lineTo(-598, -998);
      a.lineTo(-589, -998);
      a.lineTo(-590, -997);
      a.lineTo(-591, -997);
      a.lineTo(-375, -1064);
      a.moveTo(-4865, -4106);
      a.quadraticCurveTo(-4780, -4075, -4707, -4021);
      a.quadraticCurveTo(-4547, -3956, -4412, -3850);
      a.lineTo(-4379, -3822);
      a.lineTo(-4408, -3751);
      a.lineTo(-4501, -3769);
      a.quadraticCurveTo(-4561, -3773, -4618, -3750);
      a.lineTo(-4637, -3744);
      a.lineTo(-4804, -3954);
      a.quadraticCurveTo(-4980, -4089, -5193, -4142);
      a.lineTo(-5262, -4160);
      a.quadraticCurveTo(-5057, -4175, -4865, -4106);
      a.closePath();
      a.moveTo(-694, -1005);
      a.lineTo(-691, -1003);
      a.lineTo(-690, -1004);
      a.lineTo(-689, -1003);
      a.lineTo(-689, -1004);
      a.lineTo(-691, -1004);
      a.lineTo(-694, -1005);
      a.closePath();
      a.moveTo(-694, -1005);
      a.lineTo(-692, -1005);
      a.lineTo(-683, -1004);
      a.lineTo(-682, -1004);
      a.lineTo(-679, -1003);
      a.lineTo(-675, -1003);
      a.lineTo(-672, -1003);
      a.lineTo(-677, -1004);
      a.lineTo(-680, -1004);
      a.moveTo(-692, -1005);
      a.lineTo(-691, -1004);
      a.lineTo(-683, -1004);
      a.lineTo(-686, -1003);
      a.lineTo(-685, -1003);
      a.lineTo(-684, -1003);
      a.lineTo(-682, -1003);
      a.lineTo(-682, -1004);
      a.moveTo(-693, -1006);
      a.lineTo(-694, -1005);
      a.lineTo(-697, -1006);
      a.lineTo(-697, -1005);
      a.lineTo(-695, -1005);
      a.lineTo(-694, -1005);
      a.lineTo(-696, -1004);
      a.lineTo(-697, -1005);
      a.lineTo(-698, -1005);
      a.lineTo(-698, -1006);
      a.moveTo(-700, -1006);
      a.lineTo(-702, -1007);
      a.lineTo(-700, -1006);
      a.closePath();
      a.moveTo(-700, -1006);
      a.lineTo(-700, -1007);
      a.lineTo(-699, -1006);
      a.lineTo(-699, -1007);
      a.lineTo(-694, -1005);
      a.moveTo(-697, -1005);
      a.lineTo(-698, -1006);
      a.lineTo(-698, -1005);
      a.moveTo(-698, -1006);
      a.lineTo(-700, -1006);
      a.moveTo(-698, -1006);
      a.lineTo(-697, -1006);
      a.lineTo(-699, -1006);
      a.lineTo(-698, -1006);
      a.closePath();
      a.moveTo(-698, -1006);
      a.lineTo(-700, -1007);
      a.moveTo(-696, -1004);
      a.lineTo(-697, -1005);
      a.moveTo(-686, -1003);
      a.lineTo(-685, -1002);
      a.lineTo(-685, -1003);
      a.moveTo(-685, -1002);
      a.lineTo(-680, -1001);
      a.lineTo(-684, -1002);
      a.lineTo(-685, -1002);
      a.closePath();
      a.moveTo(-684, -1002);
      a.lineTo(-683, -1002);
      a.lineTo(-684, -1003);
      a.lineTo(-684, -1002);
      a.closePath();
      a.moveTo(-686, -1003);
      a.lineTo(-687, -1003);
      a.lineTo(-685, -1002);
      a.moveTo(-686, -1003);
      a.lineTo(-688, -1004);
      a.lineTo(-687, -1003);
      a.lineTo(-689, -1004);
      a.lineTo(-688, -1004);
      a.moveTo(-683, -1002);
      a.lineTo(-682, -1003);
      a.moveTo(-691, -1003);
      a.lineTo(-689, -1003);
      a.lineTo(-687, -1003);
      a.moveTo(-695, -1005);
      a.lineTo(-696, -1004);
      a.moveTo(-683, -1002);
      a.lineTo(-680, -1001);
      a.lineTo(-676, -1E3);
      a.lineTo(-667, -999);
      a.moveTo(-669, -1E3);
      a.lineTo(-675, -1002);
      a.lineTo(-682, -1003);
      a.lineTo(-677, -1003);
      a.lineTo(-679, -1003);
      a.moveTo(-677, -1003);
      a.lineTo(-675, -1003);
      a.moveTo(-666, -999);
      a.lineTo(-667, -999);
      a.moveTo(-665, -1001);
      a.lineTo(-666, -1002);
      a.lineTo(-667, -1002);
      a.moveTo(-651, -999);
      a.lineTo(-651, -1E3);
      a.lineTo(-656, -1001);
      a.lineTo(-663, -1002);
      a.lineTo(-666, -1002);
      a.lineTo(-669, -1002);
      a.lineTo(-667, -1002);
      a.moveTo(-675, -1002);
      a.lineTo(-660, -1E3);
      a.lineTo(-664, -1001);
      a.lineTo(-669, -1002);
      a.lineTo(-672, -1003);
      a.moveTo(-665, -1001);
      a.lineTo(-664, -1001);
      a.moveTo(-676, -1E3);
      a.lineTo(-661, -997);
      a.lineTo(-652, -996);
      a.lineTo(-651, -995);
      a.lineTo(-648, -995);
      a.lineTo(-648, -996);
      a.lineTo(-649, -997);
      a.lineTo(-675, -1002);
      a.moveTo(-650, -998);
      a.lineTo(-649, -997);
      a.lineTo(-648, -997);
      a.lineTo(-648, -998);
      a.lineTo(-650, -998);
      a.closePath();
      a.moveTo(-650, -998);
      a.lineTo(-651, -998);
      a.lineTo(-655, -999);
      a.lineTo(-660, -1E3);
      a.moveTo(-651, -1E3);
      a.lineTo(-650, -999);
      a.lineTo(-648, -999);
      a.lineTo(-648, -1E3);
      a.lineTo(-651, -1E3);
      a.closePath();
      a.moveTo(-647, -998);
      a.lineTo(-648, -999);
      a.lineTo(-648, -998);
      a.lineTo(-647, -998);
      a.closePath();
      a.moveTo(-647, -998);
      a.lineTo(-645, -998);
      a.lineTo(-642, -997);
      a.lineTo(-643, -998);
      a.lineTo(-644, -999);
      a.lineTo(-646, -999);
      a.lineTo(-648, -999);
      a.moveTo(-644, -999);
      a.lineTo(-645, -1E3);
      a.lineTo(-646, -1E3);
      a.lineTo(-648, -1E3);
      a.lineTo(-646, -999);
      a.moveTo(-648, -1001);
      a.lineTo(-648, -1E3);
      a.moveTo(-646, -1E3);
      a.lineTo(-648, -1001);
      a.lineTo(-635, -1E3);
      a.lineTo(-614, -1E3);
      a.moveTo(-651, -998);
      a.lineTo(-651, -999);
      a.lineTo(-655, -999);
      a.moveTo(-652, -996);
      a.lineTo(-655, -996);
      a.moveTo(-651, -999);
      a.lineTo(-650, -999);
      a.moveTo(-648, -1001);
      a.lineTo(-656, -1001);
      a.moveTo(-648, -996);
      a.lineTo(-648, -997);
      a.lineTo(-642, -995);
      a.lineTo(-642, -996);
      a.lineTo(-645, -998);
      a.lineTo(-641, -997);
      a.lineTo(-642, -997);
      a.lineTo(-641, -997);
      a.lineTo(-643, -999);
      a.lineTo(-643, -998);
      a.lineTo(-644, -999);
      a.moveTo(-635, -998);
      a.lineTo(-639, -998);
      a.lineTo(-640, -998);
      a.lineTo(-639, -996);
      a.lineTo(-635, -997);
      a.lineTo(-635, -998);
      a.closePath();
      a.moveTo(-635, -998);
      a.lineTo(-643, -1E3);
      a.lineTo(-642, -999);
      a.lineTo(-639, -998);
      a.moveTo(-635, -998);
      a.lineTo(-635, -1E3);
      a.moveTo(-643, -999);
      a.lineTo(-644, -999);
      a.lineTo(-645, -1E3);
      a.lineTo(-643, -1E3);
      a.moveTo(-641, -998);
      a.lineTo(-642, -999);
      a.lineTo(-643, -999);
      a.lineTo(-641, -998);
      a.closePath();
      a.moveTo(-641, -998);
      a.lineTo(-640, -998);
      a.moveTo(-641, -997);
      a.lineTo(-640, -997);
      a.lineTo(-641, -997);
      a.closePath();
      a.moveTo(-641, -998);
      a.lineTo(-640, -997);
      a.lineTo(-639, -996);
      a.lineTo(-638, -996);
      a.lineTo(-635, -996);
      a.lineTo(-635, -997);
      a.lineTo(-625, -996);
      a.lineTo(-635, -998);
      a.lineTo(-626, -998);
      a.lineTo(-620, -997);
      a.lineTo(-604, -997);
      a.lineTo(-601, -997);
      a.lineTo(-599, -998);
      a.moveTo(-641, -995);
      a.lineTo(-636, -994);
      a.lineTo(-642, -996);
      a.lineTo(-641, -995);
      a.closePath();
      a.moveTo(-641, -995);
      a.lineTo(-642, -995);
      a.moveTo(-634, -994);
      a.lineTo(-635, -995);
      a.lineTo(-635, -994);
      a.lineTo(-634, -994);
      a.closePath();
      a.moveTo(-634, -994);
      a.lineTo(-632, -994);
      a.lineTo(-628, -993);
      a.lineTo(-635, -996);
      a.lineTo(-635, -995);
      a.lineTo(-635, -994);
      a.lineTo(-631, -993);
      a.lineTo(-632, -994);
      a.moveTo(-641, -995);
      a.lineTo(-635, -992);
      a.lineTo(-634, -992);
      a.lineTo(-635, -994);
      a.lineTo(-636, -994);
      a.moveTo(-635, -996);
      a.lineTo(-637, -995);
      a.lineTo(-635, -994);
      a.moveTo(-637, -995);
      a.lineTo(-638, -996);
      a.lineTo(-639, -996);
      a.lineTo(-641, -997);
      a.moveTo(-635, -996);
      a.lineTo(-632, -996);
      a.lineTo(-635, -997);
      a.moveTo(-639, -996);
      a.lineTo(-640, -997);
      a.moveTo(-648, -995);
      a.lineTo(-635, -992);
      a.moveTo(-626, -991);
      a.lineTo(-630, -992);
      a.lineTo(-631, -993);
      a.lineTo(-629, -990);
      a.lineTo(-626, -990);
      a.lineTo(-626, -991);
      a.closePath();
      a.moveTo(-626, -991);
      a.lineTo(-624, -991);
      a.lineTo(-624, -992);
      a.lineTo(-628, -993);
      a.lineTo(-630, -992);
      a.moveTo(-634, -992);
      a.lineTo(-631, -992);
      a.lineTo(-631, -993);
      a.moveTo(-624, -991);
      a.lineTo(-622, -992);
      a.lineTo(-624, -992);
      a.lineTo(-624, -993);
      a.lineTo(-625, -993);
      a.lineTo(-628, -993);
      a.moveTo(-626, -991);
      a.lineTo(-624, -990);
      a.lineTo(-623, -990);
      a.lineTo(-624, -991);
      a.moveTo(-624, -995);
      a.lineTo(-624, -994);
      a.lineTo(-623, -994);
      a.lineTo(-624, -995);
      a.closePath();
      a.moveTo(-624, -995);
      a.lineTo(-632, -996);
      a.lineTo(-624, -994);
      a.lineTo(-619, -992);
      a.lineTo(-618, -992);
      a.lineTo(-621, -994);
      a.lineTo(-623, -994);
      a.moveTo(-624, -994);
      a.lineTo(-624, -993);
      a.lineTo(-622, -992);
      a.lineTo(-620, -992);
      a.lineTo(-618, -991);
      a.lineTo(-619, -992);
      a.lineTo(-593, -996);
      a.lineTo(-592, -998);
      a.lineTo(-601, -997);
      a.moveTo(-623, -990);
      a.lineTo(-622, -992);
      a.moveTo(-625, -996);
      a.lineTo(-624, -996);
      a.lineTo(-626, -998);
      a.moveTo(-624, -995);
      a.lineTo(-624, -996);
      a.lineTo(-615, -995);
      a.lineTo(-614, -995);
      a.lineTo(-614, -996);
      a.lineTo(-620, -997);
      a.moveTo(-625, -993);
      a.lineTo(-624, -994);
      a.moveTo(-626, -990);
      a.lineTo(-624, -990);
      a.moveTo(-615, -995);
      a.lineTo(-618, -992);
      a.moveTo(-619, -992);
      a.lineTo(-617, -991);
      a.lineTo(-615, -992);
      a.lineTo(-613, -990);
      a.lineTo(-614, -990);
      a.lineTo(-616, -990);
      a.lineTo(-618, -990);
      a.lineTo(-619, -990);
      a.lineTo(-620, -992);
      a.lineTo(-618, -990);
      a.lineTo(-618, -991);
      a.moveTo(-616, -990);
      a.lineTo(-618, -991);
      a.lineTo(-617, -991);
      a.moveTo(-615, -992);
      a.lineTo(-614, -990);
      a.moveTo(-621, -994);
      a.lineTo(-615, -995);
      a.moveTo(-634, -992);
      a.lineTo(-629, -990);
      a.moveTo(-593, -996);
      a.lineTo(-591, -997);
      a.lineTo(-592, -998);
      a.lineTo(-590, -997);
      a.moveTo(-598, -998);
      a.lineTo(-592, -998);
      a.moveTo(-614, -996);
      a.lineTo(-604, -997);
      a.moveTo(-4707, -4021);
      a.lineTo(-4804, -3954)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4535);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-693, -1006);
      a.lineTo(-689, -1005);
      a.moveTo(-1046, -26);
      a.lineTo(-1022, -57);
      a.lineTo(-951, 23);
      a.lineTo(-921, 63);
      a.lineTo(-753, 257);
      a.moveTo(-3729, -3423);
      a.lineTo(-4019, -3647);
      a.moveTo(-3364, -3081);
      a.lineTo(-3645, -3350);
      a.moveTo(-4738, -3693);
      a.lineTo(-4656, -3601);
      a.moveTo(-4513, -3337);
      a.lineTo(-4472, -3194);
      a.moveTo(-4599, -3515);
      a.lineTo(-4540, -3401);
      a.moveTo(-4410, -2716);
      a.lineTo(-4391, -2498);
      a.moveTo(-4368, -2278);
      a.lineTo(-4341, -2048);
      a.moveTo(-4450, -3070);
      a.lineTo(-4428, -2893);
      a.moveTo(-4309, -1828);
      a.lineTo(-4254, -1553);
      a.moveTo(-4189, -1370);
      a.lineTo(-4107, -1205);
      a.moveTo(-3806, -844);
      a.lineTo(-3679, -746);
      a.moveTo(-4037, -1096);
      a.lineTo(-3887, -918);
      a.moveTo(-2653, -2317);
      a.lineTo(-2918, -2571);
      a.moveTo(-1916, -1584);
      a.lineTo(-2153, -1829);
      a.moveTo(-1826, -1346);
      a.lineTo(-1932, -1254);
      a.lineTo(-1821, -1121);
      a.lineTo(-1748, -1159);
      a.moveTo(-1932, -1254);
      a.lineTo(-2142, -1475);
      a.moveTo(-2707, -1926);
      a.lineTo(-2264, -1587);
      a.moveTo(-680, -1004);
      a.lineTo(-689, -1005);
      a.moveTo(-667, -999);
      a.lineTo(-669, -1E3);
      a.moveTo(-667, -1002);
      a.lineTo(-665, -1001);
      a.lineTo(-651, -999);
      a.moveTo(-661, -997);
      a.lineTo(-666, -999);
      a.moveTo(-677, -1004);
      a.lineTo(-663, -1002);
      a.moveTo(-655, -996);
      a.lineTo(-651, -995);
      a.moveTo(-655, -996);
      a.lineTo(-661, -997);
      a.moveTo(-1361, -1162);
      a.lineTo(-1515, -1249);
      a.moveTo(-1190, -1083);
      a.lineTo(-1283, -1123);
      a.moveTo(-1160, -221);
      a.lineTo(-1420, -559);
      a.moveTo(-229, -370);
      a.lineTo(-382, -490);
      a.moveTo(-12, -216);
      a.lineTo(-141, -307);
      a.moveTo(-596, -683);
      a.lineTo(-697, -772);
      a.moveTo(-1601, -1307);
      a.lineTo(-1806, -1477);
      a.moveTo(-2287, -1962);
      a.lineTo(-2497, -2165);
      a.moveTo(-1705, -967);
      a.lineTo(-1496, -663);
      a.moveTo(-2998, -2664);
      a.lineTo(-3267, -2977);
      a.moveTo(-960, 111);
      a.lineTo(-921, 63);
      a.moveTo(-976, 54);
      a.lineTo(-951, 23);
      a.moveTo(90, -1143);
      a.lineTo(-55, -999)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4712);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-511, -1436);
      a.quadraticCurveTo(-578, -1436, -653, -1410);
      a.quadraticCurveTo(-750, -1377, -878, -1294);
      a.quadraticCurveTo(-1014, -1205, -1087, -1169);
      a.quadraticCurveTo(-1142, -1141, -1188, -1129);
      a.lineTo(-1195, -1127);
      a.quadraticCurveTo(-1384, -945, -1481, -700);
      a.quadraticCurveTo(-1678, -205, -1473, 277);
      a.quadraticCurveTo(-1521, 322, -1569, 348);
      a.quadraticCurveTo(-1611, 370, -1661, 383);
      a.lineTo(-1745, 466);
      a.lineTo(-1847, 564);
      a.quadraticCurveTo(-2008, 702, -2110, 702);
      a.quadraticCurveTo(-2111, 702, -2111, 702);
      a.lineTo(-2111, 702);
      a.quadraticCurveTo(-2018, 720, -1972, 803);
      a.quadraticCurveTo(-1935, 873, -1962, 1012);
      a.lineTo(-1964, 1023);
      a.lineTo(-1839, 1003);
      a.quadraticCurveTo(-1753, 1003, -1721, 1100);
      a.quadraticCurveTo(-1709, 1136, -1698, 1200);
      a.quadraticCurveTo(-1588, 1171, -1445, 1052);
      a.quadraticCurveTo(-1315, 943, -1245, 847);
      a.quadraticCurveTo(-1218, 904, -1144, 1132);
      a.quadraticCurveTo(-1102, 1238, -1054, 1316);
      a.quadraticCurveTo(-949, 1384, -836, 1437);
      a.quadraticCurveTo(-716, 1494, -588, 1533);
      a.quadraticCurveTo(-310, 1620, -17, 1628);
      a.quadraticCurveTo(12, 1629, 41, 1629);
      a.quadraticCurveTo(299,
        1629, 550, 1566);
      a.lineTo(561, 1563);
      a.quadraticCurveTo(702, 1521, 837, 1461);
      a.quadraticCurveTo(1086, 1133, 1238, 753);
      a.quadraticCurveTo(1389, 372, 1301, -51);
      a.quadraticCurveTo(1213, -476, 873, -608);
      a.quadraticCurveTo(873, -608, 873, -608);
      a.lineTo(873, -608);
      a.lineTo(566, -598);
      a.quadraticCurveTo(453, -589, 340, -589);
      a.quadraticCurveTo(43, -589, -245, -649);
      a.quadraticCurveTo(-664, -735, -809, -1138);
      a.quadraticCurveTo(-695, -1325, -506, -1436);
      a.quadraticCurveTo(-508, -1436, -511, -1436);
      a.closePath()
    }, function(a) {
      a.transform(0.48,
        0, 0, 0.48, 5460, 4712);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-1245, 847);
      a.quadraticCurveTo(-1315, 943, -1445, 1052);
      a.quadraticCurveTo(-1588, 1171, -1698, 1200);
      a.lineTo(-1687, 1276);
      a.quadraticCurveTo(-1643, 1232, -1552, 1204);
      a.lineTo(-1396, 1163);
      a.lineTo(-1343, 1144);
      a.lineTo(-1303, 1122);
      a.quadraticCurveTo(-1213, 1206, -1113, 1275);
      a.lineTo(-1054, 1316);
      a.quadraticCurveTo(-1102, 1238, -1144, 1132);
      a.quadraticCurveTo(-1218, 904, -1245, 847);
      a.closePath();
      a.moveTo(203, -1627);
      a.quadraticCurveTo(-169, -1627, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.quadraticCurveTo(-664, -735, -245, -649);
      a.quadraticCurveTo(44, -589, 340, -589);
      a.quadraticCurveTo(452, -589, 566, -598);
      a.lineTo(873, -608);
      a.quadraticCurveTo(1213, -476, 1301, -51);
      a.quadraticCurveTo(1389, 372, 1238, 753);
      a.quadraticCurveTo(1086, 1133, 837, 1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275, 1221, 1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632, 1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984,
        963, 2097, 875);
      a.lineTo(2096, 874);
      a.quadraticCurveTo(2028, 792, 1933, 741);
      a.quadraticCurveTo(2014, 696, 2103, 683);
      a.lineTo(2103, 672);
      a.quadraticCurveTo(1833, 633, 1624, 483);
      a.lineTo(1581, 451);
      a.lineTo(1585, 439);
      a.quadraticCurveTo(1461, 297, 1434, 244);
      a.lineTo(1432, 240);
      a.quadraticCurveTo(1522, 18, 1560, -281);
      a.quadraticCurveTo(1610, -669, 1341, -1139);
      a.lineTo(1328, -1132);
      a.lineTo(1288, -1126);
      a.quadraticCurveTo(1217, -1126, 1135, -1201);
      a.quadraticCurveTo(1086, -1246, 1043, -1254);
      a.lineTo(1043, -1254);
      a.quadraticCurveTo(1043, -1254, 1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(295, -1627, 203, -1627);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4712);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1585, 439);
      a.lineTo(1624, 483);
      a.moveTo(2096, 874);
      a.lineTo(2111, 876);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(1073, -1208, 1097, -1155);
      a.quadraticCurveTo(1156, -1025, 1034, -893);
      a.moveTo(902, -694);
      a.quadraticCurveTo(924, -747, 959, -798);
      a.moveTo(936, -144);
      a.quadraticCurveTo(910, -212, 893, -271);
      a.moveTo(861, -426);
      a.quadraticCurveTo(856, -473, 859, -512);
      a.quadraticCurveTo(861, -559, 873, -608);
      a.moveTo(-809, -1138);
      a.lineTo(-816, -1126);
      a.quadraticCurveTo(-833, -1073, -838, -1018);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(-88, -1673, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.moveTo(1851, 861);
      a.lineTo(1739, 839);
      a.moveTo(1655, 816);
      a.lineTo(1639, 811);
      a.lineTo(1596, 798);
      a.moveTo(2096, 874);
      a.lineTo(1948, 868);
      a.moveTo(1581, 451);
      a.lineTo(1585, 439);
      a.moveTo(1117, 367);
      a.quadraticCurveTo(1104, 260, 1067, 158);
      a.moveTo(1540, 828);
      a.lineTo(1545, 810);
      a.lineTo(1552, 783);
      a.lineTo(1574, 664);
      a.moveTo(1581, 451);
      a.lineTo(1581, 557);
      a.moveTo(1047, 885);
      a.quadraticCurveTo(1127, 668, 1124, 467);
      a.moveTo(561, 1563);
      a.lineTo(675, 1471);
      a.moveTo(1433, 1007);
      a.quadraticCurveTo(1485, 954, 1517, 889);
      a.moveTo(930, 1139);
      a.lineTo(1007, 984);
      a.moveTo(773, 1368);
      a.lineTo(858,
        1257);
      a.moveTo(1021, 51);
      a.lineTo(974, -51);
      a.moveTo(-811, -775);
      a.lineTo(-831, -855);
      a.moveTo(-730, -579);
      a.quadraticCurveTo(-741, -617, -760, -654);
      a.lineTo(-766, -666);
      a.moveTo(-792, -126);
      a.quadraticCurveTo(-769, -183, -752, -242);
      a.moveTo(-736, -314);
      a.quadraticCurveTo(-725, -372, -720, -431);
      a.moveTo(-926, 49);
      a.lineTo(-903, 76);
      a.lineTo(-839, -27);
      a.moveTo(-982, 129);
      a.lineTo(-962, 156);
      a.lineTo(-940, 126);
      a.lineTo(-903, 76);
      a.lineTo(-897, 85);
      a.lineTo(-854, 145);
      a.moveTo(-962, 156);
      a.lineTo(-951, 168);
      a.lineTo(-894,
        217);
      a.moveTo(-1062, 257);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1005, 215, -962, 156);
      a.moveTo(-974, 321);
      a.lineTo(-1022, 288);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1067, 349, -1083, 424);
      a.lineTo(-1077, 424);
      a.lineTo(-998, 425);
      a.moveTo(-1150, 465);
      a.lineTo(-1092, 471);
      a.lineTo(-1083, 424);
      a.lineTo(-1126, 417);
      a.moveTo(-1092, 471);
      a.lineTo(-982, 473);
      a.moveTo(-1385, 901);
      a.lineTo(-1419, 869);
      a.lineTo(-1445, 843);
      a.moveTo(-1517, 769);
      a.lineTo(-1559, 723);
      a.lineTo(-1581, 699);
      a.lineTo(-1592, 687);
      a.moveTo(-1059, 888);
      a.lineTo(-1087, 752);
      a.moveTo(-1092, 471);
      a.quadraticCurveTo(-1105, 553, -1100, 640);
      a.lineTo(-1093, 641);
      a.quadraticCurveTo(-1039, 646, -1014, 641);
      a.moveTo(-1098, 673);
      a.lineTo(-1100, 640);
      a.lineTo(-1150, 633);
      a.moveTo(-977, 1143);
      a.lineTo(-1024, 1011);
      a.moveTo(-836, 1437);
      a.lineTo(-931, 1253);
      a.moveTo(-1236, 1019);
      a.lineTo(-1326, 952);
      a.moveTo(-1962, 1012);
      a.lineTo(-1801, 916);
      a.lineTo(-1777, 900);
      a.moveTo(-1644, 623);
      a.lineTo(-1697, 548);
      a.moveTo(-1710, 852);
      a.lineTo(-1662, 813);
      a.lineTo(-1595, 756);
      a.moveTo(-1720, 511);
      a.lineTo(-1745, 466)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4712);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1333, -1153);
      a.lineTo(1341, -1139);
      a.quadraticCurveTo(1610, -669, 1560, -281);
      a.quadraticCurveTo(1522, 18, 1432, 240);
      a.moveTo(1624, 483);
      a.quadraticCurveTo(1833, 633, 2103, 672);
      a.lineTo(2103, 683);
      a.quadraticCurveTo(2014, 696, 1933, 741);
      a.quadraticCurveTo(2028, 792, 2096, 874);
      a.moveTo(837,
        1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275, 1221, 1473, 1038);
      a.lineTo(1433, 1007);
      a.lineTo(1354, 938);
      a.moveTo(1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632, 1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.moveTo(1432, 240);
      a.lineTo(1371, 372);
      a.moveTo(1581, 451);
      a.lineTo(1566, 438);
      a.moveTo(837, 1461);
      a.quadraticCurveTo(702, 1521, 561, 1563);
      a.lineTo(550, 1566);
      a.quadraticCurveTo(270, 1636, -17, 1628);
      a.quadraticCurveTo(-310, 1620, -588, 1533);
      a.quadraticCurveTo(-716, 1494, -836, 1437);
      a.quadraticCurveTo(-949, 1384, -1054, 1316);
      a.lineTo(-1113, 1275);
      a.quadraticCurveTo(-1213, 1206, -1303, 1122);
      a.lineTo(-1343, 1144);
      a.lineTo(-1396, 1163);
      a.lineTo(-1552, 1204);
      a.quadraticCurveTo(-1643, 1232, -1687, 1276);
      a.lineTo(-1698, 1200);
      a.quadraticCurveTo(-1709, 1136, -1721, 1100);
      a.quadraticCurveTo(-1753, 1003, -1839, 1003);
      a.lineTo(-1964, 1023);
      a.lineTo(-1962, 1012);
      a.quadraticCurveTo(-1935, 873, -1972, 803);
      a.quadraticCurveTo(-2018,
        720, -2111, 702);
      a.quadraticCurveTo(-2009, 703, -1847, 564);
      a.lineTo(-1745, 466);
      a.lineTo(-1661, 383);
      a.lineTo(-1630, 353);
      a.moveTo(1624, 483);
      a.lineTo(1581, 451);
      a.moveTo(-1473, 277);
      a.quadraticCurveTo(-1678, -205, -1481, -700);
      a.quadraticCurveTo(-1384, -945, -1195, -1127);
      a.moveTo(-1452, 325);
      a.lineTo(-1473, 277);
      a.moveTo(-1303, 1122);
      a.quadraticCurveTo(-1285, 1110, -1272, 1096);
      a.quadraticCurveTo(-1244, 1065, -1236, 1019);
      a.quadraticCurveTo(-1230, 986, -1235, 946)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4089);
      a.fillStyle =
        "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(-1533, -1810);
      a.lineTo(-1556, -1763);
      a.quadraticCurveTo(-1589, -1690, -1604, -1603);
      a.quadraticCurveTo(-1634, -1434, -1628, -1259);
      a.quadraticCurveTo(-1624, -1128, -1578, -1017);
      a.quadraticCurveTo(-1534, -1127, -1506, -1266);
      a.quadraticCurveTo(-1478, -1406, -1483, -1522);
      a.quadraticCurveTo(-1488, -1638, -1501, -1699);
      a.lineTo(-1533, -1810);
      a.closePath();
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1768, -1635, 1734, -1473);
      a.quadraticCurveTo(1699, -1312, 1677, -1133);
      a.quadraticCurveTo(1655, -955, 1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.quadraticCurveTo(1795, -843, 1815, -911);
      a.quadraticCurveTo(1843, -1010, 1858, -1122);
      a.quadraticCurveTo(1871, -1221, 1872, -1344);
      a.lineTo(1869, -1428);
      a.lineTo(1859, -1535);
      a.lineTo(1858, -1547);
      a.lineTo(1851, -1595);
      a.quadraticCurveTo(1846, -1642, 1823, -1690);
      a.lineTo(1821, -1692);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4089);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(257, -3296);
      a.quadraticCurveTo(234, -3208, 234, -3032);
      a.quadraticCurveTo(234, -2810, 289, -2652);
      a.quadraticCurveTo(314, -2580, 404, -2402);
      a.lineTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(535, -2385);
      a.quadraticCurveTo(904, -2083, 985, -1597);
      a.quadraticCurveTo(1061, -1141, 982, -686);
      a.quadraticCurveTo(907, -252, 649, 108);
      a.quadraticCurveTo(489, 332, 278, 503);
      a.lineTo(294, 494);
      a.quadraticCurveTo(441, 412, 517, 344);
      a.lineTo(607, 265);
      a.lineTo(685, 215);
      a.quadraticCurveTo(760, 167, 902, 100);
      a.lineTo(903, 99);
      a.quadraticCurveTo(1045, 31, 1189, -109);
      a.lineTo(1197, -117);
      a.lineTo(1261, -184);
      a.lineTo(1294, -218);
      a.lineTo(1358, -293);
      a.quadraticCurveTo(1432, -377, 1482, -474);
      a.quadraticCurveTo(1524, -553, 1548, -641);
      a.lineTo(1563, -680);
      a.quadraticCurveTo(1582, -721, 1627, -728);
      a.lineTo(1706, -722);
      a.lineTo(1712, -725);
      a.quadraticCurveTo(1735, -742, 1743, -770);
      a.lineTo(1754, -811);
      a.lineTo(1754, -811);
      a.quadraticCurveTo(1734, -796, 1711, -789);
      a.lineTo(1665, -781);
      a.quadraticCurveTo(1663, -781, 1662, -781);
      a.quadraticCurveTo(1620, -781, 1589, -807);
      a.quadraticCurveTo(1541, -849, 1540, -985);
      a.quadraticCurveTo(1543, -1069, 1560, -1193);
      a.quadraticCurveTo(1577, -1318, 1596, -1408);
      a.lineTo(1616, -1514);
      a.lineTo(1658, -1645);
      a.quadraticCurveTo(1691, -1743, 1747, -1743);
      a.quadraticCurveTo(1752, -1743, 1757, -1742);
      a.quadraticCurveTo(1794, -1729, 1821, -1692);
      a.lineTo(1823, -1690);
      a.quadraticCurveTo(1831, -1776, 1821, -1809);
      a.lineTo(1786, -1888);
      a.quadraticCurveTo(1761, -1934, 1704, -1955);
      a.lineTo(1679, -1963);
      a.lineTo(1618, -1967);
      a.quadraticCurveTo(1492, -1830, 1429, -1653);
      a.lineTo(1402, -1578);
      a.quadraticCurveTo(1357, -1711, 1366, -1853);
      a.quadraticCurveTo(1370, -1912, 1400, -1962);
      a.quadraticCurveTo(1309, -1970, 1252, -2008);
      a.lineTo(1243, -2015);
      a.lineTo(1101, -2129);
      a.lineTo(987, -2219);
      a.quadraticCurveTo(939, -2253, 873, -2287);
      a.lineTo(833, -2328);
      a.quadraticCurveTo(730, -2436, 657, -2562);
      a.lineTo(581, -2696);
      a.quadraticCurveTo(534, -2779, 488, -2893);
      a.quadraticCurveTo(442, -3007, 429, -3077);
      a.lineTo(408, -3192);
      a.lineTo(401, -3237);
      a.quadraticCurveTo(394, -3288, 390, -3338);
      a.lineTo(389, -3343);
      a.lineTo(384, -3402);
      a.lineTo(383, -3430);
      a.lineTo(381, -3453);
      a.lineTo(377, -3479);
      a.lineTo(373, -3506);
      a.lineTo(370, -3529);
      a.lineTo(365, -3555);
      a.lineTo(355, -3594);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4089);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1579, -1967);
      a.lineTo(1505, -1963);
      a.lineTo(1497, -1963);
      a.quadraticCurveTo(1467, -1961, 1439, -1961);
      a.quadraticCurveTo(1418, -1961, 1400, -1962);
      a.quadraticCurveTo(1370, -1912, 1366, -1853);
      a.quadraticCurveTo(1357, -1711, 1402, -1578);
      a.lineTo(1429, -1653);
      a.quadraticCurveTo(1492, -1830, 1618, -1967);
      a.closePath();
      a.moveTo(278, -3664);
      a.lineTo(203, -3566);
      a.lineTo(149, -3489);
      a.lineTo(113, -3449);
      a.lineTo(68, -3405);
      a.lineTo(-1, -3314);
      a.lineTo(-2, -3313);
      a.lineTo(-62, -3219);
      a.lineTo(-111, -3132);
      a.lineTo(-158, -3050);
      a.lineTo(-216, -2952);
      a.lineTo(-249, -2898);
      a.lineTo(-284, -2842);
      a.lineTo(-322, -2782);
      a.lineTo(-354, -2731);
      a.lineTo(-388, -2681);
      a.lineTo(-422, -2631);
      a.lineTo(-481, -2551);
      a.lineTo(-535, -2479);
      a.lineTo(-601, -2397);
      a.lineTo(-678, -2306);
      a.lineTo(-721, -2256);
      a.quadraticCurveTo(-894, -2191, -1046, -2105);
      a.quadraticCurveTo(-1199, -2020, -1302, -1940);
      a.lineTo(-1349, -1966);
      a.quadraticCurveTo(-1397, -1994, -1433, -1994);
      a.quadraticCurveTo(-1474, -1994, -1500, -1957);
      a.quadraticCurveTo(-1498, -1920, -1482, -1886);
      a.lineTo(-1457, -1830);
      a.lineTo(-1454, -1823);
      a.lineTo(-1445, -1802);
      a.lineTo(-1440, -1790);
      a.quadraticCurveTo(-1418, -1735, -1406, -1676);
      a.quadraticCurveTo(-1331, -1314, -1496, -1018);
      a.lineTo(-1526, -969);
      a.lineTo(-1542, -945);
      a.lineTo(-1552, -931);
      a.quadraticCurveTo(-1553, -870, -1511, -841);
      a.quadraticCurveTo(-1500, -833, -1485, -833);
      a.quadraticCurveTo(-1465, -833, -1437, -848);
      a.quadraticCurveTo(-1339, -789, -1327, -697);
      a.quadraticCurveTo(-1315, -606, -1307, -485);
      a.quadraticCurveTo(-1299, -364, -1198, -222);
      a.quadraticCurveTo(-1097, -80, -1037, -7);
      a.quadraticCurveTo(-977, 64, -857, 170);
      a.lineTo(-600, 393);
      a.quadraticCurveTo(-533, 451, -459, 490);
      a.quadraticCurveTo(-383, 529, -301, 548);
      a.quadraticCurveTo(-202, 571, -101, 571);
      a.quadraticCurveTo(-65, 571, -29, 568);
      a.quadraticCurveTo(-13, 569, 3, 569);
      a.quadraticCurveTo(151, 569, 278, 503);
      a.quadraticCurveTo(489,
        332, 649, 108);
      a.quadraticCurveTo(907, -252, 982, -686);
      a.quadraticCurveTo(1061, -1141, 985, -1597);
      a.quadraticCurveTo(904, -2083, 535, -2385);
      a.lineTo(531, -2386);
      a.lineTo(404, -2402);
      a.quadraticCurveTo(314, -2580, 289, -2652);
      a.quadraticCurveTo(234, -2810, 234, -3032);
      a.quadraticCurveTo(234, -3208, 257, -3296);
      a.lineTo(355, -3594);
      a.lineTo(351, -3608);
      a.quadraticCurveTo(341, -3646, 278, -3664);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4089);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(-1482, -1886);
      a.quadraticCurveTo(-1511, -1851, -1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.lineTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.closePath();
      a.moveTo(1747, -1743);
      a.quadraticCurveTo(1691, -1743, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318, 1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1620, -781, 1662, -781);
      a.quadraticCurveTo(1664, -781, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1752, -1743, 1747, -1743);
      a.closePath()
    }, function(a) {
      a.transform(0.48,
        0, 0, 0.48, 5486, 4089);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(365, -3555);
      a.lineTo(370, -3529);
      a.lineTo(373, -3506);
      a.lineTo(377, -3479);
      a.lineTo(381, -3453);
      a.lineTo(383, -3430);
      a.lineTo(384, -3402);
      a.lineTo(389, -3343);
      a.lineTo(390, -3338);
      a.quadraticCurveTo(394, -3288, 401, -3237);
      a.lineTo(408, -3192);
      a.lineTo(429, -3077);
      a.quadraticCurveTo(442, -3007, 488, -2893);
      a.quadraticCurveTo(534, -2779, 581, -2696);
      a.lineTo(657, -2562);
      a.quadraticCurveTo(730, -2436, 833, -2328);
      a.lineTo(873, -2287);
      a.quadraticCurveTo(939, -2253, 987, -2219);
      a.lineTo(1101, -2129);
      a.lineTo(1243, -2015);
      a.lineTo(1252, -2008);
      a.quadraticCurveTo(1309, -1970, 1400, -1962);
      a.quadraticCurveTo(1444, -1959, 1497, -1963);
      a.lineTo(1505, -1963);
      a.lineTo(1579, -1967);
      a.lineTo(1618, -1967);
      a.lineTo(1679, -1963);
      a.lineTo(1704, -1955);
      a.quadraticCurveTo(1761, -1934, 1786, -1888);
      a.lineTo(1821, -1809);
      a.quadraticCurveTo(1831, -1776, 1823, -1690);
      a.quadraticCurveTo(1846, -1642, 1851, -1595);
      a.lineTo(1858, -1547);
      a.lineTo(1859, -1535);
      a.lineTo(1869, -1428);
      a.lineTo(1872, -1344);
      a.quadraticCurveTo(1871, -1221, 1858, -1122);
      a.quadraticCurveTo(1843, -1010, 1815, -911);
      a.quadraticCurveTo(1795, -843, 1754, -811);
      a.lineTo(1743, -770);
      a.quadraticCurveTo(1735, -742, 1712, -725);
      a.lineTo(1706, -722);
      a.lineTo(1627, -728);
      a.quadraticCurveTo(1582, -721, 1563, -680);
      a.lineTo(1548, -641);
      a.quadraticCurveTo(1524, -553, 1482, -474);
      a.quadraticCurveTo(1432, -377, 1358, -293);
      a.lineTo(1294, -218);
      a.lineTo(1261, -184);
      a.lineTo(1197, -117);
      a.lineTo(1189, -109);
      a.quadraticCurveTo(1045, 31, 903, 99);
      a.moveTo(902, 100);
      a.quadraticCurveTo(760, 167, 685, 215);
      a.lineTo(607, 265);
      a.lineTo(517, 344);
      a.quadraticCurveTo(441, 412, 294, 494);
      a.lineTo(278, 503);
      a.quadraticCurveTo(137, 576, -29, 568);
      a.quadraticCurveTo(-167, 579, -301, 548);
      a.quadraticCurveTo(-383, 529, -459, 490);
      a.quadraticCurveTo(-533, 451, -600, 393);
      a.lineTo(-857, 170);
      a.quadraticCurveTo(-977, 64, -1037, -7);
      a.quadraticCurveTo(-1097, -80, -1198, -222);
      a.quadraticCurveTo(-1299, -364, -1307, -485);
      a.quadraticCurveTo(-1315, -606, -1327, -697);
      a.quadraticCurveTo(-1339, -789, -1437, -848);
      a.quadraticCurveTo(-1485, -823, -1511, -841);
      a.quadraticCurveTo(-1553, -870, -1552, -931);
      a.lineTo(-1542, -945);
      a.lineTo(-1578, -1017);
      a.quadraticCurveTo(-1624, -1128, -1628, -1259);
      a.quadraticCurveTo(-1634, -1434, -1604, -1603);
      a.quadraticCurveTo(-1589, -1690, -1556, -1763);
      a.lineTo(-1533, -1810);
      a.quadraticCurveTo(-1511, -1851, -1482, -1886);
      a.quadraticCurveTo(-1498, -1920, -1500, -1957);
      a.quadraticCurveTo(-1452, -2026, -1349, -1966);
      a.lineTo(-1302, -1940);
      a.quadraticCurveTo(-1199, -2020, -1046, -2105);
      a.quadraticCurveTo(-894, -2191, -721, -2256);
      a.lineTo(-678, -2306);
      a.lineTo(-601, -2397);
      a.lineTo(-535, -2479);
      a.lineTo(-481, -2551);
      a.lineTo(-422, -2631);
      a.lineTo(-388, -2681);
      a.lineTo(-354, -2731);
      a.lineTo(-322, -2782);
      a.lineTo(-284, -2842);
      a.lineTo(-249, -2898);
      a.lineTo(-216, -2952);
      a.lineTo(-158, -3050);
      a.lineTo(-111, -3132);
      a.lineTo(-62, -3219);
      a.lineTo(-2, -3313);
      a.lineTo(-1, -3314);
      a.lineTo(68, -3405);
      a.lineTo(113, -3449);
      a.lineTo(149, -3489);
      a.lineTo(203, -3566);
      a.lineTo(278, -3664);
      a.quadraticCurveTo(341, -3646, 351, -3608);
      a.lineTo(355, -3594);
      a.moveTo(404, -2402);
      a.lineTo(531, -2386);
      a.moveTo(404, -2402);
      a.lineTo(303, -2408);
      a.moveTo(535, -2385);
      a.lineTo(604, -2373);
      a.lineTo(705, -2350);
      a.quadraticCurveTo(788, -2328, 843, -2301);
      a.lineTo(873, -2287);
      a.moveTo(531, -2386);
      a.lineTo(535, -2385);
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1694, -1751, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318,
        1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1621, -780, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.closePath();
      a.moveTo(1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.moveTo(-420, -2347);
      a.quadraticCurveTo(-568, -2313, -721, -2256);
      a.moveTo(-420, -2347);
      a.lineTo(-382, -2355);
      a.quadraticCurveTo(-215, -2390, -44, -2398);
      a.moveTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.moveTo(-1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.moveTo(-1302, -1940);
      a.quadraticCurveTo(-1237, -1897, -1172, -1831);
      a.moveTo(-1373, -895);
      a.quadraticCurveTo(-1409, -864, -1437, -848)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4089);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(903, 99);
      a.lineTo(902, 100);
      a.moveTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(488, -2488);
      a.moveTo(390, -3338);
      a.quadraticCurveTo(368, -3290, 354, -3242);
      a.moveTo(33, -3088);
      a.lineTo(33, -3128);
      a.lineTo(30, -3177);
      a.moveTo(335, -3159);
      a.quadraticCurveTo(327, -3115, 326, -3071);
      a.moveTo(424, -2649);
      a.lineTo(452, -2577);
      a.moveTo(363, -2815);
      a.lineTo(370, -2795);
      a.lineTo(393, -2732);
      a.moveTo(705, -2350);
      a.lineTo(790, -2265);
      a.moveTo(856, -2190);
      a.lineTo(898, -2140);
      a.moveTo(328, -2981);
      a.lineTo(341, -2898);
      a.moveTo(11, -2889);
      a.lineTo(29, -3013);
      a.moveTo(1164, -1579);
      a.lineTo(1204, -1591);
      a.lineTo(1208, -1591);
      a.quadraticCurveTo(1158, -1743, 1076, -1882);
      a.lineTo(1068, -1895);
      a.moveTo(1310, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1263, -1363);
      a.lineTo(1280, -1237);
      a.lineTo(1307, -1244);
      a.lineTo(1359, -1258);
      a.moveTo(1211, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1239, -1483);
      a.lineTo(1218, -1481);
      a.lineTo(1179, -1475);
      a.moveTo(1347, -1087);
      a.lineTo(1290, -1083);
      a.lineTo(1291, -998);
      a.lineTo(1324, -998);
      a.moveTo(1239, -998);
      a.lineTo(1291, -998);
      a.lineTo(1289, -938);
      a.lineTo(1343, -941);
      a.moveTo(1234, -1083);
      a.lineTo(1276, -1083);
      a.lineTo(1290, -1083);
      a.lineTo(1287, -1146);
      a.lineTo(1280, -1237);
      a.lineTo(1229, -1220);
      a.moveTo(1291, -1594);
      a.lineTo(1208, -1591);
      a.lineTo(1239, -1483);
      a.lineTo(1315, -1485);
      a.moveTo(1234, -938);
      a.lineTo(1246, -938);
      a.lineTo(1289, -938);
      a.lineTo(1284, -855);
      a.moveTo(1334, -683);
      a.lineTo(1264, -689);
      a.lineTo(1253, -630);
      a.moveTo(1206, -703);
      a.lineTo(1249, -693);
      a.lineTo(1264, -689);
      a.lineTo(1275, -761);
      a.moveTo(1281, -476);
      a.lineTo(1214, -476);
      a.lineTo(1204, -445);
      a.moveTo(1159, -490);
      a.lineTo(1191, -479);
      a.lineTo(1214, -476);
      a.lineTo(1233, -543);
      a.moveTo(1161, -336);
      a.lineTo(1147, -306);
      a.quadraticCurveTo(1045, -100, 903, 99);
      a.moveTo(958, -2062);
      a.lineTo(1015, -1979);
      a.moveTo(-55, -2701);
      a.lineTo(-33, -2747);
      a.lineTo(-15, -2791);
      a.moveTo(-160, -2552);
      a.quadraticCurveTo(-124, -2592, -95, -2635);
      a.moveTo(-801, -2035);
      a.lineTo(-771, -2068);
      a.lineTo(-710, -2127);
      a.moveTo(-540, -2261);
      a.lineTo(-420, -2347);
      a.moveTo(-653, -2174);
      a.lineTo(-600, -2217);
      a.moveTo(-369, -2375);
      a.lineTo(-316, -2412);
      a.moveTo(-273, -2445);
      a.lineTo(-208, -2502);
      a.moveTo(-1250, -769);
      a.quadraticCurveTo(-1301, -970, -1270, -1196);
      a.quadraticCurveTo(-1251, -1332, -1185, -1487);
      a.lineTo(-1152, -1557);
      a.moveTo(-1082, -1679);
      a.lineTo(-997, -1800);
      a.lineTo(-857, -1972);
      a.moveTo(-1188, -588);
      a.lineTo(-1182, -573);
      a.quadraticCurveTo(-1161, -588, -1140, -590);
      a.moveTo(-1045, -462);
      a.quadraticCurveTo(-1079, -455, -1116, -429);
      a.lineTo(-1117, -428);
      a.lineTo(-1094, -380);
      a.lineTo(-1091, -382);
      a.lineTo(-1031, -415);
      a.moveTo(-1158, -391);
      a.quadraticCurveTo(-1148, -408, -1117, -428);
      a.lineTo(-1139, -474);
      a.lineTo(-1143, -472);
      a.lineTo(-1182, -443);
      a.moveTo(-1067, -328);
      a.lineTo(-1094, -380);
      a.quadraticCurveTo(-1115, -368, -1122, -360);
      a.moveTo(-1182, -573);
      a.lineTo(-1139, -474);
      a.quadraticCurveTo(-1103, -498, -1073, -508);
      a.moveTo(-1182, -573);
      a.lineTo(-1218, -540);
      a.moveTo(-684, 238);
      a.lineTo(-790, 107);
      a.moveTo(-459, 490);
      a.lineTo(-627, 305);
      a.moveTo(21, -3237);
      a.lineTo(-1, -3314);
      a.moveTo(-849, 29);
      a.lineTo(-933, -93)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4089);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 60;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1821, -1692);
      a.lineTo(1823, -1690)
    }]
  }
}

function make_baby_3(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
        a.transform(-0.49, 0, 0, 0.48, 6058, 4552);
        a.fillStyle = b;
        a.beginPath();
        a.moveTo(-5214, -4232);
        a.quadraticCurveTo(-5209, -4199, -5211, -4160);
        a.quadraticCurveTo(-5237, -3900, -5297, -3724);
        a.lineTo(-5420, -3559);
        a.lineTo(-5404, -3543);
        a.quadraticCurveTo(-5355, -3494, -5330, -3440);
        a.quadraticCurveTo(-5310, -3395, -5303, -3354);
        a.lineTo(-5216, -3337);
        a.lineTo(-5203, -3371);
        a.quadraticCurveTo(-5164, -3500, -5176, -3650);
        a.quadraticCurveTo(-5152, -3725, -5152, -3810);
        a.quadraticCurveTo(-5131, -4024, -5214, -4232);
        a.closePath();
        a.moveTo(-5593, -2835);
        a.quadraticCurveTo(-5377, -1175, -2413, 522);
        a.quadraticCurveTo(-2174, 474, -1890, 474);
        a.quadraticCurveTo(-1545, 474, -1135, 545);
        a.lineTo(-43, 1096);
        a.quadraticCurveTo(645, -10, 84, -1326);
        a.lineTo(84, -1326);
        a.quadraticCurveTo(-94, -1187, -340, -1115);
        a.quadraticCurveTo(-319, -791, -452, -502);
        a.lineTo(-479, -450);
        a.quadraticCurveTo(-618, -364, -768, -364);
        a.quadraticCurveTo(-934, -364, -1113, -469);
        a.quadraticCurveTo(-1256, -553, -1407, -623);
        a.quadraticCurveTo(-1728, -771, -2067, -859);
        a.lineTo(-2067, -859);
        a.lineTo(-1972, -742);
        a.quadraticCurveTo(-1622, -337, -1284, 71);
        a.quadraticCurveTo(-1272, 85, -1265, 104);
        a.quadraticCurveTo(-1501, 140, -1733, 140);
        a.quadraticCurveTo(-2210, 140, -2673, -11);
        a.quadraticCurveTo(-3149, -171, -3522, -493);
        a.quadraticCurveTo(-3768, -706, -4024, -914);
        a.quadraticCurveTo(-4464, -1273, -4882, -1656);
        a.lineTo(-4994, -1766);
        a.quadraticCurveTo(-5427, -2172, -5558, -2747);
        a.quadraticCurveTo(-5569, -2793, -5593, -2835);
        a.closePath()
      },
      function(a) {
        a.transform(-0.49, 0, 0, 0.48, 6058, 4552);
        a.fillStyle = c;
        a.beginPath();
        a.moveTo(-5214, -4232);
        a.quadraticCurveTo(-5131, -4024, -5152, -3810);
        a.quadraticCurveTo(-5152, -3725, -5176, -3650);
        a.quadraticCurveTo(-5164, -3500, -5203, -3371);
        a.lineTo(-5216, -3337);
        a.lineTo(-5303, -3354);
        a.quadraticCurveTo(-5310, -3395, -5330, -3440);
        a.quadraticCurveTo(-5355, -3494, -5404, -3543);
        a.lineTo(-5420, -3559);
        a.lineTo(-5297, -3724);
        a.quadraticCurveTo(-5237, -3900, -5211, -4160);
        a.quadraticCurveTo(-5209, -4199, -5214, -4232);
        a.closePath();
        a.moveTo(-5164, -4429);
        a.quadraticCurveTo(-5698, -3635, -5593, -2835);
        a.quadraticCurveTo(-5569, -2793, -5558, -2747);
        a.quadraticCurveTo(-5427, -2172, -4994, -1766);
        a.lineTo(-4882, -1656);
        a.quadraticCurveTo(-4464, -1273, -4024, -914);
        a.quadraticCurveTo(-3768, -706, -3522, -493);
        a.quadraticCurveTo(-3149, -171, -2673, -11);
        a.quadraticCurveTo(-2210, 140, -1733, 140);
        a.quadraticCurveTo(-1501, 140, -1265, 104);
        a.quadraticCurveTo(-1272, 85, -1284, 71);
        a.quadraticCurveTo(-1622, -337, -1972, -742);
        a.lineTo(-2067, -859);
        a.lineTo(-2067, -859);
        a.quadraticCurveTo(-1728, -771, -1407, -623);
        a.quadraticCurveTo(-1256, -553, -1113, -469);
        a.quadraticCurveTo(-934, -364, -768, -364);
        a.quadraticCurveTo(-618, -364, -479, -450);
        a.lineTo(-452, -502);
        a.quadraticCurveTo(-319, -791, -340, -1115);
        a.lineTo(-340, -1115);
        a.quadraticCurveTo(-605, -1037, -948, -1037);
        a.quadraticCurveTo(-1130, -1037, -1333, -1059);
        a.quadraticCurveTo(-2974, -1648, -4505, -2859);
        a.quadraticCurveTo(-5125, -3434, -5164, -4429);
        a.closePath()
      },
      function(a) {
        a.transform(-0.49, 0, 0, 0.48, 6058, 4552);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 40;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(-5214, -4232);
        a.quadraticCurveTo(-5131, -4024, -5152, -3810);
        a.quadraticCurveTo(-5152, -3725, -5176, -3650);
        a.quadraticCurveTo(-5164, -3500, -5203, -3371);
        a.lineTo(-5216, -3337);
        a.lineTo(-5303, -3354);
        a.quadraticCurveTo(-5310, -3395, -5330, -3440);
        a.quadraticCurveTo(-5355, -3494, -5404, -3543);
        a.lineTo(-5420, -3559);
        a.lineTo(-5297, -3724);
        a.quadraticCurveTo(-5237, -3900, -5211, -4160);
        a.quadraticCurveTo(-5209, -4199, -5214, -4232);
        a.closePath();
        a.moveTo(-5176, -3650);
        a.lineTo(-5297, -3724);
        a.moveTo(-5593, -2835);
        a.quadraticCurveTo(-5377, -1175, -2413, 522);
        a.quadraticCurveTo(-1883, 415, -1135, 545);
        a.lineTo(-43, 1096);
        a.quadraticCurveTo(645, -10, 84, -1326);
        a.quadraticCurveTo(-94, -1187, -340, -1115);
        a.quadraticCurveTo(-746, -996, -1333, -1059);
        a.quadraticCurveTo(-2974, -1648, -4505, -2859);
        a.quadraticCurveTo(-5125, -3434, -5164, -4429);
        a.quadraticCurveTo(-5698, -3635, -5593, -2835);
        a.closePath()
      },
      function(a) {
        a.transform(-0.49,
          0, 0, 0.48, 6058, 4552);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 28.57;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(-4567, -2726);
        a.lineTo(-4638, -2799);
        a.quadraticCurveTo(-4777, -2921, -4870, -3059);
        a.moveTo(-4194, -2352);
        a.quadraticCurveTo(-4313, -2482, -4472, -2632);
        a.moveTo(-3818, -2073);
        a.quadraticCurveTo(-3841, -2088, -3874, -2098);
        a.quadraticCurveTo(-3998, -2176, -4110, -2266);
        a.moveTo(-5466, -3365);
        a.quadraticCurveTo(-5492, -3286, -5498, -3187);
        a.moveTo(-5279, -2270);
        a.quadraticCurveTo(-5237, -2165, -5188, -2073);
        a.moveTo(-5419, -2672);
        a.quadraticCurveTo(-5389, -2552, -5345, -2440);
        a.moveTo(-479, -450);
        a.lineTo(-404, -388);
        a.moveTo(-5491, -3014);
        a.quadraticCurveTo(-5477, -2904, -5452, -2788);
        a.moveTo(-5095, -1916);
        a.lineTo(-4994, -1766);
        a.moveTo(-4674, -1325);
        a.lineTo(-4509, -1156);
        a.moveTo(-3862, -579);
        a.lineTo(-3765, -488);
        a.moveTo(-4116, -800);
        a.lineTo(-4012, -712);
        a.lineTo(-3937, -645);
        a.moveTo(-4370, -1025);
        a.lineTo(-4222, -893);
        a.moveTo(-4897, -1619);
        a.lineTo(-4791, -1465);
        a.moveTo(-3405, -1861);
        a.quadraticCurveTo(-3546, -1955, -3710, -2022);
        a.moveTo(-1942, -1120);
        a.lineTo(-2146, -1210);
        a.moveTo(-1704, -1024);
        a.quadraticCurveTo(-1770, -1055, -1836, -1075);
        a.moveTo(-2583, -1424);
        a.lineTo(-2727, -1493);
        a.quadraticCurveTo(-2753, -1514, -2799, -1529);
        a.moveTo(-2928, -1595);
        a.lineTo(-2972, -1620);
        a.quadraticCurveTo(-3035, -1660, -3168, -1732);
        a.moveTo(-2251, -1261);
        a.lineTo(-2446, -1356);
        a.lineTo(-2478, -1371);
        a.moveTo(-2897, -1277);
        a.lineTo(-2665, -1159);
        a.lineTo(-2632, -1142);
        a.quadraticCurveTo(-2618, -1175, -2553, -1209);
        a.moveTo(-2511, -1004);
        a.quadraticCurveTo(-2499, -1030, -2474, -1051);
        a.lineTo(-2470, -1054);
        a.lineTo(-2632, -1142);
        a.lineTo(-2634, -1136);
        a.quadraticCurveTo(-2640, -1117, -2637, -1082);
        a.moveTo(-2285, -946);
        a.quadraticCurveTo(-2123, -847, -1972, -742);
        a.moveTo(-479, -450);
        a.lineTo(-606, -558);
        a.moveTo(-1972, -742);
        a.lineTo(-1971, -741);
        a.lineTo(-1917, -703);
        a.moveTo(-2406, -1085);
        a.quadraticCurveTo(-2442, -1076, -2470, -1054);
        a.lineTo(-2416, -1023);
        a.moveTo(-922, -796);
        a.quadraticCurveTo(-999, -853, -1078, -894);
        a.moveTo(-1646, -421);
        a.quadraticCurveTo(-1642, -435, -1607, -469);
        a.lineTo(-1602, -473);
        a.lineTo(-1787, -610);
        a.moveTo(-1540, -515);
        a.quadraticCurveTo(-1566, -506, -1602, -473);
        a.lineTo(-1364, -293);
        a.moveTo(-1091, 5);
        a.lineTo(-1084, -12);
        a.lineTo(-1061, -42);
        a.lineTo(-1159, -126);
        a.lineTo(-1169, -113);
        a.lineTo(-1182, -95);
        a.lineTo(-1196, -75);
        a.moveTo(-1055, 43);
        a.quadraticCurveTo(-1048, 25, -1023, 2);
        a.lineTo(-1017, -2);
        a.lineTo(-1061, -42);
        a.lineTo(-1056, -48);
        a.quadraticCurveTo(-1020, -86, -992, -91);
        a.moveTo(-1236, -190);
        a.lineTo(-1159, -126);
        a.quadraticCurveTo(-1137, -157, -1126, -177);
        a.moveTo(-943, -48);
        a.quadraticCurveTo(-986, -30, -1017, -2);
        a.lineTo(-877, 125);
        a.quadraticCurveTo(-856, 106, -824, 93);
        a.moveTo(103, -991);
        a.lineTo(-68, -933);
        a.lineTo(-112, -919);
        a.moveTo(-215, -885);
        a.lineTo(-315, -855);
        a.moveTo(-443, -816);
        a.lineTo(-517, -800);
        a.moveTo(-657, -777);
        a.lineTo(-775, -758);
        a.moveTo(-701, -633);
        a.lineTo(-803, -708);
        a.moveTo(-112, -149);
        a.quadraticCurveTo(-189, -220, -281, -291);
        a.moveTo(-3431, -1527);
        a.lineTo(-3032, -1342);
        a.moveTo(-803, 194);
        a.lineTo(-877, 125);
        a.quadraticCurveTo(-900, 144, -908, 169)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 4959, 4552);
        a.fillStyle = b;
        a.beginPath();
        a.moveTo(-5214, -4232);
        a.quadraticCurveTo(-5209, -4199, -5211, -4160);
        a.quadraticCurveTo(-5237, -3900, -5297, -3724);
        a.lineTo(-5420, -3559);
        a.lineTo(-5404, -3543);
        a.quadraticCurveTo(-5355, -3494, -5330, -3440);
        a.quadraticCurveTo(-5310, -3395, -5303, -3354);
        a.lineTo(-5216, -3337);
        a.lineTo(-5203, -3371);
        a.quadraticCurveTo(-5164, -3500, -5176, -3650);
        a.quadraticCurveTo(-5152, -3725, -5152, -3810);
        a.quadraticCurveTo(-5131, -4024, -5214, -4232);
        a.closePath();
        a.moveTo(-5593, -2835);
        a.quadraticCurveTo(-5377, -1175, -2413, 522);
        a.quadraticCurveTo(-2174, 474, -1890, 474);
        a.quadraticCurveTo(-1545, 474, -1135, 545);
        a.lineTo(-43, 1096);
        a.quadraticCurveTo(645, -10, 84, -1326);
        a.lineTo(84, -1326);
        a.quadraticCurveTo(-94, -1187, -340, -1115);
        a.quadraticCurveTo(-319, -791, -452, -502);
        a.lineTo(-479, -450);
        a.quadraticCurveTo(-618, -364, -768, -364);
        a.quadraticCurveTo(-934, -364, -1113, -469);
        a.quadraticCurveTo(-1256, -553, -1407, -623);
        a.quadraticCurveTo(-1728, -771, -2067, -859);
        a.lineTo(-2067, -859);
        a.lineTo(-1972, -742);
        a.quadraticCurveTo(-1622, -337, -1284, 71);
        a.quadraticCurveTo(-1272, 85, -1265, 104);
        a.quadraticCurveTo(-1501, 140, -1733, 140);
        a.quadraticCurveTo(-2210, 140, -2673, -11);
        a.quadraticCurveTo(-3149, -171, -3522, -493);
        a.quadraticCurveTo(-3768, -706, -4024, -914);
        a.quadraticCurveTo(-4464, -1273, -4882, -1656);
        a.lineTo(-4994, -1766);
        a.quadraticCurveTo(-5427, -2172, -5558, -2747);
        a.quadraticCurveTo(-5569, -2793, -5593, -2835);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 4959, 4552);
        a.fillStyle = c;
        a.beginPath();
        a.moveTo(-5214, -4232);
        a.quadraticCurveTo(-5131, -4024, -5152, -3810);
        a.quadraticCurveTo(-5152, -3725, -5176, -3650);
        a.quadraticCurveTo(-5164, -3500, -5203, -3371);
        a.lineTo(-5216, -3337);
        a.lineTo(-5303, -3354);
        a.quadraticCurveTo(-5310, -3395, -5330, -3440);
        a.quadraticCurveTo(-5355, -3494, -5404, -3543);
        a.lineTo(-5420, -3559);
        a.lineTo(-5297, -3724);
        a.quadraticCurveTo(-5237, -3900, -5211, -4160);
        a.quadraticCurveTo(-5209, -4199, -5214, -4232);
        a.closePath();
        a.moveTo(-5164, -4429);
        a.quadraticCurveTo(-5698, -3635, -5593, -2835);
        a.quadraticCurveTo(-5569, -2793, -5558, -2747);
        a.quadraticCurveTo(-5427, -2172, -4994, -1766);
        a.lineTo(-4882, -1656);
        a.quadraticCurveTo(-4464, -1273, -4024, -914);
        a.quadraticCurveTo(-3768, -706, -3522, -493);
        a.quadraticCurveTo(-3149, -171, -2673, -11);
        a.quadraticCurveTo(-2210, 140, -1733, 140);
        a.quadraticCurveTo(-1501, 140, -1265, 104);
        a.quadraticCurveTo(-1272, 85, -1284, 71);
        a.quadraticCurveTo(-1622, -337, -1972, -742);
        a.lineTo(-2067, -859);
        a.lineTo(-2067, -859);
        a.quadraticCurveTo(-1728, -771, -1407, -623);
        a.quadraticCurveTo(-1256, -553, -1113, -469);
        a.quadraticCurveTo(-934, -364, -768, -364);
        a.quadraticCurveTo(-618, -364, -479, -450);
        a.lineTo(-452, -502);
        a.quadraticCurveTo(-319, -791, -340, -1115);
        a.lineTo(-340, -1115);
        a.quadraticCurveTo(-605, -1037, -948, -1037);
        a.quadraticCurveTo(-1130, -1037, -1333, -1059);
        a.quadraticCurveTo(-2974, -1648, -4505, -2859);
        a.quadraticCurveTo(-5125, -3434, -5164, -4429);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 4959, 4552);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 40;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(-5214, -4232);
        a.quadraticCurveTo(-5131, -4024, -5152, -3810);
        a.quadraticCurveTo(-5152, -3725, -5176, -3650);
        a.quadraticCurveTo(-5164, -3500, -5203, -3371);
        a.lineTo(-5216, -3337);
        a.lineTo(-5303, -3354);
        a.quadraticCurveTo(-5310, -3395, -5330, -3440);
        a.quadraticCurveTo(-5355, -3494, -5404, -3543);
        a.lineTo(-5420, -3559);
        a.lineTo(-5297, -3724);
        a.quadraticCurveTo(-5237, -3900, -5211, -4160);
        a.quadraticCurveTo(-5209, -4199, -5214, -4232);
        a.closePath();
        a.moveTo(-5176, -3650);
        a.lineTo(-5297, -3724);
        a.moveTo(-5593, -2835);
        a.quadraticCurveTo(-5377, -1175, -2413, 522);
        a.quadraticCurveTo(-1883, 415, -1135, 545);
        a.lineTo(-43, 1096);
        a.quadraticCurveTo(645, -10, 84, -1326);
        a.quadraticCurveTo(-94, -1187, -340, -1115);
        a.quadraticCurveTo(-746, -996, -1333, -1059);
        a.quadraticCurveTo(-2974, -1648, -4505, -2859);
        a.quadraticCurveTo(-5125, -3434, -5164, -4429);
        a.quadraticCurveTo(-5698, -3635, -5593, -2835);
        a.closePath()
      },
      function(a) {
        a.transform(0.48,
          0, 0, 0.48, 4959, 4552);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 28.57;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(-4567, -2726);
        a.lineTo(-4638, -2799);
        a.quadraticCurveTo(-4777, -2921, -4870, -3059);
        a.moveTo(-4194, -2352);
        a.quadraticCurveTo(-4313, -2482, -4472, -2632);
        a.moveTo(-3818, -2073);
        a.quadraticCurveTo(-3841, -2088, -3874, -2098);
        a.quadraticCurveTo(-3998, -2176, -4110, -2266);
        a.moveTo(-5466, -3365);
        a.quadraticCurveTo(-5492, -3286, -5498, -3187);
        a.moveTo(-5279, -2270);
        a.quadraticCurveTo(-5237, -2165, -5188, -2073);
        a.moveTo(-5419, -2672);
        a.quadraticCurveTo(-5389, -2552, -5345, -2440);
        a.moveTo(-479, -450);
        a.lineTo(-404, -388);
        a.moveTo(-5491, -3014);
        a.quadraticCurveTo(-5477, -2904, -5452, -2788);
        a.moveTo(-5095, -1916);
        a.lineTo(-4994, -1766);
        a.moveTo(-4674, -1325);
        a.lineTo(-4509, -1156);
        a.moveTo(-3862, -579);
        a.lineTo(-3765, -488);
        a.moveTo(-4116, -800);
        a.lineTo(-4012, -712);
        a.lineTo(-3937, -645);
        a.moveTo(-4370, -1025);
        a.lineTo(-4222, -893);
        a.moveTo(-4897, -1619);
        a.lineTo(-4791, -1465);
        a.moveTo(-3405, -1861);
        a.quadraticCurveTo(-3546, -1955, -3710, -2022);
        a.moveTo(-1942, -1120);
        a.lineTo(-2146, -1210);
        a.moveTo(-1704, -1024);
        a.quadraticCurveTo(-1770, -1055, -1836, -1075);
        a.moveTo(-2583, -1424);
        a.lineTo(-2727, -1493);
        a.quadraticCurveTo(-2753, -1514, -2799, -1529);
        a.moveTo(-2928, -1595);
        a.lineTo(-2972, -1620);
        a.quadraticCurveTo(-3035, -1660, -3168, -1732);
        a.moveTo(-2251, -1261);
        a.lineTo(-2446, -1356);
        a.lineTo(-2478, -1371);
        a.moveTo(-2897, -1277);
        a.lineTo(-2665, -1159);
        a.lineTo(-2632, -1142);
        a.quadraticCurveTo(-2618, -1175, -2553, -1209);
        a.moveTo(-2511, -1004);
        a.quadraticCurveTo(-2499, -1030, -2474, -1051);
        a.lineTo(-2470, -1054);
        a.lineTo(-2632, -1142);
        a.lineTo(-2634, -1136);
        a.quadraticCurveTo(-2640, -1117, -2637, -1082);
        a.moveTo(-2285, -946);
        a.quadraticCurveTo(-2123, -847, -1972, -742);
        a.moveTo(-479, -450);
        a.lineTo(-606, -558);
        a.moveTo(-1972, -742);
        a.lineTo(-1971, -741);
        a.lineTo(-1917, -703);
        a.moveTo(-2406, -1085);
        a.quadraticCurveTo(-2442, -1076, -2470, -1054);
        a.lineTo(-2416, -1023);
        a.moveTo(-922, -796);
        a.quadraticCurveTo(-999, -853, -1078, -894);
        a.moveTo(-1646, -421);
        a.quadraticCurveTo(-1642, -435, -1607, -469);
        a.lineTo(-1602, -473);
        a.lineTo(-1787, -610);
        a.moveTo(-1540, -515);
        a.quadraticCurveTo(-1566, -506, -1602, -473);
        a.lineTo(-1364, -293);
        a.moveTo(-1091, 5);
        a.lineTo(-1084, -12);
        a.lineTo(-1061, -42);
        a.lineTo(-1159, -126);
        a.lineTo(-1169, -113);
        a.lineTo(-1182, -95);
        a.lineTo(-1196, -75);
        a.moveTo(-1055, 43);
        a.quadraticCurveTo(-1048, 25, -1023, 2);
        a.lineTo(-1017, -2);
        a.lineTo(-1061, -42);
        a.lineTo(-1056, -48);
        a.quadraticCurveTo(-1020, -86, -992, -91);
        a.moveTo(-1236, -190);
        a.lineTo(-1159, -126);
        a.quadraticCurveTo(-1137, -157, -1126, -177);
        a.moveTo(-943, -48);
        a.quadraticCurveTo(-986, -30, -1017, -2);
        a.lineTo(-877, 125);
        a.quadraticCurveTo(-856, 106, -824, 93);
        a.moveTo(103, -991);
        a.lineTo(-68, -933);
        a.lineTo(-112, -919);
        a.moveTo(-215, -885);
        a.lineTo(-315, -855);
        a.moveTo(-443, -816);
        a.lineTo(-517, -800);
        a.moveTo(-657, -777);
        a.lineTo(-775, -758);
        a.moveTo(-701, -633);
        a.lineTo(-803, -708);
        a.moveTo(-112, -149);
        a.quadraticCurveTo(-189, -220, -281, -291);
        a.moveTo(-3431, -1527);
        a.lineTo(-3032, -1342);
        a.moveTo(-803, 194);
        a.lineTo(-877, 125);
        a.quadraticCurveTo(-900, 144, -908, 169)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5460, 4729);
        a.fillStyle = c;
        a.beginPath();
        a.moveTo(-511, -1436);
        a.quadraticCurveTo(-578, -1436, -653, -1410);
        a.quadraticCurveTo(-750, -1377, -878, -1294);
        a.quadraticCurveTo(-1014, -1205, -1087, -1169);
        a.quadraticCurveTo(-1142, -1141, -1188, -1129);
        a.lineTo(-1195, -1127);
        a.quadraticCurveTo(-1384, -945, -1481, -700);
        a.quadraticCurveTo(-1678, -205, -1473, 277);
        a.quadraticCurveTo(-1521, 322, -1569, 348);
        a.quadraticCurveTo(-1611,
          370, -1661, 383);
        a.lineTo(-1745, 466);
        a.lineTo(-1847, 564);
        a.quadraticCurveTo(-2008, 702, -2110, 702);
        a.quadraticCurveTo(-2111, 702, -2111, 702);
        a.lineTo(-2111, 702);
        a.quadraticCurveTo(-2018, 720, -1972, 803);
        a.quadraticCurveTo(-1935, 873, -1962, 1012);
        a.lineTo(-1964, 1023);
        a.lineTo(-1839, 1003);
        a.quadraticCurveTo(-1753, 1003, -1721, 1100);
        a.quadraticCurveTo(-1709, 1136, -1698, 1200);
        a.quadraticCurveTo(-1588, 1171, -1445, 1052);
        a.quadraticCurveTo(-1315, 943, -1245, 847);
        a.quadraticCurveTo(-1218, 904, -1144, 1132);
        a.quadraticCurveTo(-1102,
          1238, -1054, 1316);
        a.quadraticCurveTo(-949, 1384, -836, 1437);
        a.quadraticCurveTo(-716, 1494, -588, 1533);
        a.quadraticCurveTo(-310, 1620, -17, 1628);
        a.quadraticCurveTo(12, 1629, 41, 1629);
        a.quadraticCurveTo(299, 1629, 550, 1566);
        a.lineTo(561, 1563);
        a.quadraticCurveTo(702, 1521, 837, 1461);
        a.quadraticCurveTo(1086, 1133, 1238, 753);
        a.quadraticCurveTo(1389, 372, 1301, -51);
        a.quadraticCurveTo(1213, -476, 873, -608);
        a.quadraticCurveTo(873, -608, 873, -608);
        a.lineTo(873, -608);
        a.lineTo(566, -598);
        a.quadraticCurveTo(453, -589, 340, -589);
        a.quadraticCurveTo(43, -589, -245, -649);
        a.quadraticCurveTo(-664, -735, -809, -1138);
        a.quadraticCurveTo(-695, -1325, -506, -1436);
        a.quadraticCurveTo(-508, -1436, -511, -1436);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5460, 4729);
        a.fillStyle = b;
        a.beginPath();
        a.moveTo(-1245, 847);
        a.quadraticCurveTo(-1315, 943, -1445, 1052);
        a.quadraticCurveTo(-1588, 1171, -1698, 1200);
        a.lineTo(-1687, 1276);
        a.quadraticCurveTo(-1643, 1232, -1552, 1204);
        a.lineTo(-1396, 1163);
        a.lineTo(-1343, 1144);
        a.lineTo(-1303, 1122);
        a.quadraticCurveTo(-1213, 1206, -1113, 1275);
        a.lineTo(-1054, 1316);
        a.quadraticCurveTo(-1102, 1238, -1144, 1132);
        a.quadraticCurveTo(-1218, 904, -1245, 847);
        a.closePath();
        a.moveTo(203, -1627);
        a.quadraticCurveTo(-169, -1627, -498, -1441);
        a.lineTo(-506, -1436);
        a.quadraticCurveTo(-695, -1325, -809, -1138);
        a.quadraticCurveTo(-664, -735, -245, -649);
        a.quadraticCurveTo(44, -589, 340, -589);
        a.quadraticCurveTo(452, -589, 566, -598);
        a.lineTo(873, -608);
        a.quadraticCurveTo(1213, -476, 1301, -51);
        a.quadraticCurveTo(1389, 372, 1238, 753);
        a.quadraticCurveTo(1086, 1133, 837, 1461);
        a.quadraticCurveTo(941,
          1414, 1041, 1357);
        a.quadraticCurveTo(1275, 1221, 1473, 1038);
        a.lineTo(1504, 1060);
        a.quadraticCurveTo(1571, 1105, 1632, 1125);
        a.lineTo(1768, 1171);
        a.quadraticCurveTo(1752, 1058, 1868, 1011);
        a.quadraticCurveTo(1984, 963, 2097, 875);
        a.lineTo(2096, 874);
        a.quadraticCurveTo(2028, 792, 1933, 741);
        a.quadraticCurveTo(2014, 696, 2103, 683);
        a.lineTo(2103, 672);
        a.quadraticCurveTo(1833, 633, 1624, 483);
        a.lineTo(1581, 451);
        a.lineTo(1585, 439);
        a.quadraticCurveTo(1461, 297, 1434, 244);
        a.lineTo(1432, 240);
        a.quadraticCurveTo(1522, 18, 1560, -281);
        a.quadraticCurveTo(1610, -669, 1341, -1139);
        a.lineTo(1328, -1132);
        a.lineTo(1288, -1126);
        a.quadraticCurveTo(1217, -1126, 1135, -1201);
        a.quadraticCurveTo(1086, -1246, 1043, -1254);
        a.lineTo(1043, -1254);
        a.quadraticCurveTo(1043, -1254, 1043, -1254);
        a.quadraticCurveTo(845, -1562, 389, -1616);
        a.quadraticCurveTo(295, -1627, 203, -1627);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5460, 4729);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 28.57;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(1585, 439);
        a.lineTo(1624, 483);
        a.moveTo(2096, 874);
        a.lineTo(2111, 876);
        a.moveTo(1043, -1254);
        a.quadraticCurveTo(1073, -1208, 1097, -1155);
        a.quadraticCurveTo(1156, -1025, 1034, -893);
        a.moveTo(902, -694);
        a.quadraticCurveTo(924, -747, 959, -798);
        a.moveTo(936, -144);
        a.quadraticCurveTo(910, -212, 893, -271);
        a.moveTo(861, -426);
        a.quadraticCurveTo(856, -473, 859, -512);
        a.quadraticCurveTo(861, -559, 873, -608);
        a.moveTo(-809, -1138);
        a.lineTo(-816, -1126);
        a.quadraticCurveTo(-833, -1073, -838, -1018);
        a.moveTo(1043, -1254);
        a.quadraticCurveTo(845, -1562, 389, -1616);
        a.quadraticCurveTo(-88, -1673, -498, -1441);
        a.lineTo(-506, -1436);
        a.quadraticCurveTo(-695, -1325, -809, -1138);
        a.moveTo(1851, 861);
        a.lineTo(1739, 839);
        a.moveTo(1655, 816);
        a.lineTo(1639, 811);
        a.lineTo(1596, 798);
        a.moveTo(2096, 874);
        a.lineTo(1948, 868);
        a.moveTo(1581, 451);
        a.lineTo(1585, 439);
        a.moveTo(1117, 367);
        a.quadraticCurveTo(1104, 260, 1067, 158);
        a.moveTo(1540, 828);
        a.lineTo(1545, 810);
        a.lineTo(1552, 783);
        a.lineTo(1574, 664);
        a.moveTo(1581, 451);
        a.lineTo(1581, 557);
        a.moveTo(1047, 885);
        a.quadraticCurveTo(1127,
          668, 1124, 467);
        a.moveTo(561, 1563);
        a.lineTo(675, 1471);
        a.moveTo(1433, 1007);
        a.quadraticCurveTo(1485, 954, 1517, 889);
        a.moveTo(930, 1139);
        a.lineTo(1007, 984);
        a.moveTo(773, 1368);
        a.lineTo(858, 1257);
        a.moveTo(1021, 51);
        a.lineTo(974, -51);
        a.moveTo(-811, -775);
        a.lineTo(-831, -855);
        a.moveTo(-730, -579);
        a.quadraticCurveTo(-741, -617, -760, -654);
        a.lineTo(-766, -666);
        a.moveTo(-792, -126);
        a.quadraticCurveTo(-769, -183, -752, -242);
        a.moveTo(-736, -314);
        a.quadraticCurveTo(-725, -372, -720, -431);
        a.moveTo(-926, 49);
        a.lineTo(-903, 76);
        a.lineTo(-839, -27);
        a.moveTo(-982, 129);
        a.lineTo(-962, 156);
        a.lineTo(-940, 126);
        a.lineTo(-903, 76);
        a.lineTo(-897, 85);
        a.lineTo(-854, 145);
        a.moveTo(-962, 156);
        a.lineTo(-951, 168);
        a.lineTo(-894, 217);
        a.moveTo(-1062, 257);
        a.lineTo(-1034, 279);
        a.quadraticCurveTo(-1005, 215, -962, 156);
        a.moveTo(-974, 321);
        a.lineTo(-1022, 288);
        a.lineTo(-1034, 279);
        a.quadraticCurveTo(-1067, 349, -1083, 424);
        a.lineTo(-1077, 424);
        a.lineTo(-998, 425);
        a.moveTo(-1150, 465);
        a.lineTo(-1092, 471);
        a.lineTo(-1083, 424);
        a.lineTo(-1126, 417);
        a.moveTo(-1092, 471);
        a.lineTo(-982,
          473);
        a.moveTo(-1385, 901);
        a.lineTo(-1419, 869);
        a.lineTo(-1445, 843);
        a.moveTo(-1517, 769);
        a.lineTo(-1559, 723);
        a.lineTo(-1581, 699);
        a.lineTo(-1592, 687);
        a.moveTo(-1059, 888);
        a.lineTo(-1087, 752);
        a.moveTo(-1092, 471);
        a.quadraticCurveTo(-1105, 553, -1100, 640);
        a.lineTo(-1093, 641);
        a.quadraticCurveTo(-1039, 646, -1014, 641);
        a.moveTo(-1098, 673);
        a.lineTo(-1100, 640);
        a.lineTo(-1150, 633);
        a.moveTo(-977, 1143);
        a.lineTo(-1024, 1011);
        a.moveTo(-836, 1437);
        a.lineTo(-931, 1253);
        a.moveTo(-1236, 1019);
        a.lineTo(-1326, 952);
        a.moveTo(-1962,
          1012);
        a.lineTo(-1801, 916);
        a.lineTo(-1777, 900);
        a.moveTo(-1644, 623);
        a.lineTo(-1697, 548);
        a.moveTo(-1710, 852);
        a.lineTo(-1662, 813);
        a.lineTo(-1595, 756);
        a.moveTo(-1720, 511);
        a.lineTo(-1745, 466)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5460, 4729);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 40;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(1333, -1153);
        a.lineTo(1341, -1139);
        a.quadraticCurveTo(1610, -669, 1560, -281);
        a.quadraticCurveTo(1522, 18, 1432,
          240);
        a.moveTo(1624, 483);
        a.quadraticCurveTo(1833, 633, 2103, 672);
        a.lineTo(2103, 683);
        a.quadraticCurveTo(2014, 696, 1933, 741);
        a.quadraticCurveTo(2028, 792, 2096, 874);
        a.moveTo(837, 1461);
        a.quadraticCurveTo(941, 1414, 1041, 1357);
        a.quadraticCurveTo(1275, 1221, 1473, 1038);
        a.lineTo(1433, 1007);
        a.lineTo(1354, 938);
        a.moveTo(1473, 1038);
        a.lineTo(1504, 1060);
        a.quadraticCurveTo(1571, 1105, 1632, 1125);
        a.lineTo(1768, 1171);
        a.quadraticCurveTo(1752, 1058, 1868, 1011);
        a.quadraticCurveTo(1984, 963, 2097, 875);
        a.lineTo(2096, 874);
        a.moveTo(1432,
          240);
        a.lineTo(1371, 372);
        a.moveTo(1581, 451);
        a.lineTo(1566, 438);
        a.moveTo(837, 1461);
        a.quadraticCurveTo(702, 1521, 561, 1563);
        a.lineTo(550, 1566);
        a.quadraticCurveTo(270, 1636, -17, 1628);
        a.quadraticCurveTo(-310, 1620, -588, 1533);
        a.quadraticCurveTo(-716, 1494, -836, 1437);
        a.quadraticCurveTo(-949, 1384, -1054, 1316);
        a.lineTo(-1113, 1275);
        a.quadraticCurveTo(-1213, 1206, -1303, 1122);
        a.lineTo(-1343, 1144);
        a.lineTo(-1396, 1163);
        a.lineTo(-1552, 1204);
        a.quadraticCurveTo(-1643, 1232, -1687, 1276);
        a.lineTo(-1698, 1200);
        a.quadraticCurveTo(-1709,
          1136, -1721, 1100);
        a.quadraticCurveTo(-1753, 1003, -1839, 1003);
        a.lineTo(-1964, 1023);
        a.lineTo(-1962, 1012);
        a.quadraticCurveTo(-1935, 873, -1972, 803);
        a.quadraticCurveTo(-2018, 720, -2111, 702);
        a.quadraticCurveTo(-2009, 703, -1847, 564);
        a.lineTo(-1745, 466);
        a.lineTo(-1661, 383);
        a.lineTo(-1630, 353);
        a.moveTo(1624, 483);
        a.lineTo(1581, 451);
        a.moveTo(-1473, 277);
        a.quadraticCurveTo(-1678, -205, -1481, -700);
        a.quadraticCurveTo(-1384, -945, -1195, -1127);
        a.moveTo(-1452, 325);
        a.lineTo(-1473, 277);
        a.moveTo(-1303, 1122);
        a.quadraticCurveTo(-1285,
          1110, -1272, 1096);
        a.quadraticCurveTo(-1244, 1065, -1236, 1019);
        a.quadraticCurveTo(-1230, 986, -1235, 946)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4097);
        a.fillStyle = "rgba(0,0,0,1.000)";
        a.beginPath();
        a.moveTo(-1533, -1810);
        a.lineTo(-1556, -1763);
        a.quadraticCurveTo(-1589, -1690, -1604, -1603);
        a.quadraticCurveTo(-1634, -1434, -1628, -1259);
        a.quadraticCurveTo(-1624, -1128, -1578, -1017);
        a.quadraticCurveTo(-1534, -1127, -1506, -1266);
        a.quadraticCurveTo(-1478, -1406, -1483, -1522);
        a.quadraticCurveTo(-1488, -1638, -1501, -1699);
        a.lineTo(-1533, -1810);
        a.closePath();
        a.moveTo(1821, -1692);
        a.quadraticCurveTo(1768, -1635, 1734, -1473);
        a.quadraticCurveTo(1699, -1312, 1677, -1133);
        a.quadraticCurveTo(1655, -955, 1665, -781);
        a.lineTo(1711, -789);
        a.quadraticCurveTo(1734, -796, 1754, -811);
        a.quadraticCurveTo(1795, -843, 1815, -911);
        a.quadraticCurveTo(1843, -1010, 1858, -1122);
        a.quadraticCurveTo(1871, -1221, 1872, -1344);
        a.lineTo(1869, -1428);
        a.lineTo(1859, -1535);
        a.lineTo(1858, -1547);
        a.lineTo(1851, -1595);
        a.quadraticCurveTo(1846, -1642, 1823, -1690);
        a.lineTo(1821, -1692);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4097);
        a.fillStyle = b;
        a.beginPath();
        a.moveTo(355, -3594);
        a.lineTo(257, -3296);
        a.quadraticCurveTo(234, -3208, 234, -3032);
        a.quadraticCurveTo(234, -2810, 289, -2652);
        a.quadraticCurveTo(314, -2580, 404, -2402);
        a.lineTo(531, -2386);
        a.lineTo(530, -2389);
        a.lineTo(535, -2385);
        a.quadraticCurveTo(904, -2083, 985, -1597);
        a.quadraticCurveTo(1061, -1141, 982, -686);
        a.quadraticCurveTo(907, -252, 649, 108);
        a.quadraticCurveTo(489, 332, 278, 503);
        a.lineTo(294, 494);
        a.quadraticCurveTo(441,
          412, 517, 344);
        a.lineTo(607, 265);
        a.lineTo(685, 215);
        a.quadraticCurveTo(760, 167, 902, 100);
        a.lineTo(903, 99);
        a.quadraticCurveTo(1045, 31, 1189, -109);
        a.lineTo(1197, -117);
        a.lineTo(1261, -184);
        a.lineTo(1294, -218);
        a.lineTo(1358, -293);
        a.quadraticCurveTo(1432, -377, 1482, -474);
        a.quadraticCurveTo(1524, -553, 1548, -641);
        a.lineTo(1563, -680);
        a.quadraticCurveTo(1582, -721, 1627, -728);
        a.lineTo(1706, -722);
        a.lineTo(1712, -725);
        a.quadraticCurveTo(1735, -742, 1743, -770);
        a.lineTo(1754, -811);
        a.lineTo(1754, -811);
        a.quadraticCurveTo(1734, -796, 1711, -789);
        a.lineTo(1665, -781);
        a.quadraticCurveTo(1663, -781, 1662, -781);
        a.quadraticCurveTo(1620, -781, 1589, -807);
        a.quadraticCurveTo(1541, -849, 1540, -985);
        a.quadraticCurveTo(1543, -1069, 1560, -1193);
        a.quadraticCurveTo(1577, -1318, 1596, -1408);
        a.lineTo(1616, -1514);
        a.lineTo(1658, -1645);
        a.quadraticCurveTo(1691, -1743, 1747, -1743);
        a.quadraticCurveTo(1752, -1743, 1757, -1742);
        a.quadraticCurveTo(1794, -1729, 1821, -1692);
        a.lineTo(1823, -1690);
        a.quadraticCurveTo(1831, -1776, 1821, -1809);
        a.lineTo(1786, -1888);
        a.quadraticCurveTo(1761, -1934, 1704, -1955);
        a.lineTo(1679, -1963);
        a.lineTo(1618, -1967);
        a.quadraticCurveTo(1492, -1830, 1429, -1653);
        a.lineTo(1402, -1578);
        a.quadraticCurveTo(1357, -1711, 1366, -1853);
        a.quadraticCurveTo(1370, -1912, 1400, -1962);
        a.quadraticCurveTo(1309, -1970, 1252, -2008);
        a.lineTo(1243, -2015);
        a.lineTo(1101, -2129);
        a.lineTo(987, -2219);
        a.quadraticCurveTo(939, -2253, 873, -2287);
        a.lineTo(833, -2328);
        a.quadraticCurveTo(730, -2436, 657, -2562);
        a.lineTo(581, -2696);
        a.quadraticCurveTo(534, -2779, 488, -2893);
        a.quadraticCurveTo(442, -3007, 429, -3077);
        a.lineTo(408, -3192);
        a.lineTo(401, -3237);
        a.quadraticCurveTo(394, -3288, 390, -3338);
        a.lineTo(389, -3343);
        a.lineTo(384, -3402);
        a.lineTo(383, -3430);
        a.lineTo(381, -3453);
        a.lineTo(377, -3479);
        a.lineTo(373, -3506);
        a.lineTo(370, -3529);
        a.lineTo(365, -3555);
        a.lineTo(355, -3594);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4097);
        a.fillStyle = c;
        a.beginPath();
        a.moveTo(1579, -1967);
        a.lineTo(1505, -1963);
        a.lineTo(1497, -1963);
        a.quadraticCurveTo(1467, -1961, 1439, -1961);
        a.quadraticCurveTo(1418, -1961, 1400, -1962);
        a.quadraticCurveTo(1370, -1912, 1366, -1853);
        a.quadraticCurveTo(1357, -1711, 1402, -1578);
        a.lineTo(1429, -1653);
        a.quadraticCurveTo(1492, -1830, 1618, -1967);
        a.closePath();
        a.moveTo(278, -3664);
        a.lineTo(203, -3566);
        a.lineTo(149, -3489);
        a.lineTo(113, -3449);
        a.lineTo(68, -3405);
        a.lineTo(-1, -3314);
        a.lineTo(-2, -3313);
        a.lineTo(-62, -3219);
        a.lineTo(-111, -3132);
        a.lineTo(-158, -3050);
        a.lineTo(-216, -2952);
        a.lineTo(-249, -2898);
        a.lineTo(-284, -2842);
        a.lineTo(-322, -2782);
        a.lineTo(-354, -2731);
        a.lineTo(-388, -2681);
        a.lineTo(-422, -2631);
        a.lineTo(-481, -2551);
        a.lineTo(-535, -2479);
        a.lineTo(-601, -2397);
        a.lineTo(-678, -2306);
        a.lineTo(-721, -2256);
        a.quadraticCurveTo(-894, -2191, -1046, -2105);
        a.quadraticCurveTo(-1199, -2020, -1302, -1940);
        a.lineTo(-1349, -1966);
        a.quadraticCurveTo(-1397, -1994, -1433, -1994);
        a.quadraticCurveTo(-1474, -1994, -1500, -1957);
        a.quadraticCurveTo(-1498, -1920, -1482, -1886);
        a.lineTo(-1457, -1830);
        a.lineTo(-1454, -1823);
        a.lineTo(-1445, -1802);
        a.lineTo(-1440, -1790);
        a.quadraticCurveTo(-1418, -1735, -1406, -1676);
        a.quadraticCurveTo(-1331, -1314, -1496, -1018);
        a.lineTo(-1526, -969);
        a.lineTo(-1542, -945);
        a.lineTo(-1552, -931);
        a.quadraticCurveTo(-1553, -870, -1511, -841);
        a.quadraticCurveTo(-1500, -833, -1485, -833);
        a.quadraticCurveTo(-1465, -833, -1437, -848);
        a.quadraticCurveTo(-1339, -789, -1327, -697);
        a.quadraticCurveTo(-1315, -606, -1307, -485);
        a.quadraticCurveTo(-1299, -364, -1198, -222);
        a.quadraticCurveTo(-1097, -80, -1037, -7);
        a.quadraticCurveTo(-977, 64, -857, 170);
        a.lineTo(-600, 393);
        a.quadraticCurveTo(-533, 451, -459, 490);
        a.quadraticCurveTo(-383, 529, -301, 548);
        a.quadraticCurveTo(-202, 571, -101, 571);
        a.quadraticCurveTo(-65, 571, -29, 568);
        a.quadraticCurveTo(-13, 569, 3, 569);
        a.quadraticCurveTo(151, 569, 278, 503);
        a.quadraticCurveTo(489, 332, 649, 108);
        a.quadraticCurveTo(907, -252, 982, -686);
        a.quadraticCurveTo(1061, -1141, 985, -1597);
        a.quadraticCurveTo(904, -2083, 535, -2385);
        a.lineTo(531, -2386);
        a.lineTo(404, -2402);
        a.quadraticCurveTo(314, -2580, 289, -2652);
        a.quadraticCurveTo(234, -2810, 234, -3032);
        a.quadraticCurveTo(234, -3208, 257, -3296);
        a.lineTo(355, -3594);
        a.lineTo(351, -3608);
        a.quadraticCurveTo(341, -3646, 278, -3664);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4097);
        a.fillStyle = "rgba(255,255,255,1.000)";
        a.beginPath();
        a.moveTo(-1482, -1886);
        a.quadraticCurveTo(-1511, -1851, -1533, -1810);
        a.lineTo(-1501, -1699);
        a.quadraticCurveTo(-1488, -1638, -1483, -1522);
        a.quadraticCurveTo(-1478, -1406, -1506, -1266);
        a.quadraticCurveTo(-1534, -1127, -1578, -1017);
        a.lineTo(-1542, -945);
        a.lineTo(-1526, -969);
        a.lineTo(-1496, -1018);
        a.quadraticCurveTo(-1331, -1314, -1406, -1676);
        a.quadraticCurveTo(-1418, -1735, -1440, -1790);
        a.lineTo(-1445, -1802);
        a.lineTo(-1454, -1823);
        a.lineTo(-1457, -1830);
        a.lineTo(-1482, -1886);
        a.closePath();
        a.moveTo(1747, -1743);
        a.quadraticCurveTo(1691, -1743, 1658, -1645);
        a.lineTo(1616, -1514);
        a.lineTo(1596, -1408);
        a.quadraticCurveTo(1577, -1318, 1560, -1193);
        a.quadraticCurveTo(1543, -1069, 1540, -985);
        a.quadraticCurveTo(1541, -849, 1589, -807);
        a.quadraticCurveTo(1620, -781, 1662, -781);
        a.quadraticCurveTo(1664, -781, 1665, -781);
        a.quadraticCurveTo(1655, -955, 1677, -1133);
        a.quadraticCurveTo(1699, -1312, 1734, -1473);
        a.quadraticCurveTo(1768, -1635, 1821, -1692);
        a.quadraticCurveTo(1794, -1729, 1757, -1742);
        a.quadraticCurveTo(1752, -1743, 1747, -1743);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4097);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 40;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(355, -3594);
        a.lineTo(365, -3555);
        a.lineTo(370, -3529);
        a.lineTo(373, -3506);
        a.lineTo(377, -3479);
        a.lineTo(381, -3453);
        a.lineTo(383, -3430);
        a.lineTo(384, -3402);
        a.lineTo(389, -3343);
        a.lineTo(390, -3338);
        a.quadraticCurveTo(394, -3288, 401, -3237);
        a.lineTo(408, -3192);
        a.lineTo(429, -3077);
        a.quadraticCurveTo(442, -3007, 488, -2893);
        a.quadraticCurveTo(534, -2779, 581, -2696);
        a.lineTo(657, -2562);
        a.quadraticCurveTo(730, -2436, 833, -2328);
        a.lineTo(873, -2287);
        a.quadraticCurveTo(939, -2253, 987, -2219);
        a.lineTo(1101, -2129);
        a.lineTo(1243, -2015);
        a.lineTo(1252, -2008);
        a.quadraticCurveTo(1309, -1970, 1400, -1962);
        a.quadraticCurveTo(1444, -1959, 1497, -1963);
        a.lineTo(1505, -1963);
        a.lineTo(1579, -1967);
        a.lineTo(1618, -1967);
        a.lineTo(1679, -1963);
        a.lineTo(1704, -1955);
        a.quadraticCurveTo(1761, -1934, 1786, -1888);
        a.lineTo(1821, -1809);
        a.quadraticCurveTo(1831, -1776, 1823, -1690);
        a.quadraticCurveTo(1846, -1642, 1851, -1595);
        a.lineTo(1858, -1547);
        a.lineTo(1859, -1535);
        a.lineTo(1869, -1428);
        a.lineTo(1872, -1344);
        a.quadraticCurveTo(1871, -1221, 1858, -1122);
        a.quadraticCurveTo(1843, -1010, 1815, -911);
        a.quadraticCurveTo(1795, -843, 1754, -811);
        a.lineTo(1743, -770);
        a.quadraticCurveTo(1735, -742, 1712, -725);
        a.lineTo(1706, -722);
        a.lineTo(1627, -728);
        a.quadraticCurveTo(1582, -721, 1563, -680);
        a.lineTo(1548, -641);
        a.quadraticCurveTo(1524, -553, 1482, -474);
        a.quadraticCurveTo(1432, -377, 1358, -293);
        a.lineTo(1294, -218);
        a.lineTo(1261, -184);
        a.lineTo(1197, -117);
        a.lineTo(1189, -109);
        a.quadraticCurveTo(1045, 31, 903, 99);
        a.moveTo(902, 100);
        a.quadraticCurveTo(760, 167, 685, 215);
        a.lineTo(607, 265);
        a.lineTo(517, 344);
        a.quadraticCurveTo(441, 412, 294, 494);
        a.lineTo(278, 503);
        a.quadraticCurveTo(137, 576, -29, 568);
        a.quadraticCurveTo(-167, 579, -301, 548);
        a.quadraticCurveTo(-383, 529, -459, 490);
        a.quadraticCurveTo(-533, 451, -600, 393);
        a.lineTo(-857, 170);
        a.quadraticCurveTo(-977, 64, -1037, -7);
        a.quadraticCurveTo(-1097, -80, -1198, -222);
        a.quadraticCurveTo(-1299, -364, -1307, -485);
        a.quadraticCurveTo(-1315, -606, -1327, -697);
        a.quadraticCurveTo(-1339, -789, -1437, -848);
        a.quadraticCurveTo(-1485, -823, -1511, -841);
        a.quadraticCurveTo(-1553, -870, -1552, -931);
        a.lineTo(-1542, -945);
        a.lineTo(-1578, -1017);
        a.quadraticCurveTo(-1624, -1128, -1628, -1259);
        a.quadraticCurveTo(-1634, -1434, -1604, -1603);
        a.quadraticCurveTo(-1589, -1690, -1556, -1763);
        a.lineTo(-1533, -1810);
        a.quadraticCurveTo(-1511, -1851, -1482, -1886);
        a.quadraticCurveTo(-1498, -1920, -1500, -1957);
        a.quadraticCurveTo(-1452, -2026, -1349, -1966);
        a.lineTo(-1302, -1940);
        a.quadraticCurveTo(-1199, -2020, -1046, -2105);
        a.quadraticCurveTo(-894, -2191, -721, -2256);
        a.lineTo(-678, -2306);
        a.lineTo(-601, -2397);
        a.lineTo(-535, -2479);
        a.lineTo(-481, -2551);
        a.lineTo(-422, -2631);
        a.lineTo(-388, -2681);
        a.lineTo(-354, -2731);
        a.lineTo(-322, -2782);
        a.lineTo(-284, -2842);
        a.lineTo(-249, -2898);
        a.lineTo(-216, -2952);
        a.lineTo(-158, -3050);
        a.lineTo(-111, -3132);
        a.lineTo(-62, -3219);
        a.lineTo(-2, -3313);
        a.lineTo(-1, -3314);
        a.lineTo(68, -3405);
        a.lineTo(113, -3449);
        a.lineTo(149, -3489);
        a.lineTo(203, -3566);
        a.lineTo(278, -3664);
        a.quadraticCurveTo(341, -3646, 351, -3608);
        a.lineTo(355, -3594);
        a.moveTo(404, -2402);
        a.lineTo(531, -2386);
        a.moveTo(404, -2402);
        a.lineTo(303, -2408);
        a.moveTo(535, -2385);
        a.lineTo(604, -2373);
        a.lineTo(705, -2350);
        a.quadraticCurveTo(788, -2328, 843, -2301);
        a.lineTo(873, -2287);
        a.moveTo(531, -2386);
        a.lineTo(535, -2385);
        a.moveTo(1821, -1692);
        a.quadraticCurveTo(1794, -1729, 1757, -1742);
        a.quadraticCurveTo(1694, -1751, 1658, -1645);
        a.lineTo(1616, -1514);
        a.lineTo(1596, -1408);
        a.quadraticCurveTo(1577, -1318, 1560, -1193);
        a.quadraticCurveTo(1543, -1069, 1540, -985);
        a.quadraticCurveTo(1541, -849, 1589, -807);
        a.quadraticCurveTo(1621, -780, 1665, -781);
        a.quadraticCurveTo(1655, -955, 1677, -1133);
        a.quadraticCurveTo(1699, -1312, 1734, -1473);
        a.quadraticCurveTo(1768, -1635, 1821, -1692);
        a.closePath();
        a.moveTo(1665, -781);
        a.lineTo(1711, -789);
        a.quadraticCurveTo(1734, -796, 1754, -811);
        a.moveTo(-420, -2347);
        a.quadraticCurveTo(-568, -2313, -721, -2256);
        a.moveTo(-420, -2347);
        a.lineTo(-382, -2355);
        a.quadraticCurveTo(-215, -2390, -44, -2398);
        a.moveTo(-1542, -945);
        a.lineTo(-1526, -969);
        a.lineTo(-1496, -1018);
        a.quadraticCurveTo(-1331, -1314, -1406, -1676);
        a.quadraticCurveTo(-1418, -1735, -1440, -1790);
        a.lineTo(-1445, -1802);
        a.lineTo(-1454, -1823);
        a.lineTo(-1457, -1830);
        a.lineTo(-1482, -1886);
        a.moveTo(-1533, -1810);
        a.lineTo(-1501, -1699);
        a.quadraticCurveTo(-1488, -1638, -1483, -1522);
        a.quadraticCurveTo(-1478, -1406, -1506, -1266);
        a.quadraticCurveTo(-1534, -1127, -1578, -1017);
        a.moveTo(-1302, -1940);
        a.quadraticCurveTo(-1237, -1897, -1172, -1831);
        a.moveTo(-1373, -895);
        a.quadraticCurveTo(-1409, -864, -1437, -848)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4097);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 28.57;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(903, 99);
        a.lineTo(902, 100);
        a.moveTo(531, -2386);
        a.lineTo(530, -2389);
        a.lineTo(488, -2488);
        a.moveTo(390, -3338);
        a.quadraticCurveTo(368, -3290, 354, -3242);
        a.moveTo(33, -3088);
        a.lineTo(33, -3128);
        a.lineTo(30, -3177);
        a.moveTo(335, -3159);
        a.quadraticCurveTo(327, -3115, 326, -3071);
        a.moveTo(424, -2649);
        a.lineTo(452, -2577);
        a.moveTo(363, -2815);
        a.lineTo(370, -2795);
        a.lineTo(393, -2732);
        a.moveTo(705, -2350);
        a.lineTo(790, -2265);
        a.moveTo(856, -2190);
        a.lineTo(898, -2140);
        a.moveTo(328, -2981);
        a.lineTo(341, -2898);
        a.moveTo(11, -2889);
        a.lineTo(29, -3013);
        a.moveTo(1164, -1579);
        a.lineTo(1204, -1591);
        a.lineTo(1208, -1591);
        a.quadraticCurveTo(1158, -1743, 1076, -1882);
        a.lineTo(1068, -1895);
        a.moveTo(1310, -1428);
        a.lineTo(1251, -1428);
        a.lineTo(1263, -1363);
        a.lineTo(1280, -1237);
        a.lineTo(1307, -1244);
        a.lineTo(1359, -1258);
        a.moveTo(1211, -1428);
        a.lineTo(1251, -1428);
        a.lineTo(1239, -1483);
        a.lineTo(1218, -1481);
        a.lineTo(1179, -1475);
        a.moveTo(1347, -1087);
        a.lineTo(1290, -1083);
        a.lineTo(1291, -998);
        a.lineTo(1324, -998);
        a.moveTo(1239, -998);
        a.lineTo(1291, -998);
        a.lineTo(1289, -938);
        a.lineTo(1343, -941);
        a.moveTo(1234, -1083);
        a.lineTo(1276, -1083);
        a.lineTo(1290, -1083);
        a.lineTo(1287, -1146);
        a.lineTo(1280, -1237);
        a.lineTo(1229, -1220);
        a.moveTo(1291, -1594);
        a.lineTo(1208, -1591);
        a.lineTo(1239, -1483);
        a.lineTo(1315, -1485);
        a.moveTo(1234, -938);
        a.lineTo(1246, -938);
        a.lineTo(1289, -938);
        a.lineTo(1284, -855);
        a.moveTo(1334, -683);
        a.lineTo(1264, -689);
        a.lineTo(1253, -630);
        a.moveTo(1206, -703);
        a.lineTo(1249, -693);
        a.lineTo(1264, -689);
        a.lineTo(1275, -761);
        a.moveTo(1281, -476);
        a.lineTo(1214, -476);
        a.lineTo(1204, -445);
        a.moveTo(1159, -490);
        a.lineTo(1191, -479);
        a.lineTo(1214, -476);
        a.lineTo(1233, -543);
        a.moveTo(1161, -336);
        a.lineTo(1147, -306);
        a.quadraticCurveTo(1045, -100, 903, 99);
        a.moveTo(958, -2062);
        a.lineTo(1015, -1979);
        a.moveTo(-55, -2701);
        a.lineTo(-33, -2747);
        a.lineTo(-15, -2791);
        a.moveTo(-160, -2552);
        a.quadraticCurveTo(-124, -2592, -95, -2635);
        a.moveTo(-801, -2035);
        a.lineTo(-771, -2068);
        a.lineTo(-710, -2127);
        a.moveTo(-540, -2261);
        a.lineTo(-420, -2347);
        a.moveTo(-653, -2174);
        a.lineTo(-600, -2217);
        a.moveTo(-369, -2375);
        a.lineTo(-316, -2412);
        a.moveTo(-273, -2445);
        a.lineTo(-208, -2502);
        a.moveTo(-1250, -769);
        a.quadraticCurveTo(-1301, -970, -1270, -1196);
        a.quadraticCurveTo(-1251, -1332, -1185, -1487);
        a.lineTo(-1152, -1557);
        a.moveTo(-1082, -1679);
        a.lineTo(-997, -1800);
        a.lineTo(-857, -1972);
        a.moveTo(-1188, -588);
        a.lineTo(-1182, -573);
        a.quadraticCurveTo(-1161, -588, -1140, -590);
        a.moveTo(-1045, -462);
        a.quadraticCurveTo(-1079, -455, -1116, -429);
        a.lineTo(-1117, -428);
        a.lineTo(-1094, -380);
        a.lineTo(-1091, -382);
        a.lineTo(-1031, -415);
        a.moveTo(-1158, -391);
        a.quadraticCurveTo(-1148, -408, -1117, -428);
        a.lineTo(-1139, -474);
        a.lineTo(-1143, -472);
        a.lineTo(-1182, -443);
        a.moveTo(-1067, -328);
        a.lineTo(-1094, -380);
        a.quadraticCurveTo(-1115, -368, -1122, -360);
        a.moveTo(-1182, -573);
        a.lineTo(-1139, -474);
        a.quadraticCurveTo(-1103, -498, -1073, -508);
        a.moveTo(-1182, -573);
        a.lineTo(-1218, -540);
        a.moveTo(-684, 238);
        a.lineTo(-790, 107);
        a.moveTo(-459, 490);
        a.lineTo(-627, 305);
        a.moveTo(21, -3237);
        a.lineTo(-1, -3314);
        a.moveTo(-849, 29);
        a.lineTo(-933, -93)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4097);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth =
          60;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(1821, -1692);
        a.lineTo(1823, -1690)
      }
    ]
  }
}

function make_baby_4(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4537);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-5167, -1469);
      a.quadraticCurveTo(-5024, -1226, -4984, -966);
      a.quadraticCurveTo(-4959, -863, -4965, -769);
      a.quadraticCurveTo(-4916, -591, -4930, -434);
      a.quadraticCurveTo(-4929, -411, -4935, -393);
      a.lineTo(-5023, -404);
      a.quadraticCurveTo(-5036, -452, -5065, -503);
      a.quadraticCurveTo(-5099, -563, -5160, -614);
      a.lineTo(-5179, -630);
      a.quadraticCurveTo(-5131, -735, -5094, -844);
      a.quadraticCurveTo(-5077, -1064, -5140, -1382);
      a.quadraticCurveTo(-5148, -1430, -5167, -1469);
      a.closePath();
      a.moveTo(-5196, -1718);
      a.quadraticCurveTo(-5393, -635, -5278, 211);
      a.quadraticCurveTo(-5245, 257, -5231, 307);
      a.quadraticCurveTo(-5039, 948, -4566, 1399);
      a.lineTo(-4448, 1510);
      a.quadraticCurveTo(-4020, 1888, -3648, 1982);
      a.quadraticCurveTo(-3435, 2030, -3233, 2030);
      a.quadraticCurveTo(-3225, 2030, -3217, 2030);
      a.quadraticCurveTo(-2898, 2004, -2462, 1815);
      a.quadraticCurveTo(-1818, 1591, -1282, 913);
      a.quadraticCurveTo(-1293, 897, -1308, 891);
      a.quadraticCurveTo(-1703,
        710, -2090, 639);
      a.lineTo(-2092, 638);
      a.lineTo(-2197, 612);
      a.quadraticCurveTo(-1916, 382, -1607, 248);
      a.quadraticCurveTo(-1459, 191, -1311, 167);
      a.quadraticCurveTo(-962, 122, -689, -246);
      a.quadraticCurveTo(-676, -283, -670, -320);
      a.quadraticCurveTo(-572, -714, -646, -1076);
      a.lineTo(-646, -1076);
      a.quadraticCurveTo(-1135, -774, -1667, -286);
      a.quadraticCurveTo(-2454, 271, -3048, 465);
      a.quadraticCurveTo(-3202, 528, -3363, 528);
      a.quadraticCurveTo(-3781, 528, -4246, 104);
      a.quadraticCurveTo(-4811, -502, -5196, -1718);
      a.closePath()
    }, function(a) {
      a.transform(-0.49,
        0, 0, 0.48, 6058, 4537);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-5167, -1469);
      a.quadraticCurveTo(-5148, -1430, -5140, -1382);
      a.quadraticCurveTo(-5077, -1064, -5094, -844);
      a.quadraticCurveTo(-5131, -735, -5179, -630);
      a.lineTo(-5160, -614);
      a.quadraticCurveTo(-5099, -563, -5065, -503);
      a.quadraticCurveTo(-5036, -452, -5023, -404);
      a.lineTo(-4935, -393);
      a.quadraticCurveTo(-4929, -411, -4930, -434);
      a.quadraticCurveTo(-4916, -591, -4965, -769);
      a.quadraticCurveTo(-4959, -863, -4984, -966);
      a.quadraticCurveTo(-5024, -1226, -5167, -1469);
      a.closePath();
      a.moveTo(-83, -1392);
      a.quadraticCurveTo(-347, -1257, -646, -1076);
      a.quadraticCurveTo(-572, -714, -670, -320);
      a.quadraticCurveTo(-676, -283, -689, -246);
      a.quadraticCurveTo(-962, 122, -1311, 167);
      a.quadraticCurveTo(-1459, 191, -1607, 248);
      a.quadraticCurveTo(-1916, 382, -2197, 612);
      a.lineTo(-2092, 638);
      a.lineTo(-2090, 639);
      a.quadraticCurveTo(-1703, 710, -1308, 891);
      a.quadraticCurveTo(-1293, 897, -1282, 913);
      a.quadraticCurveTo(-1818, 1591, -2462, 1815);
      a.quadraticCurveTo(-2898, 2004, -3217, 2030);
      a.quadraticCurveTo(-3225, 2030, -3233,
        2030);
      a.quadraticCurveTo(-3435, 2030, -3648, 1982);
      a.quadraticCurveTo(-4020, 1888, -4448, 1510);
      a.lineTo(-4566, 1399);
      a.quadraticCurveTo(-5039, 948, -5231, 307);
      a.quadraticCurveTo(-5245, 257, -5278, 211);
      a.lineTo(-5278, 211);
      a.quadraticCurveTo(-5084, 1165, -4246, 2002);
      a.quadraticCurveTo(-3853, 2359, -3160, 2359);
      a.quadraticCurveTo(-3145, 2359, -3129, 2359);
      a.quadraticCurveTo(-2061, 2348, -147, 930);
      a.quadraticCurveTo(250, 515, 324, -60);
      a.quadraticCurveTo(378, -655, -83, -1392);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0,
        0.48, 6058, 4537);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-5167, -1469);
      a.quadraticCurveTo(-5024, -1226, -4984, -966);
      a.quadraticCurveTo(-4959, -863, -4965, -769);
      a.quadraticCurveTo(-4916, -591, -4930, -434);
      a.quadraticCurveTo(-4929, -411, -4935, -393);
      a.lineTo(-5023, -404);
      a.quadraticCurveTo(-5036, -452, -5065, -503);
      a.quadraticCurveTo(-5099, -563, -5160, -614);
      a.lineTo(-5179, -630);
      a.quadraticCurveTo(-5131, -735, -5094, -844);
      a.quadraticCurveTo(-5077, -1064, -5140, -1382);
      a.quadraticCurveTo(-5148, -1430, -5167, -1469);
      a.closePath();
      a.moveTo(-4965, -769);
      a.quadraticCurveTo(-5026, -808, -5094, -844);
      a.moveTo(-5278, 211);
      a.quadraticCurveTo(-5084, 1165, -4246, 2002);
      a.quadraticCurveTo(-3844, 2367, -3129, 2359);
      a.quadraticCurveTo(-2061, 2348, -147, 930);
      a.quadraticCurveTo(250, 515, 324, -60);
      a.quadraticCurveTo(378, -655, -83, -1392);
      a.quadraticCurveTo(-347, -1257, -646, -1076);
      a.quadraticCurveTo(-1135, -774, -1667, -286);
      a.quadraticCurveTo(-2454,
        271, -3048, 465);
      a.quadraticCurveTo(-3603, 691, -4246, 104);
      a.quadraticCurveTo(-4811, -502, -5196, -1718);
      a.quadraticCurveTo(-5393, -635, -5278, 211);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4537);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-5193, -397);
      a.quadraticCurveTo(-5207, -302, -5201, -189);
      a.moveTo(-689, -246);
      a.quadraticCurveTo(-645, -229, -597, -214);
      a.moveTo(-1219, -350);
      a.quadraticCurveTo(-1306, -356, -1392, -334);
      a.moveTo(-959, -323);
      a.lineTo(-1081, -338);
      a.moveTo(-946, -517);
      a.lineTo(-1063, -416);
      a.moveTo(-31, -1030);
      a.quadraticCurveTo(-157, -997, -267, -951);
      a.lineTo(-325, -926);
      a.moveTo(-718, -685);
      a.lineTo(-799, -628);
      a.moveTo(-455, -859);
      a.lineTo(-573, -789);
      a.moveTo(-234, -65);
      a.quadraticCurveTo(-328, -120, -445, -159);
      a.moveTo(-689, -246);
      a.lineTo(-846, -296);
      a.moveTo(-4566, 1399);
      a.lineTo(-4677, 1237);
      a.moveTo(-2090, 639);
      a.lineTo(-2039, 627);
      a.moveTo(-1341, 571);
      a.lineTo(-1258, 580);
      a.lineTo(-1244, 500);
      a.moveTo(-1165, 676);
      a.lineTo(-1164, 651);
      a.lineTo(-1151, 601);
      a.lineTo(-1258, 580);
      a.lineTo(-1263, 603);
      a.lineTo(-1269, 633);
      a.lineTo(-1276, 666);
      a.moveTo(-866, 688);
      a.quadraticCurveTo(-907, 670, -948, 659);
      a.quadraticCurveTo(-964, 693, -964, 730);
      a.moveTo(-1050, 509);
      a.quadraticCurveTo(-1083, 560, -1103, 614);
      a.quadraticCurveTo(-1024, 629, -948, 659);
      a.quadraticCurveTo(-935, 621, -909, 588);
      a.moveTo(-1105, 496);
      a.quadraticCurveTo(-1127, 524, -1149, 590);
      a.lineTo(-1151, 601);
      a.lineTo(-1103, 614);
      a.lineTo(-1107,
        623);
      a.quadraticCurveTo(-1122, 664, -1124, 692);
      a.moveTo(-2176, 244);
      a.lineTo(-2354, 351);
      a.moveTo(-2384, 721);
      a.quadraticCurveTo(-2236, 672, -2092, 638);
      a.moveTo(-1744, 668);
      a.lineTo(-1727, 586);
      a.lineTo(-1723, 577);
      a.lineTo(-1910, 601);
      a.moveTo(-1964, 107);
      a.quadraticCurveTo(-2025, 141, -2082, 185);
      a.moveTo(-1685, 478);
      a.quadraticCurveTo(-1704, 511, -1723, 577);
      a.lineTo(-1477, 564);
      a.moveTo(-2444, 401);
      a.quadraticCurveTo(-2534, 450, -2607, 483);
      a.lineTo(-2634, 496);
      a.moveTo(-2719, 530);
      a.lineTo(-2836, 577);
      a.quadraticCurveTo(-2858,
        579, -2892, 599);
      a.moveTo(-2992, 638);
      a.quadraticCurveTo(-3003, 636, -3026, 648);
      a.lineTo(-3172, 687);
      a.moveTo(-2904, 892);
      a.lineTo(-2715, 823);
      a.lineTo(-2687, 814);
      a.quadraticCurveTo(-2684, 776, -2645, 698);
      a.moveTo(-2565, 848);
      a.lineTo(-2550, 779);
      a.lineTo(-2548, 773);
      a.lineTo(-2687, 814);
      a.quadraticCurveTo(-2685, 818, -2686, 820);
      a.lineTo(-2677, 871);
      a.moveTo(-2509, 694);
      a.lineTo(-2548, 773);
      a.lineTo(-2500, 758);
      a.moveTo(-3343, 724);
      a.lineTo(-3561, 742);
      a.moveTo(-3639, 745);
      a.quadraticCurveTo(-3654, 740, -3680, 745);
      a.quadraticCurveTo(-3772,
        721, -3864, 664);
      a.moveTo(-4270, 265);
      a.lineTo(-4337, 190);
      a.quadraticCurveTo(-4469, 67, -4573, -89);
      a.moveTo(-4463, 1552);
      a.lineTo(-4353, 1704);
      a.moveTo(-4235, 1831);
      a.quadraticCurveTo(-4153, 1905, -4074, 1961);
      a.moveTo(-3936, 598);
      a.lineTo(-4182, 356);
      a.moveTo(-5174, 6);
      a.lineTo(-5111, 259);
      a.moveTo(-5065, 389);
      a.quadraticCurveTo(-5023, 524, -4969, 650);
      a.moveTo(-3943, 2044);
      a.lineTo(-3808, 2108);
      a.moveTo(-3713, 2143);
      a.lineTo(-3620, 2167);
      a.lineTo(-3554, 2184);
      a.moveTo(-3488, 2196);
      a.lineTo(-3402, 2213);
      a.moveTo(-4888, 841);
      a.quadraticCurveTo(-4837, 961, -4782, 1063);
      a.moveTo(-3301, 1048);
      a.quadraticCurveTo(-3157, 998, -3008, 934)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4537);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-5167, -1469);
      a.quadraticCurveTo(-5024, -1226, -4984, -966);
      a.quadraticCurveTo(-4959, -863, -4965, -769);
      a.quadraticCurveTo(-4916, -591, -4930, -434);
      a.quadraticCurveTo(-4929, -411, -4935, -393);
      a.lineTo(-5023, -404);
      a.quadraticCurveTo(-5036, -452, -5065, -503);
      a.quadraticCurveTo(-5099, -563, -5160, -614);
      a.lineTo(-5179, -630);
      a.quadraticCurveTo(-5131, -735, -5094, -844);
      a.quadraticCurveTo(-5077, -1064, -5140, -1382);
      a.quadraticCurveTo(-5148, -1430, -5167, -1469);
      a.closePath();
      a.moveTo(-5196, -1718);
      a.quadraticCurveTo(-5393, -635, -5278, 211);
      a.quadraticCurveTo(-5245, 257, -5231, 307);
      a.quadraticCurveTo(-5039, 948, -4566, 1399);
      a.lineTo(-4448, 1510);
      a.quadraticCurveTo(-4020, 1888, -3648, 1982);
      a.quadraticCurveTo(-3435, 2030, -3233, 2030);
      a.quadraticCurveTo(-3225, 2030, -3217, 2030);
      a.quadraticCurveTo(-2898, 2004, -2462, 1815);
      a.quadraticCurveTo(-1818, 1591, -1282, 913);
      a.quadraticCurveTo(-1293,
        897, -1308, 891);
      a.quadraticCurveTo(-1703, 710, -2090, 639);
      a.lineTo(-2092, 638);
      a.lineTo(-2197, 612);
      a.quadraticCurveTo(-1916, 382, -1607, 248);
      a.quadraticCurveTo(-1459, 191, -1311, 167);
      a.quadraticCurveTo(-962, 122, -689, -246);
      a.quadraticCurveTo(-676, -283, -670, -320);
      a.quadraticCurveTo(-572, -714, -646, -1076);
      a.lineTo(-646, -1076);
      a.quadraticCurveTo(-1135, -774, -1667, -286);
      a.quadraticCurveTo(-2454, 271, -3048, 465);
      a.quadraticCurveTo(-3202, 528, -3363, 528);
      a.quadraticCurveTo(-3781, 528, -4246, 104);
      a.quadraticCurveTo(-4811, -502, -5196, -1718);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4537);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-5167, -1469);
      a.quadraticCurveTo(-5148, -1430, -5140, -1382);
      a.quadraticCurveTo(-5077, -1064, -5094, -844);
      a.quadraticCurveTo(-5131, -735, -5179, -630);
      a.lineTo(-5160, -614);
      a.quadraticCurveTo(-5099, -563, -5065, -503);
      a.quadraticCurveTo(-5036, -452, -5023, -404);
      a.lineTo(-4935, -393);
      a.quadraticCurveTo(-4929, -411, -4930, -434);
      a.quadraticCurveTo(-4916, -591, -4965, -769);
      a.quadraticCurveTo(-4959, -863, -4984, -966);
      a.quadraticCurveTo(-5024, -1226, -5167, -1469);
      a.closePath();
      a.moveTo(-83, -1392);
      a.quadraticCurveTo(-347, -1257, -646, -1076);
      a.quadraticCurveTo(-572, -714, -670, -320);
      a.quadraticCurveTo(-676, -283, -689, -246);
      a.quadraticCurveTo(-962, 122, -1311, 167);
      a.quadraticCurveTo(-1459, 191, -1607, 248);
      a.quadraticCurveTo(-1916, 382, -2197, 612);
      a.lineTo(-2092, 638);
      a.lineTo(-2090, 639);
      a.quadraticCurveTo(-1703, 710, -1308, 891);
      a.quadraticCurveTo(-1293, 897, -1282, 913);
      a.quadraticCurveTo(-1818, 1591, -2462, 1815);
      a.quadraticCurveTo(-2898,
        2004, -3217, 2030);
      a.quadraticCurveTo(-3225, 2030, -3233, 2030);
      a.quadraticCurveTo(-3435, 2030, -3648, 1982);
      a.quadraticCurveTo(-4020, 1888, -4448, 1510);
      a.lineTo(-4566, 1399);
      a.quadraticCurveTo(-5039, 948, -5231, 307);
      a.quadraticCurveTo(-5245, 257, -5278, 211);
      a.lineTo(-5278, 211);
      a.quadraticCurveTo(-5084, 1165, -4246, 2002);
      a.quadraticCurveTo(-3853, 2359, -3160, 2359);
      a.quadraticCurveTo(-3145, 2359, -3129, 2359);
      a.quadraticCurveTo(-2061, 2348, -147, 930);
      a.quadraticCurveTo(250, 515, 324, -60);
      a.quadraticCurveTo(378, -655, -83, -1392);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4537);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-5167, -1469);
      a.quadraticCurveTo(-5024, -1226, -4984, -966);
      a.quadraticCurveTo(-4959, -863, -4965, -769);
      a.quadraticCurveTo(-4916, -591, -4930, -434);
      a.quadraticCurveTo(-4929, -411, -4935, -393);
      a.lineTo(-5023, -404);
      a.quadraticCurveTo(-5036, -452, -5065, -503);
      a.quadraticCurveTo(-5099, -563, -5160, -614);
      a.lineTo(-5179, -630);
      a.quadraticCurveTo(-5131, -735, -5094, -844);
      a.quadraticCurveTo(-5077, -1064, -5140, -1382);
      a.quadraticCurveTo(-5148, -1430, -5167, -1469);
      a.closePath();
      a.moveTo(-4965, -769);
      a.quadraticCurveTo(-5026, -808, -5094, -844);
      a.moveTo(-5278, 211);
      a.quadraticCurveTo(-5084, 1165, -4246, 2002);
      a.quadraticCurveTo(-3844, 2367, -3129, 2359);
      a.quadraticCurveTo(-2061, 2348, -147, 930);
      a.quadraticCurveTo(250, 515, 324, -60);
      a.quadraticCurveTo(378, -655, -83, -1392);
      a.quadraticCurveTo(-347, -1257, -646, -1076);
      a.quadraticCurveTo(-1135, -774, -1667, -286);
      a.quadraticCurveTo(-2454, 271, -3048, 465);
      a.quadraticCurveTo(-3603, 691, -4246, 104);
      a.quadraticCurveTo(-4811, -502, -5196, -1718);
      a.quadraticCurveTo(-5393, -635, -5278, 211);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4537);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-5193, -397);
      a.quadraticCurveTo(-5207, -302, -5201, -189);
      a.moveTo(-689, -246);
      a.quadraticCurveTo(-645, -229, -597, -214);
      a.moveTo(-1219, -350);
      a.quadraticCurveTo(-1306, -356, -1392, -334);
      a.moveTo(-959, -323);
      a.lineTo(-1081, -338);
      a.moveTo(-946, -517);
      a.lineTo(-1063, -416);
      a.moveTo(-31, -1030);
      a.quadraticCurveTo(-157, -997, -267, -951);
      a.lineTo(-325, -926);
      a.moveTo(-718, -685);
      a.lineTo(-799, -628);
      a.moveTo(-455, -859);
      a.lineTo(-573, -789);
      a.moveTo(-234, -65);
      a.quadraticCurveTo(-328, -120, -445, -159);
      a.moveTo(-689, -246);
      a.lineTo(-846, -296);
      a.moveTo(-4566, 1399);
      a.lineTo(-4677, 1237);
      a.moveTo(-2090,
        639);
      a.lineTo(-2039, 627);
      a.moveTo(-1341, 571);
      a.lineTo(-1258, 580);
      a.lineTo(-1244, 500);
      a.moveTo(-1165, 676);
      a.lineTo(-1164, 651);
      a.lineTo(-1151, 601);
      a.lineTo(-1258, 580);
      a.lineTo(-1263, 603);
      a.lineTo(-1269, 633);
      a.lineTo(-1276, 666);
      a.moveTo(-866, 688);
      a.quadraticCurveTo(-907, 670, -948, 659);
      a.quadraticCurveTo(-964, 693, -964, 730);
      a.moveTo(-1050, 509);
      a.quadraticCurveTo(-1083, 560, -1103, 614);
      a.quadraticCurveTo(-1024, 629, -948, 659);
      a.quadraticCurveTo(-935, 621, -909, 588);
      a.moveTo(-1105, 496);
      a.quadraticCurveTo(-1127,
        524, -1149, 590);
      a.lineTo(-1151, 601);
      a.lineTo(-1103, 614);
      a.lineTo(-1107, 623);
      a.quadraticCurveTo(-1122, 664, -1124, 692);
      a.moveTo(-2176, 244);
      a.lineTo(-2354, 351);
      a.moveTo(-2384, 721);
      a.quadraticCurveTo(-2236, 672, -2092, 638);
      a.moveTo(-1744, 668);
      a.lineTo(-1727, 586);
      a.lineTo(-1723, 577);
      a.lineTo(-1910, 601);
      a.moveTo(-1964, 107);
      a.quadraticCurveTo(-2025, 141, -2082, 185);
      a.moveTo(-1685, 478);
      a.quadraticCurveTo(-1704, 511, -1723, 577);
      a.lineTo(-1477, 564);
      a.moveTo(-2444, 401);
      a.quadraticCurveTo(-2534, 450, -2607, 483);
      a.lineTo(-2634,
        496);
      a.moveTo(-2719, 530);
      a.lineTo(-2836, 577);
      a.quadraticCurveTo(-2858, 579, -2892, 599);
      a.moveTo(-2992, 638);
      a.quadraticCurveTo(-3003, 636, -3026, 648);
      a.lineTo(-3172, 687);
      a.moveTo(-2904, 892);
      a.lineTo(-2715, 823);
      a.lineTo(-2687, 814);
      a.quadraticCurveTo(-2684, 776, -2645, 698);
      a.moveTo(-2565, 848);
      a.lineTo(-2550, 779);
      a.lineTo(-2548, 773);
      a.lineTo(-2687, 814);
      a.quadraticCurveTo(-2685, 818, -2686, 820);
      a.lineTo(-2677, 871);
      a.moveTo(-2509, 694);
      a.lineTo(-2548, 773);
      a.lineTo(-2500, 758);
      a.moveTo(-3343, 724);
      a.lineTo(-3561, 742);
      a.moveTo(-3639, 745);
      a.quadraticCurveTo(-3654, 740, -3680, 745);
      a.quadraticCurveTo(-3772, 721, -3864, 664);
      a.moveTo(-4270, 265);
      a.lineTo(-4337, 190);
      a.quadraticCurveTo(-4469, 67, -4573, -89);
      a.moveTo(-4463, 1552);
      a.lineTo(-4353, 1704);
      a.moveTo(-4235, 1831);
      a.quadraticCurveTo(-4153, 1905, -4074, 1961);
      a.moveTo(-3936, 598);
      a.lineTo(-4182, 356);
      a.moveTo(-5174, 6);
      a.lineTo(-5111, 259);
      a.moveTo(-5065, 389);
      a.quadraticCurveTo(-5023, 524, -4969, 650);
      a.moveTo(-3943, 2044);
      a.lineTo(-3808, 2108);
      a.moveTo(-3713, 2143);
      a.lineTo(-3620, 2167);
      a.lineTo(-3554, 2184);
      a.moveTo(-3488, 2196);
      a.lineTo(-3402, 2213);
      a.moveTo(-4888, 841);
      a.quadraticCurveTo(-4837, 961, -4782, 1063);
      a.moveTo(-3301, 1048);
      a.quadraticCurveTo(-3157, 998, -3008, 934)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4713);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-511, -1436);
      a.quadraticCurveTo(-578, -1436, -653, -1410);
      a.quadraticCurveTo(-750, -1377, -878, -1294);
      a.quadraticCurveTo(-1014, -1205, -1087, -1169);
      a.quadraticCurveTo(-1142, -1141, -1188, -1129);
      a.lineTo(-1195, -1127);
      a.quadraticCurveTo(-1384, -945, -1481, -700);
      a.quadraticCurveTo(-1678, -205, -1473, 277);
      a.quadraticCurveTo(-1521, 322, -1569, 348);
      a.quadraticCurveTo(-1611, 370, -1661, 383);
      a.lineTo(-1745, 466);
      a.lineTo(-1847, 564);
      a.quadraticCurveTo(-2008, 702, -2110, 702);
      a.quadraticCurveTo(-2111, 702, -2111, 702);
      a.lineTo(-2111, 702);
      a.quadraticCurveTo(-2018, 720, -1972, 803);
      a.quadraticCurveTo(-1935, 873, -1962, 1012);
      a.lineTo(-1964, 1023);
      a.lineTo(-1839, 1003);
      a.quadraticCurveTo(-1753, 1003, -1721, 1100);
      a.quadraticCurveTo(-1709, 1136, -1698, 1200);
      a.quadraticCurveTo(-1588,
        1171, -1445, 1052);
      a.quadraticCurveTo(-1315, 943, -1245, 847);
      a.quadraticCurveTo(-1218, 904, -1144, 1132);
      a.quadraticCurveTo(-1102, 1238, -1054, 1316);
      a.quadraticCurveTo(-949, 1384, -836, 1437);
      a.quadraticCurveTo(-716, 1494, -588, 1533);
      a.quadraticCurveTo(-310, 1620, -17, 1628);
      a.quadraticCurveTo(12, 1629, 41, 1629);
      a.quadraticCurveTo(299, 1629, 550, 1566);
      a.lineTo(561, 1563);
      a.quadraticCurveTo(702, 1521, 837, 1461);
      a.quadraticCurveTo(1086, 1133, 1238, 753);
      a.quadraticCurveTo(1389, 372, 1301, -51);
      a.quadraticCurveTo(1213, -476, 873, -608);
      a.quadraticCurveTo(873, -608, 873, -608);
      a.lineTo(873, -608);
      a.lineTo(566, -598);
      a.quadraticCurveTo(453, -589, 340, -589);
      a.quadraticCurveTo(43, -589, -245, -649);
      a.quadraticCurveTo(-664, -735, -809, -1138);
      a.quadraticCurveTo(-695, -1325, -506, -1436);
      a.quadraticCurveTo(-508, -1436, -511, -1436);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4713);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-1245, 847);
      a.quadraticCurveTo(-1315, 943, -1445, 1052);
      a.quadraticCurveTo(-1588, 1171, -1698, 1200);
      a.lineTo(-1687, 1276);
      a.quadraticCurveTo(-1643,
        1232, -1552, 1204);
      a.lineTo(-1396, 1163);
      a.lineTo(-1343, 1144);
      a.lineTo(-1303, 1122);
      a.quadraticCurveTo(-1213, 1206, -1113, 1275);
      a.lineTo(-1054, 1316);
      a.quadraticCurveTo(-1102, 1238, -1144, 1132);
      a.quadraticCurveTo(-1218, 904, -1245, 847);
      a.closePath();
      a.moveTo(203, -1627);
      a.quadraticCurveTo(-169, -1627, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.quadraticCurveTo(-664, -735, -245, -649);
      a.quadraticCurveTo(44, -589, 340, -589);
      a.quadraticCurveTo(452, -589, 566, -598);
      a.lineTo(873, -608);
      a.quadraticCurveTo(1213, -476, 1301, -51);
      a.quadraticCurveTo(1389, 372, 1238, 753);
      a.quadraticCurveTo(1086, 1133, 837, 1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275, 1221, 1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632, 1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.quadraticCurveTo(2028, 792, 1933, 741);
      a.quadraticCurveTo(2014, 696, 2103, 683);
      a.lineTo(2103, 672);
      a.quadraticCurveTo(1833, 633, 1624, 483);
      a.lineTo(1581, 451);
      a.lineTo(1585,
        439);
      a.quadraticCurveTo(1461, 297, 1434, 244);
      a.lineTo(1432, 240);
      a.quadraticCurveTo(1522, 18, 1560, -281);
      a.quadraticCurveTo(1610, -669, 1341, -1139);
      a.lineTo(1328, -1132);
      a.lineTo(1288, -1126);
      a.quadraticCurveTo(1217, -1126, 1135, -1201);
      a.quadraticCurveTo(1086, -1246, 1043, -1254);
      a.lineTo(1043, -1254);
      a.quadraticCurveTo(1043, -1254, 1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(295, -1627, 203, -1627);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4713);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1585, 439);
      a.lineTo(1624, 483);
      a.moveTo(2096, 874);
      a.lineTo(2111, 876);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(1073, -1208, 1097, -1155);
      a.quadraticCurveTo(1156, -1025, 1034, -893);
      a.moveTo(902, -694);
      a.quadraticCurveTo(924, -747, 959, -798);
      a.moveTo(936, -144);
      a.quadraticCurveTo(910, -212, 893, -271);
      a.moveTo(861, -426);
      a.quadraticCurveTo(856, -473, 859, -512);
      a.quadraticCurveTo(861, -559, 873, -608);
      a.moveTo(-809, -1138);
      a.lineTo(-816, -1126);
      a.quadraticCurveTo(-833, -1073, -838, -1018);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(-88, -1673, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.moveTo(1851, 861);
      a.lineTo(1739, 839);
      a.moveTo(1655, 816);
      a.lineTo(1639, 811);
      a.lineTo(1596, 798);
      a.moveTo(2096, 874);
      a.lineTo(1948, 868);
      a.moveTo(1581, 451);
      a.lineTo(1585, 439);
      a.moveTo(1117, 367);
      a.quadraticCurveTo(1104, 260, 1067, 158);
      a.moveTo(1540,
        828);
      a.lineTo(1545, 810);
      a.lineTo(1552, 783);
      a.lineTo(1574, 664);
      a.moveTo(1581, 451);
      a.lineTo(1581, 557);
      a.moveTo(1047, 885);
      a.quadraticCurveTo(1127, 668, 1124, 467);
      a.moveTo(561, 1563);
      a.lineTo(675, 1471);
      a.moveTo(1433, 1007);
      a.quadraticCurveTo(1485, 954, 1517, 889);
      a.moveTo(930, 1139);
      a.lineTo(1007, 984);
      a.moveTo(773, 1368);
      a.lineTo(858, 1257);
      a.moveTo(1021, 51);
      a.lineTo(974, -51);
      a.moveTo(-811, -775);
      a.lineTo(-831, -855);
      a.moveTo(-730, -579);
      a.quadraticCurveTo(-741, -617, -760, -654);
      a.lineTo(-766, -666);
      a.moveTo(-792, -126);
      a.quadraticCurveTo(-769, -183, -752, -242);
      a.moveTo(-736, -314);
      a.quadraticCurveTo(-725, -372, -720, -431);
      a.moveTo(-926, 49);
      a.lineTo(-903, 76);
      a.lineTo(-839, -27);
      a.moveTo(-982, 129);
      a.lineTo(-962, 156);
      a.lineTo(-940, 126);
      a.lineTo(-903, 76);
      a.lineTo(-897, 85);
      a.lineTo(-854, 145);
      a.moveTo(-962, 156);
      a.lineTo(-951, 168);
      a.lineTo(-894, 217);
      a.moveTo(-1062, 257);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1005, 215, -962, 156);
      a.moveTo(-974, 321);
      a.lineTo(-1022, 288);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1067, 349, -1083, 424);
      a.lineTo(-1077, 424);
      a.lineTo(-998, 425);
      a.moveTo(-1150, 465);
      a.lineTo(-1092, 471);
      a.lineTo(-1083, 424);
      a.lineTo(-1126, 417);
      a.moveTo(-1092, 471);
      a.lineTo(-982, 473);
      a.moveTo(-1385, 901);
      a.lineTo(-1419, 869);
      a.lineTo(-1445, 843);
      a.moveTo(-1517, 769);
      a.lineTo(-1559, 723);
      a.lineTo(-1581, 699);
      a.lineTo(-1592, 687);
      a.moveTo(-1059, 888);
      a.lineTo(-1087, 752);
      a.moveTo(-1092, 471);
      a.quadraticCurveTo(-1105, 553, -1100, 640);
      a.lineTo(-1093, 641);
      a.quadraticCurveTo(-1039, 646, -1014, 641);
      a.moveTo(-1098, 673);
      a.lineTo(-1100, 640);
      a.lineTo(-1150,
        633);
      a.moveTo(-977, 1143);
      a.lineTo(-1024, 1011);
      a.moveTo(-836, 1437);
      a.lineTo(-931, 1253);
      a.moveTo(-1236, 1019);
      a.lineTo(-1326, 952);
      a.moveTo(-1962, 1012);
      a.lineTo(-1801, 916);
      a.lineTo(-1777, 900);
      a.moveTo(-1644, 623);
      a.lineTo(-1697, 548);
      a.moveTo(-1710, 852);
      a.lineTo(-1662, 813);
      a.lineTo(-1595, 756);
      a.moveTo(-1720, 511);
      a.lineTo(-1745, 466)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4713);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin =
        "round";
      a.beginPath();
      a.moveTo(1333, -1153);
      a.lineTo(1341, -1139);
      a.quadraticCurveTo(1610, -669, 1560, -281);
      a.quadraticCurveTo(1522, 18, 1432, 240);
      a.moveTo(1624, 483);
      a.quadraticCurveTo(1833, 633, 2103, 672);
      a.lineTo(2103, 683);
      a.quadraticCurveTo(2014, 696, 1933, 741);
      a.quadraticCurveTo(2028, 792, 2096, 874);
      a.moveTo(837, 1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275, 1221, 1473, 1038);
      a.lineTo(1433, 1007);
      a.lineTo(1354, 938);
      a.moveTo(1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632,
        1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.moveTo(1432, 240);
      a.lineTo(1371, 372);
      a.moveTo(1581, 451);
      a.lineTo(1566, 438);
      a.moveTo(837, 1461);
      a.quadraticCurveTo(702, 1521, 561, 1563);
      a.lineTo(550, 1566);
      a.quadraticCurveTo(270, 1636, -17, 1628);
      a.quadraticCurveTo(-310, 1620, -588, 1533);
      a.quadraticCurveTo(-716, 1494, -836, 1437);
      a.quadraticCurveTo(-949, 1384, -1054, 1316);
      a.lineTo(-1113, 1275);
      a.quadraticCurveTo(-1213, 1206, -1303, 1122);
      a.lineTo(-1343,
        1144);
      a.lineTo(-1396, 1163);
      a.lineTo(-1552, 1204);
      a.quadraticCurveTo(-1643, 1232, -1687, 1276);
      a.lineTo(-1698, 1200);
      a.quadraticCurveTo(-1709, 1136, -1721, 1100);
      a.quadraticCurveTo(-1753, 1003, -1839, 1003);
      a.lineTo(-1964, 1023);
      a.lineTo(-1962, 1012);
      a.quadraticCurveTo(-1935, 873, -1972, 803);
      a.quadraticCurveTo(-2018, 720, -2111, 702);
      a.quadraticCurveTo(-2009, 703, -1847, 564);
      a.lineTo(-1745, 466);
      a.lineTo(-1661, 383);
      a.lineTo(-1630, 353);
      a.moveTo(1624, 483);
      a.lineTo(1581, 451);
      a.moveTo(-1473, 277);
      a.quadraticCurveTo(-1678, -205, -1481, -700);
      a.quadraticCurveTo(-1384, -945, -1195, -1127);
      a.moveTo(-1452, 325);
      a.lineTo(-1473, 277);
      a.moveTo(-1303, 1122);
      a.quadraticCurveTo(-1285, 1110, -1272, 1096);
      a.quadraticCurveTo(-1244, 1065, -1236, 1019);
      a.quadraticCurveTo(-1230, 986, -1235, 946)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4100);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(-1533, -1810);
      a.lineTo(-1556, -1763);
      a.quadraticCurveTo(-1589, -1690, -1604, -1603);
      a.quadraticCurveTo(-1634, -1434, -1628, -1259);
      a.quadraticCurveTo(-1624, -1128, -1578, -1017);
      a.quadraticCurveTo(-1534, -1127, -1506, -1266);
      a.quadraticCurveTo(-1478, -1406, -1483, -1522);
      a.quadraticCurveTo(-1488, -1638, -1501, -1699);
      a.lineTo(-1533, -1810);
      a.closePath();
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1768, -1635, 1734, -1473);
      a.quadraticCurveTo(1699, -1312, 1677, -1133);
      a.quadraticCurveTo(1655, -955, 1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.quadraticCurveTo(1795, -843, 1815, -911);
      a.quadraticCurveTo(1843, -1010, 1858, -1122);
      a.quadraticCurveTo(1871, -1221, 1872, -1344);
      a.lineTo(1869, -1428);
      a.lineTo(1859, -1535);
      a.lineTo(1858, -1547);
      a.lineTo(1851, -1595);
      a.quadraticCurveTo(1846, -1642, 1823, -1690);
      a.lineTo(1821, -1692);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4100);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(257, -3296);
      a.quadraticCurveTo(234, -3208, 234, -3032);
      a.quadraticCurveTo(234, -2810, 289, -2652);
      a.quadraticCurveTo(314, -2580, 404, -2402);
      a.lineTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(535, -2385);
      a.quadraticCurveTo(904, -2083, 985, -1597);
      a.quadraticCurveTo(1061, -1141, 982, -686);
      a.quadraticCurveTo(907, -252, 649, 108);
      a.quadraticCurveTo(489, 332, 278, 503);
      a.lineTo(294, 494);
      a.quadraticCurveTo(441, 412, 517, 344);
      a.lineTo(607, 265);
      a.lineTo(685, 215);
      a.quadraticCurveTo(760, 167, 902, 100);
      a.lineTo(903, 99);
      a.quadraticCurveTo(1045, 31, 1189, -109);
      a.lineTo(1197, -117);
      a.lineTo(1261, -184);
      a.lineTo(1294, -218);
      a.lineTo(1358, -293);
      a.quadraticCurveTo(1432, -377, 1482, -474);
      a.quadraticCurveTo(1524, -553, 1548, -641);
      a.lineTo(1563, -680);
      a.quadraticCurveTo(1582, -721, 1627, -728);
      a.lineTo(1706, -722);
      a.lineTo(1712, -725);
      a.quadraticCurveTo(1735, -742, 1743, -770);
      a.lineTo(1754, -811);
      a.lineTo(1754, -811);
      a.quadraticCurveTo(1734, -796, 1711, -789);
      a.lineTo(1665, -781);
      a.quadraticCurveTo(1663, -781, 1662, -781);
      a.quadraticCurveTo(1620, -781, 1589, -807);
      a.quadraticCurveTo(1541, -849, 1540, -985);
      a.quadraticCurveTo(1543, -1069, 1560, -1193);
      a.quadraticCurveTo(1577, -1318, 1596, -1408);
      a.lineTo(1616, -1514);
      a.lineTo(1658, -1645);
      a.quadraticCurveTo(1691, -1743, 1747, -1743);
      a.quadraticCurveTo(1752, -1743, 1757, -1742);
      a.quadraticCurveTo(1794, -1729, 1821, -1692);
      a.lineTo(1823, -1690);
      a.quadraticCurveTo(1831, -1776, 1821, -1809);
      a.lineTo(1786, -1888);
      a.quadraticCurveTo(1761, -1934, 1704, -1955);
      a.lineTo(1679, -1963);
      a.lineTo(1618, -1967);
      a.quadraticCurveTo(1492, -1830, 1429, -1653);
      a.lineTo(1402, -1578);
      a.quadraticCurveTo(1357, -1711, 1366, -1853);
      a.quadraticCurveTo(1370, -1912, 1400, -1962);
      a.quadraticCurveTo(1309, -1970, 1252, -2008);
      a.lineTo(1243, -2015);
      a.lineTo(1101, -2129);
      a.lineTo(987, -2219);
      a.quadraticCurveTo(939, -2253, 873, -2287);
      a.lineTo(833, -2328);
      a.quadraticCurveTo(730, -2436, 657, -2562);
      a.lineTo(581, -2696);
      a.quadraticCurveTo(534, -2779, 488, -2893);
      a.quadraticCurveTo(442, -3007, 429, -3077);
      a.lineTo(408, -3192);
      a.lineTo(401, -3237);
      a.quadraticCurveTo(394, -3288, 390, -3338);
      a.lineTo(389, -3343);
      a.lineTo(384, -3402);
      a.lineTo(383, -3430);
      a.lineTo(381, -3453);
      a.lineTo(377, -3479);
      a.lineTo(373, -3506);
      a.lineTo(370, -3529);
      a.lineTo(365, -3555);
      a.lineTo(355, -3594);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4100);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1579, -1967);
      a.lineTo(1505, -1963);
      a.lineTo(1497, -1963);
      a.quadraticCurveTo(1467, -1961, 1439, -1961);
      a.quadraticCurveTo(1418, -1961, 1400, -1962);
      a.quadraticCurveTo(1370, -1912, 1366, -1853);
      a.quadraticCurveTo(1357, -1711, 1402, -1578);
      a.lineTo(1429, -1653);
      a.quadraticCurveTo(1492, -1830, 1618, -1967);
      a.closePath();
      a.moveTo(278, -3664);
      a.lineTo(203, -3566);
      a.lineTo(149, -3489);
      a.lineTo(113, -3449);
      a.lineTo(68, -3405);
      a.lineTo(-1, -3314);
      a.lineTo(-2, -3313);
      a.lineTo(-62, -3219);
      a.lineTo(-111, -3132);
      a.lineTo(-158, -3050);
      a.lineTo(-216, -2952);
      a.lineTo(-249, -2898);
      a.lineTo(-284, -2842);
      a.lineTo(-322, -2782);
      a.lineTo(-354, -2731);
      a.lineTo(-388, -2681);
      a.lineTo(-422, -2631);
      a.lineTo(-481, -2551);
      a.lineTo(-535, -2479);
      a.lineTo(-601, -2397);
      a.lineTo(-678, -2306);
      a.lineTo(-721, -2256);
      a.quadraticCurveTo(-894, -2191, -1046, -2105);
      a.quadraticCurveTo(-1199, -2020, -1302, -1940);
      a.lineTo(-1349, -1966);
      a.quadraticCurveTo(-1397, -1994, -1433, -1994);
      a.quadraticCurveTo(-1474, -1994, -1500, -1957);
      a.quadraticCurveTo(-1498, -1920, -1482, -1886);
      a.lineTo(-1457, -1830);
      a.lineTo(-1454, -1823);
      a.lineTo(-1445, -1802);
      a.lineTo(-1440, -1790);
      a.quadraticCurveTo(-1418, -1735, -1406, -1676);
      a.quadraticCurveTo(-1331, -1314, -1496, -1018);
      a.lineTo(-1526, -969);
      a.lineTo(-1542, -945);
      a.lineTo(-1552, -931);
      a.quadraticCurveTo(-1553, -870, -1511, -841);
      a.quadraticCurveTo(-1500, -833, -1485, -833);
      a.quadraticCurveTo(-1465, -833, -1437, -848);
      a.quadraticCurveTo(-1339, -789, -1327, -697);
      a.quadraticCurveTo(-1315, -606, -1307, -485);
      a.quadraticCurveTo(-1299, -364, -1198, -222);
      a.quadraticCurveTo(-1097, -80, -1037, -7);
      a.quadraticCurveTo(-977,
        64, -857, 170);
      a.lineTo(-600, 393);
      a.quadraticCurveTo(-533, 451, -459, 490);
      a.quadraticCurveTo(-383, 529, -301, 548);
      a.quadraticCurveTo(-202, 571, -101, 571);
      a.quadraticCurveTo(-65, 571, -29, 568);
      a.quadraticCurveTo(-13, 569, 3, 569);
      a.quadraticCurveTo(151, 569, 278, 503);
      a.quadraticCurveTo(489, 332, 649, 108);
      a.quadraticCurveTo(907, -252, 982, -686);
      a.quadraticCurveTo(1061, -1141, 985, -1597);
      a.quadraticCurveTo(904, -2083, 535, -2385);
      a.lineTo(531, -2386);
      a.lineTo(404, -2402);
      a.quadraticCurveTo(314, -2580, 289, -2652);
      a.quadraticCurveTo(234, -2810, 234, -3032);
      a.quadraticCurveTo(234, -3208, 257, -3296);
      a.lineTo(355, -3594);
      a.lineTo(351, -3608);
      a.quadraticCurveTo(341, -3646, 278, -3664);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4100);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(-1482, -1886);
      a.quadraticCurveTo(-1511, -1851, -1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.lineTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.closePath();
      a.moveTo(1747, -1743);
      a.quadraticCurveTo(1691, -1743, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318, 1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1620, -781, 1662, -781);
      a.quadraticCurveTo(1664, -781, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1752, -1743, 1747, -1743);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4100);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(365, -3555);
      a.lineTo(370, -3529);
      a.lineTo(373, -3506);
      a.lineTo(377, -3479);
      a.lineTo(381, -3453);
      a.lineTo(383, -3430);
      a.lineTo(384, -3402);
      a.lineTo(389, -3343);
      a.lineTo(390, -3338);
      a.quadraticCurveTo(394, -3288, 401, -3237);
      a.lineTo(408, -3192);
      a.lineTo(429, -3077);
      a.quadraticCurveTo(442, -3007, 488, -2893);
      a.quadraticCurveTo(534, -2779, 581, -2696);
      a.lineTo(657, -2562);
      a.quadraticCurveTo(730, -2436, 833, -2328);
      a.lineTo(873, -2287);
      a.quadraticCurveTo(939, -2253, 987, -2219);
      a.lineTo(1101, -2129);
      a.lineTo(1243, -2015);
      a.lineTo(1252, -2008);
      a.quadraticCurveTo(1309, -1970, 1400, -1962);
      a.quadraticCurveTo(1444, -1959, 1497, -1963);
      a.lineTo(1505, -1963);
      a.lineTo(1579, -1967);
      a.lineTo(1618, -1967);
      a.lineTo(1679, -1963);
      a.lineTo(1704, -1955);
      a.quadraticCurveTo(1761, -1934, 1786, -1888);
      a.lineTo(1821, -1809);
      a.quadraticCurveTo(1831, -1776, 1823, -1690);
      a.quadraticCurveTo(1846, -1642, 1851, -1595);
      a.lineTo(1858, -1547);
      a.lineTo(1859, -1535);
      a.lineTo(1869, -1428);
      a.lineTo(1872, -1344);
      a.quadraticCurveTo(1871, -1221, 1858, -1122);
      a.quadraticCurveTo(1843, -1010, 1815, -911);
      a.quadraticCurveTo(1795, -843, 1754, -811);
      a.lineTo(1743, -770);
      a.quadraticCurveTo(1735, -742, 1712, -725);
      a.lineTo(1706, -722);
      a.lineTo(1627, -728);
      a.quadraticCurveTo(1582, -721, 1563, -680);
      a.lineTo(1548, -641);
      a.quadraticCurveTo(1524, -553, 1482, -474);
      a.quadraticCurveTo(1432, -377, 1358, -293);
      a.lineTo(1294, -218);
      a.lineTo(1261, -184);
      a.lineTo(1197, -117);
      a.lineTo(1189, -109);
      a.quadraticCurveTo(1045, 31, 903, 99);
      a.moveTo(902, 100);
      a.quadraticCurveTo(760, 167, 685, 215);
      a.lineTo(607, 265);
      a.lineTo(517, 344);
      a.quadraticCurveTo(441, 412, 294, 494);
      a.lineTo(278,
        503);
      a.quadraticCurveTo(137, 576, -29, 568);
      a.quadraticCurveTo(-167, 579, -301, 548);
      a.quadraticCurveTo(-383, 529, -459, 490);
      a.quadraticCurveTo(-533, 451, -600, 393);
      a.lineTo(-857, 170);
      a.quadraticCurveTo(-977, 64, -1037, -7);
      a.quadraticCurveTo(-1097, -80, -1198, -222);
      a.quadraticCurveTo(-1299, -364, -1307, -485);
      a.quadraticCurveTo(-1315, -606, -1327, -697);
      a.quadraticCurveTo(-1339, -789, -1437, -848);
      a.quadraticCurveTo(-1485, -823, -1511, -841);
      a.quadraticCurveTo(-1553, -870, -1552, -931);
      a.lineTo(-1542, -945);
      a.lineTo(-1578, -1017);
      a.quadraticCurveTo(-1624, -1128, -1628, -1259);
      a.quadraticCurveTo(-1634, -1434, -1604, -1603);
      a.quadraticCurveTo(-1589, -1690, -1556, -1763);
      a.lineTo(-1533, -1810);
      a.quadraticCurveTo(-1511, -1851, -1482, -1886);
      a.quadraticCurveTo(-1498, -1920, -1500, -1957);
      a.quadraticCurveTo(-1452, -2026, -1349, -1966);
      a.lineTo(-1302, -1940);
      a.quadraticCurveTo(-1199, -2020, -1046, -2105);
      a.quadraticCurveTo(-894, -2191, -721, -2256);
      a.lineTo(-678, -2306);
      a.lineTo(-601, -2397);
      a.lineTo(-535, -2479);
      a.lineTo(-481, -2551);
      a.lineTo(-422, -2631);
      a.lineTo(-388, -2681);
      a.lineTo(-354, -2731);
      a.lineTo(-322, -2782);
      a.lineTo(-284, -2842);
      a.lineTo(-249, -2898);
      a.lineTo(-216, -2952);
      a.lineTo(-158, -3050);
      a.lineTo(-111, -3132);
      a.lineTo(-62, -3219);
      a.lineTo(-2, -3313);
      a.lineTo(-1, -3314);
      a.lineTo(68, -3405);
      a.lineTo(113, -3449);
      a.lineTo(149, -3489);
      a.lineTo(203, -3566);
      a.lineTo(278, -3664);
      a.quadraticCurveTo(341, -3646, 351, -3608);
      a.lineTo(355, -3594);
      a.moveTo(404, -2402);
      a.lineTo(531, -2386);
      a.moveTo(404, -2402);
      a.lineTo(303, -2408);
      a.moveTo(535, -2385);
      a.lineTo(604, -2373);
      a.lineTo(705, -2350);
      a.quadraticCurveTo(788, -2328, 843, -2301);
      a.lineTo(873, -2287);
      a.moveTo(531, -2386);
      a.lineTo(535, -2385);
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1694, -1751, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318, 1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1621, -780, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.closePath();
      a.moveTo(1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.moveTo(-420, -2347);
      a.quadraticCurveTo(-568, -2313, -721, -2256);
      a.moveTo(-420, -2347);
      a.lineTo(-382, -2355);
      a.quadraticCurveTo(-215, -2390, -44, -2398);
      a.moveTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.moveTo(-1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.moveTo(-1302, -1940);
      a.quadraticCurveTo(-1237, -1897, -1172, -1831);
      a.moveTo(-1373, -895);
      a.quadraticCurveTo(-1409, -864, -1437, -848)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4100);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(903,
        99);
      a.lineTo(902, 100);
      a.moveTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(488, -2488);
      a.moveTo(390, -3338);
      a.quadraticCurveTo(368, -3290, 354, -3242);
      a.moveTo(33, -3088);
      a.lineTo(33, -3128);
      a.lineTo(30, -3177);
      a.moveTo(335, -3159);
      a.quadraticCurveTo(327, -3115, 326, -3071);
      a.moveTo(424, -2649);
      a.lineTo(452, -2577);
      a.moveTo(363, -2815);
      a.lineTo(370, -2795);
      a.lineTo(393, -2732);
      a.moveTo(705, -2350);
      a.lineTo(790, -2265);
      a.moveTo(856, -2190);
      a.lineTo(898, -2140);
      a.moveTo(328, -2981);
      a.lineTo(341, -2898);
      a.moveTo(11, -2889);
      a.lineTo(29, -3013);
      a.moveTo(1164, -1579);
      a.lineTo(1204, -1591);
      a.lineTo(1208, -1591);
      a.quadraticCurveTo(1158, -1743, 1076, -1882);
      a.lineTo(1068, -1895);
      a.moveTo(1310, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1263, -1363);
      a.lineTo(1280, -1237);
      a.lineTo(1307, -1244);
      a.lineTo(1359, -1258);
      a.moveTo(1211, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1239, -1483);
      a.lineTo(1218, -1481);
      a.lineTo(1179, -1475);
      a.moveTo(1347, -1087);
      a.lineTo(1290, -1083);
      a.lineTo(1291, -998);
      a.lineTo(1324, -998);
      a.moveTo(1239, -998);
      a.lineTo(1291, -998);
      a.lineTo(1289, -938);
      a.lineTo(1343, -941);
      a.moveTo(1234, -1083);
      a.lineTo(1276, -1083);
      a.lineTo(1290, -1083);
      a.lineTo(1287, -1146);
      a.lineTo(1280, -1237);
      a.lineTo(1229, -1220);
      a.moveTo(1291, -1594);
      a.lineTo(1208, -1591);
      a.lineTo(1239, -1483);
      a.lineTo(1315, -1485);
      a.moveTo(1234, -938);
      a.lineTo(1246, -938);
      a.lineTo(1289, -938);
      a.lineTo(1284, -855);
      a.moveTo(1334, -683);
      a.lineTo(1264, -689);
      a.lineTo(1253, -630);
      a.moveTo(1206, -703);
      a.lineTo(1249, -693);
      a.lineTo(1264, -689);
      a.lineTo(1275, -761);
      a.moveTo(1281, -476);
      a.lineTo(1214, -476);
      a.lineTo(1204, -445);
      a.moveTo(1159, -490);
      a.lineTo(1191, -479);
      a.lineTo(1214, -476);
      a.lineTo(1233, -543);
      a.moveTo(1161, -336);
      a.lineTo(1147, -306);
      a.quadraticCurveTo(1045, -100, 903, 99);
      a.moveTo(958, -2062);
      a.lineTo(1015, -1979);
      a.moveTo(-55, -2701);
      a.lineTo(-33, -2747);
      a.lineTo(-15, -2791);
      a.moveTo(-160, -2552);
      a.quadraticCurveTo(-124, -2592, -95, -2635);
      a.moveTo(-801, -2035);
      a.lineTo(-771, -2068);
      a.lineTo(-710, -2127);
      a.moveTo(-540, -2261);
      a.lineTo(-420, -2347);
      a.moveTo(-653, -2174);
      a.lineTo(-600, -2217);
      a.moveTo(-369, -2375);
      a.lineTo(-316, -2412);
      a.moveTo(-273, -2445);
      a.lineTo(-208, -2502);
      a.moveTo(-1250, -769);
      a.quadraticCurveTo(-1301, -970, -1270, -1196);
      a.quadraticCurveTo(-1251, -1332, -1185, -1487);
      a.lineTo(-1152, -1557);
      a.moveTo(-1082, -1679);
      a.lineTo(-997, -1800);
      a.lineTo(-857, -1972);
      a.moveTo(-1188, -588);
      a.lineTo(-1182, -573);
      a.quadraticCurveTo(-1161, -588, -1140, -590);
      a.moveTo(-1045, -462);
      a.quadraticCurveTo(-1079, -455, -1116, -429);
      a.lineTo(-1117, -428);
      a.lineTo(-1094, -380);
      a.lineTo(-1091, -382);
      a.lineTo(-1031, -415);
      a.moveTo(-1158, -391);
      a.quadraticCurveTo(-1148, -408, -1117, -428);
      a.lineTo(-1139, -474);
      a.lineTo(-1143, -472);
      a.lineTo(-1182, -443);
      a.moveTo(-1067, -328);
      a.lineTo(-1094, -380);
      a.quadraticCurveTo(-1115, -368, -1122, -360);
      a.moveTo(-1182, -573);
      a.lineTo(-1139, -474);
      a.quadraticCurveTo(-1103, -498, -1073, -508);
      a.moveTo(-1182, -573);
      a.lineTo(-1218, -540);
      a.moveTo(-684, 238);
      a.lineTo(-790, 107);
      a.moveTo(-459, 490);
      a.lineTo(-627, 305);
      a.moveTo(21, -3237);
      a.lineTo(-1, -3314);
      a.moveTo(-849, 29);
      a.lineTo(-933, -93)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4100);
      a.fillStyle =
        "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 60;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1821, -1692);
      a.lineTo(1823, -1690)
    }]
  }
}

function make_baby_5(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
        a.transform(-0.49, 0, 0, 0.48, 6058, 4414);
        a.fillStyle = c;
        a.beginPath();
        a.moveTo(-2531, 3049);
        a.lineTo(-2423, 3096);
        a.quadraticCurveTo(-2369, 3216, -2295, 3330);
        a.quadraticCurveTo(-2208, 3461, -2102, 3577);
        a.lineTo(-2102, 3867);
        a.quadraticCurveTo(-2076, 3952, -2072, 4045);
        a.quadraticCurveTo(-2066, 4163, -2094, 4274);
        a.lineTo(-2132, 4208);
        a.quadraticCurveTo(-2267, 3966, -2327, 3702);
        a.lineTo(-2531, 3049);
        a.closePath();
        a.moveTo(-788, -995);
        a.quadraticCurveTo(-981, -938, -1178, -888);
        a.quadraticCurveTo(-1862, -720, -2298, -161);
        a.quadraticCurveTo(-2734, 399, -2877, 1089);
        a.quadraticCurveTo(-3018, 1771, -2972, 2463);
        a.quadraticCurveTo(-2925, 3166, -2593, 3789);
        a.quadraticCurveTo(-2267, 4399, -1720, 4818);
        a.lineTo(-1653, 4868);
        a.quadraticCurveTo(-1807, 4561, -1856, 4219);
        a.quadraticCurveTo(-1955, 3532, -1935, 2836);
        a.quadraticCurveTo(-1929, 2612, -1877, 2395);
        a.lineTo(-1848, 2304);
        a.lineTo(-1715, 1917);
        a.lineTo(-1714, 1914);
        a.lineTo(-1677, 1805);
        a.lineTo(-1625, 1653);
        a.quadraticCurveTo(-1510,
          1363, -1291, 1135);
        a.lineTo(-1258, 1103);
        a.lineTo(-1254, 1099);
        a.lineTo(-1249, 1099);
        a.quadraticCurveTo(-957, 862, -638, 671);
        a.quadraticCurveTo(-435, 106, -914, -248);
        a.quadraticCurveTo(-981, -299, -1023, -378);
        a.lineTo(-1023, -378);
        a.lineTo(-908, -355);
        a.lineTo(-903, -354);
        a.lineTo(-824, -338);
        a.lineTo(-820, -347);
        a.lineTo(-604, -348);
        a.quadraticCurveTo(-835, -521, -813, -807);
        a.quadraticCurveTo(-806, -902, -788, -995);
        a.closePath()
      }, function(a) {
        a.transform(-0.49, 0, 0, 0.48, 6058, 4414);
        a.fillStyle = b;
        a.beginPath();
        a.moveTo(94, -1333);
        a.lineTo(97, -1317);
        a.lineTo(79, -1301);
        a.quadraticCurveTo(-341, -1128, -788, -995);
        a.quadraticCurveTo(-806, -902, -813, -807);
        a.quadraticCurveTo(-835, -521, -604, -348);
        a.lineTo(-820, -347);
        a.lineTo(-824, -338);
        a.lineTo(-903, -354);
        a.lineTo(-908, -355);
        a.lineTo(-1023, -378);
        a.lineTo(-1023, -378);
        a.quadraticCurveTo(-981, -299, -914, -248);
        a.quadraticCurveTo(-435, 106, -638, 671);
        a.quadraticCurveTo(-957, 862, -1249, 1099);
        a.lineTo(-1254, 1099);
        a.lineTo(-1258, 1103);
        a.lineTo(-1291, 1135);
        a.quadraticCurveTo(-1510, 1363, -1625,
          1653);
        a.lineTo(-1677, 1805);
        a.lineTo(-1714, 1914);
        a.lineTo(-1715, 1917);
        a.lineTo(-1848, 2304);
        a.lineTo(-1877, 2395);
        a.quadraticCurveTo(-1929, 2612, -1935, 2836);
        a.quadraticCurveTo(-1955, 3532, -1856, 4219);
        a.lineTo(-1850, 3879);
        a.quadraticCurveTo(-1840, 3232, -1730, 2599);
        a.quadraticCurveTo(-1608, 1892, -1093, 1397);
        a.quadraticCurveTo(-652, 972, -71, 972);
        a.quadraticCurveTo(51, 972, 180, 991);
        a.lineTo(180, 992);
        a.quadraticCurveTo(321, 287, 316, -427);
        a.quadraticCurveTo(312, -886, 124, -1303);
        a.lineTo(124, -1305);
        a.lineTo(115, -1313);
        a.lineTo(117, -1315);
        a.lineTo(109, -1320);
        a.lineTo(101, -1328);
        a.lineTo(94, -1333);
        a.closePath();
        a.moveTo(-2531, 3049);
        a.lineTo(-2327, 3702);
        a.quadraticCurveTo(-2267, 3966, -2132, 4208);
        a.lineTo(-2094, 4274);
        a.quadraticCurveTo(-2066, 4163, -2072, 4045);
        a.quadraticCurveTo(-2076, 3952, -2102, 3867);
        a.lineTo(-2102, 3577);
        a.quadraticCurveTo(-2208, 3461, -2295, 3330);
        a.quadraticCurveTo(-2369, 3216, -2423, 3096);
        a.lineTo(-2531, 3049);
        a.closePath()
      }, function(a) {
        a.transform(-0.49, 0, 0, 0.48, 6058, 4414);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 40;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(97, -1317);
        a.lineTo(112, -1316);
        a.lineTo(101, -1327);
        a.lineTo(97, -1317);
        a.closePath();
        a.moveTo(97, -1317);
        a.lineTo(94, -1333);
        a.lineTo(101, -1328);
        a.moveTo(117, -1315);
        a.lineTo(124, -1305);
        a.lineTo(124, -1303);
        a.quadraticCurveTo(312, -886, 316, -427);
        a.quadraticCurveTo(321, 287, 180, 992);
        a.moveTo(180, 991);
        a.quadraticCurveTo(-559, 882, -1093, 1397);
        a.quadraticCurveTo(-1608, 1892, -1730,
          2599);
        a.quadraticCurveTo(-1840, 3232, -1850, 3879);
        a.lineTo(-1856, 4219);
        a.quadraticCurveTo(-1807, 4561, -1653, 4868);
        a.lineTo(-1720, 4818);
        a.quadraticCurveTo(-2267, 4399, -2593, 3789);
        a.quadraticCurveTo(-2925, 3166, -2972, 2463);
        a.quadraticCurveTo(-3018, 1771, -2877, 1089);
        a.quadraticCurveTo(-2734, 399, -2298, -161);
        a.quadraticCurveTo(-1862, -720, -1178, -888);
        a.quadraticCurveTo(-981, -938, -788, -995);
        a.quadraticCurveTo(-341, -1128, 79, -1301);
        a.lineTo(97, -1317);
        a.moveTo(101, -1327);
        a.lineTo(101, -1328);
        a.lineTo(100, -1327);
        a.lineTo(101, -1327);
        a.closePath();
        a.moveTo(97, -1329);
        a.lineTo(100, -1327);
        a.moveTo(124, -1303);
        a.lineTo(114, -1314);
        a.lineTo(112, -1316);
        a.lineTo(113, -1316);
        a.lineTo(109, -1320);
        a.moveTo(114, -1314);
        a.lineTo(113, -1316);
        a.lineTo(115, -1313);
        a.lineTo(117, -1315);
        a.moveTo(124, -1305);
        a.lineTo(115, -1313);
        a.lineTo(114, -1314);
        a.moveTo(-2327, 3702);
        a.lineTo(-2102, 3867);
        a.lineTo(-2102, 3577);
        a.quadraticCurveTo(-2208, 3461, -2295, 3330);
        a.quadraticCurveTo(-2369, 3216, -2423, 3096);
        a.lineTo(-2531, 3049);
        a.lineTo(-2327, 3702);
        a.closePath();
        a.moveTo(-2327, 3702);
        a.quadraticCurveTo(-2267, 3966, -2132, 4208);
        a.lineTo(-2094, 4274);
        a.quadraticCurveTo(-2066, 4163, -2072, 4045);
        a.quadraticCurveTo(-2076, 3952, -2102, 3867)
      }, function(a) {
        a.transform(-0.49, 0, 0, 0.48, 6058, 4414);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 28.57;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(101, -1328);
        a.lineTo(109, -1320);
        a.lineTo(117, -1315);
        a.moveTo(94, -1333);
        a.lineTo(97, -1329);
        a.moveTo(-2086, -172);
        a.quadraticCurveTo(-2059, -235, -2020, -285);
        a.moveTo(-1868, -412);
        a.lineTo(-1781, -449);
        a.lineTo(-1752, -480);
        a.moveTo(-1409, -738);
        a.lineTo(-1165, -787);
        a.moveTo(-1023, -378);
        a.lineTo(-1030, -380);
        a.moveTo(-1035, -802);
        a.lineTo(-837, -800);
        a.moveTo(-1848, 2304);
        a.lineTo(-1877, 2395);
        a.moveTo(-908, -355);
        a.lineTo(-1023, -378);
        a.moveTo(-820, -347);
        a.lineTo(-824, -338);
        a.lineTo(-903, -354);
        a.moveTo(-476, -69);
        a.lineTo(-630, -226);
        a.moveTo(-766, -502);
        a.lineTo(-820, -347);
        a.moveTo(-1164, -387);
        a.lineTo(-1626, -312);
        a.moveTo(-1631, -611);
        a.lineTo(-1574, -673);
        a.moveTo(-155, 446);
        a.lineTo(-155, 375);
        a.lineTo(-169, 351);
        a.lineTo(-170, 397);
        a.moveTo(-202, 345);
        a.lineTo(-202, 299);
        a.lineTo(-169, 351);
        a.moveTo(-274, 194);
        a.lineTo(-361, 70);
        a.lineTo(-362, 167);
        a.moveTo(-2429, 278);
        a.lineTo(-2375, 178);
        a.moveTo(-2529, 617);
        a.quadraticCurveTo(-2518, 544, -2500, 476);
        a.moveTo(-2661, 894);
        a.lineTo(-2598, 728);
        a.moveTo(-2807, 1542);
        a.lineTo(-2785, 1385);
        a.moveTo(-2828, 1806);
        a.lineTo(-2824, 1730);
        a.moveTo(-2744, 1182);
        a.lineTo(-2715, 1070);
        a.moveTo(-1963, 2707);
        a.lineTo(-1993, 2943);
        a.moveTo(-2830, 2112);
        a.lineTo(-2832, 2025);
        a.moveTo(-1978, 3535);
        a.lineTo(-1961, 3778);
        a.moveTo(-1997, 3124);
        a.lineTo(-1990, 3400);
        a.moveTo(-2246, 2);
        a.lineTo(-2183, -63)
      }, function(a) {
        a.transform(0.48, 0, 0, 0.48, 4959, 4414);
        a.fillStyle = c;
        a.beginPath();
        a.moveTo(-2531, 3049);
        a.lineTo(-2423, 3096);
        a.quadraticCurveTo(-2369, 3216, -2295, 3330);
        a.quadraticCurveTo(-2208, 3461, -2102, 3577);
        a.lineTo(-2102, 3867);
        a.quadraticCurveTo(-2076, 3952, -2072, 4045);
        a.quadraticCurveTo(-2066, 4163, -2094, 4274);
        a.lineTo(-2132, 4208);
        a.quadraticCurveTo(-2267,
          3966, -2327, 3702);
        a.lineTo(-2531, 3049);
        a.closePath();
        a.moveTo(-788, -995);
        a.quadraticCurveTo(-981, -938, -1178, -888);
        a.quadraticCurveTo(-1862, -720, -2298, -161);
        a.quadraticCurveTo(-2734, 399, -2877, 1089);
        a.quadraticCurveTo(-3018, 1771, -2972, 2463);
        a.quadraticCurveTo(-2925, 3166, -2593, 3789);
        a.quadraticCurveTo(-2267, 4399, -1720, 4818);
        a.lineTo(-1653, 4868);
        a.quadraticCurveTo(-1807, 4561, -1856, 4219);
        a.quadraticCurveTo(-1955, 3532, -1935, 2836);
        a.quadraticCurveTo(-1929, 2612, -1877, 2395);
        a.lineTo(-1848, 2304);
        a.lineTo(-1715,
          1917);
        a.lineTo(-1714, 1914);
        a.lineTo(-1677, 1805);
        a.lineTo(-1625, 1653);
        a.quadraticCurveTo(-1510, 1363, -1291, 1135);
        a.lineTo(-1258, 1103);
        a.lineTo(-1254, 1099);
        a.lineTo(-1249, 1099);
        a.quadraticCurveTo(-957, 862, -638, 671);
        a.quadraticCurveTo(-435, 106, -914, -248);
        a.quadraticCurveTo(-981, -299, -1023, -378);
        a.lineTo(-1023, -378);
        a.lineTo(-908, -355);
        a.lineTo(-903, -354);
        a.lineTo(-824, -338);
        a.lineTo(-820, -347);
        a.lineTo(-604, -348);
        a.quadraticCurveTo(-835, -521, -813, -807);
        a.quadraticCurveTo(-806, -902, -788, -995);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 4959, 4414);
        a.fillStyle = b;
        a.beginPath();
        a.moveTo(94, -1333);
        a.lineTo(97, -1317);
        a.lineTo(79, -1301);
        a.quadraticCurveTo(-341, -1128, -788, -995);
        a.quadraticCurveTo(-806, -902, -813, -807);
        a.quadraticCurveTo(-835, -521, -604, -348);
        a.lineTo(-820, -347);
        a.lineTo(-824, -338);
        a.lineTo(-903, -354);
        a.lineTo(-908, -355);
        a.lineTo(-1023, -378);
        a.lineTo(-1023, -378);
        a.quadraticCurveTo(-981, -299, -914, -248);
        a.quadraticCurveTo(-435, 106, -638, 671);
        a.quadraticCurveTo(-957, 862, -1249, 1099);
        a.lineTo(-1254,
          1099);
        a.lineTo(-1258, 1103);
        a.lineTo(-1291, 1135);
        a.quadraticCurveTo(-1510, 1363, -1625, 1653);
        a.lineTo(-1677, 1805);
        a.lineTo(-1714, 1914);
        a.lineTo(-1715, 1917);
        a.lineTo(-1848, 2304);
        a.lineTo(-1877, 2395);
        a.quadraticCurveTo(-1929, 2612, -1935, 2836);
        a.quadraticCurveTo(-1955, 3532, -1856, 4219);
        a.lineTo(-1850, 3879);
        a.quadraticCurveTo(-1840, 3232, -1730, 2599);
        a.quadraticCurveTo(-1608, 1892, -1093, 1397);
        a.quadraticCurveTo(-652, 972, -71, 972);
        a.quadraticCurveTo(51, 972, 180, 991);
        a.lineTo(180, 992);
        a.quadraticCurveTo(321, 287,
          316, -427);
        a.quadraticCurveTo(312, -886, 124, -1303);
        a.lineTo(124, -1305);
        a.lineTo(115, -1313);
        a.lineTo(117, -1315);
        a.lineTo(109, -1320);
        a.lineTo(101, -1328);
        a.lineTo(94, -1333);
        a.closePath();
        a.moveTo(-2531, 3049);
        a.lineTo(-2327, 3702);
        a.quadraticCurveTo(-2267, 3966, -2132, 4208);
        a.lineTo(-2094, 4274);
        a.quadraticCurveTo(-2066, 4163, -2072, 4045);
        a.quadraticCurveTo(-2076, 3952, -2102, 3867);
        a.lineTo(-2102, 3577);
        a.quadraticCurveTo(-2208, 3461, -2295, 3330);
        a.quadraticCurveTo(-2369, 3216, -2423, 3096);
        a.lineTo(-2531, 3049);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 4959, 4414);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 40;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(97, -1317);
        a.lineTo(112, -1316);
        a.lineTo(101, -1327);
        a.lineTo(97, -1317);
        a.closePath();
        a.moveTo(97, -1317);
        a.lineTo(94, -1333);
        a.lineTo(101, -1328);
        a.moveTo(117, -1315);
        a.lineTo(124, -1305);
        a.lineTo(124, -1303);
        a.quadraticCurveTo(312, -886, 316, -427);
        a.quadraticCurveTo(321, 287, 180, 992);
        a.moveTo(180,
          991);
        a.quadraticCurveTo(-559, 882, -1093, 1397);
        a.quadraticCurveTo(-1608, 1892, -1730, 2599);
        a.quadraticCurveTo(-1840, 3232, -1850, 3879);
        a.lineTo(-1856, 4219);
        a.quadraticCurveTo(-1807, 4561, -1653, 4868);
        a.lineTo(-1720, 4818);
        a.quadraticCurveTo(-2267, 4399, -2593, 3789);
        a.quadraticCurveTo(-2925, 3166, -2972, 2463);
        a.quadraticCurveTo(-3018, 1771, -2877, 1089);
        a.quadraticCurveTo(-2734, 399, -2298, -161);
        a.quadraticCurveTo(-1862, -720, -1178, -888);
        a.quadraticCurveTo(-981, -938, -788, -995);
        a.quadraticCurveTo(-341, -1128, 79, -1301);
        a.lineTo(97, -1317);
        a.moveTo(101, -1327);
        a.lineTo(101, -1328);
        a.lineTo(100, -1327);
        a.lineTo(101, -1327);
        a.closePath();
        a.moveTo(97, -1329);
        a.lineTo(100, -1327);
        a.moveTo(124, -1303);
        a.lineTo(114, -1314);
        a.lineTo(112, -1316);
        a.lineTo(113, -1316);
        a.lineTo(109, -1320);
        a.moveTo(114, -1314);
        a.lineTo(113, -1316);
        a.lineTo(115, -1313);
        a.lineTo(117, -1315);
        a.moveTo(124, -1305);
        a.lineTo(115, -1313);
        a.lineTo(114, -1314);
        a.moveTo(-2327, 3702);
        a.lineTo(-2102, 3867);
        a.lineTo(-2102, 3577);
        a.quadraticCurveTo(-2208, 3461, -2295, 3330);
        a.quadraticCurveTo(-2369,
          3216, -2423, 3096);
        a.lineTo(-2531, 3049);
        a.lineTo(-2327, 3702);
        a.closePath();
        a.moveTo(-2327, 3702);
        a.quadraticCurveTo(-2267, 3966, -2132, 4208);
        a.lineTo(-2094, 4274);
        a.quadraticCurveTo(-2066, 4163, -2072, 4045);
        a.quadraticCurveTo(-2076, 3952, -2102, 3867)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 4959, 4414);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 28.57;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(101, -1328);
        a.lineTo(109, -1320);
        a.lineTo(117, -1315);
        a.moveTo(94, -1333);
        a.lineTo(97, -1329);
        a.moveTo(-2086, -172);
        a.quadraticCurveTo(-2059, -235, -2020, -285);
        a.moveTo(-1868, -412);
        a.lineTo(-1781, -449);
        a.lineTo(-1752, -480);
        a.moveTo(-1409, -738);
        a.lineTo(-1165, -787);
        a.moveTo(-1023, -378);
        a.lineTo(-1030, -380);
        a.moveTo(-1035, -802);
        a.lineTo(-837, -800);
        a.moveTo(-1848, 2304);
        a.lineTo(-1877, 2395);
        a.moveTo(-908, -355);
        a.lineTo(-1023, -378);
        a.moveTo(-820, -347);
        a.lineTo(-824, -338);
        a.lineTo(-903, -354);
        a.moveTo(-476, -69);
        a.lineTo(-630, -226);
        a.moveTo(-766, -502);
        a.lineTo(-820, -347);
        a.moveTo(-1164, -387);
        a.lineTo(-1626, -312);
        a.moveTo(-1631, -611);
        a.lineTo(-1574, -673);
        a.moveTo(-155, 446);
        a.lineTo(-155, 375);
        a.lineTo(-169, 351);
        a.lineTo(-170, 397);
        a.moveTo(-202, 345);
        a.lineTo(-202, 299);
        a.lineTo(-169, 351);
        a.moveTo(-274, 194);
        a.lineTo(-361, 70);
        a.lineTo(-362, 167);
        a.moveTo(-2429, 278);
        a.lineTo(-2375, 178);
        a.moveTo(-2529, 617);
        a.quadraticCurveTo(-2518, 544, -2500, 476);
        a.moveTo(-2661, 894);
        a.lineTo(-2598, 728);
        a.moveTo(-2807, 1542);
        a.lineTo(-2785, 1385);
        a.moveTo(-2828, 1806);
        a.lineTo(-2824, 1730);
        a.moveTo(-2744, 1182);
        a.lineTo(-2715, 1070);
        a.moveTo(-1963, 2707);
        a.lineTo(-1993, 2943);
        a.moveTo(-2830, 2112);
        a.lineTo(-2832, 2025);
        a.moveTo(-1978, 3535);
        a.lineTo(-1961, 3778);
        a.moveTo(-1997, 3124);
        a.lineTo(-1990, 3400);
        a.moveTo(-2246, 2);
        a.lineTo(-2183, -63)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5460, 4587);
        a.fillStyle = c;
        a.beginPath();
        a.moveTo(-511, -1436);
        a.quadraticCurveTo(-578, -1436, -653, -1410);
        a.quadraticCurveTo(-750, -1377, -878, -1294);
        a.quadraticCurveTo(-1014, -1205, -1087, -1169);
        a.quadraticCurveTo(-1142, -1141, -1188, -1129);
        a.lineTo(-1195, -1127);
        a.quadraticCurveTo(-1384, -945, -1481, -700);
        a.quadraticCurveTo(-1678, -205, -1473, 277);
        a.quadraticCurveTo(-1521, 322, -1569, 348);
        a.quadraticCurveTo(-1611, 370, -1661, 383);
        a.lineTo(-1745, 466);
        a.lineTo(-1847, 564);
        a.quadraticCurveTo(-2008, 702, -2110, 702);
        a.quadraticCurveTo(-2111, 702, -2111, 702);
        a.lineTo(-2111, 702);
        a.quadraticCurveTo(-2018, 720, -1972, 803);
        a.quadraticCurveTo(-1935, 873, -1962, 1012);
        a.lineTo(-1964, 1023);
        a.lineTo(-1839, 1003);
        a.quadraticCurveTo(-1753, 1003, -1721, 1100);
        a.quadraticCurveTo(-1709, 1136, -1698, 1200);
        a.quadraticCurveTo(-1588, 1171, -1445, 1052);
        a.quadraticCurveTo(-1315, 943, -1245, 847);
        a.quadraticCurveTo(-1218, 904, -1144, 1132);
        a.quadraticCurveTo(-1102, 1238, -1054, 1316);
        a.quadraticCurveTo(-949, 1384, -836, 1437);
        a.quadraticCurveTo(-716, 1494, -588, 1533);
        a.quadraticCurveTo(-310, 1620, -17, 1628);
        a.quadraticCurveTo(12, 1629, 41, 1629);
        a.quadraticCurveTo(299, 1629, 550, 1566);
        a.lineTo(561, 1563);
        a.quadraticCurveTo(702, 1521, 837, 1461);
        a.quadraticCurveTo(1086, 1133, 1238, 753);
        a.quadraticCurveTo(1389,
          372, 1301, -51);
        a.quadraticCurveTo(1213, -476, 873, -608);
        a.quadraticCurveTo(873, -608, 873, -608);
        a.lineTo(873, -608);
        a.lineTo(566, -598);
        a.quadraticCurveTo(453, -589, 340, -589);
        a.quadraticCurveTo(43, -589, -245, -649);
        a.quadraticCurveTo(-664, -735, -809, -1138);
        a.quadraticCurveTo(-695, -1325, -506, -1436);
        a.quadraticCurveTo(-508, -1436, -511, -1436);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5460, 4587);
        a.fillStyle = b;
        a.beginPath();
        a.moveTo(-1245, 847);
        a.quadraticCurveTo(-1315, 943, -1445, 1052);
        a.quadraticCurveTo(-1588,
          1171, -1698, 1200);
        a.lineTo(-1687, 1276);
        a.quadraticCurveTo(-1643, 1232, -1552, 1204);
        a.lineTo(-1396, 1163);
        a.lineTo(-1343, 1144);
        a.lineTo(-1303, 1122);
        a.quadraticCurveTo(-1213, 1206, -1113, 1275);
        a.lineTo(-1054, 1316);
        a.quadraticCurveTo(-1102, 1238, -1144, 1132);
        a.quadraticCurveTo(-1218, 904, -1245, 847);
        a.closePath();
        a.moveTo(203, -1627);
        a.quadraticCurveTo(-169, -1627, -498, -1441);
        a.lineTo(-506, -1436);
        a.quadraticCurveTo(-695, -1325, -809, -1138);
        a.quadraticCurveTo(-664, -735, -245, -649);
        a.quadraticCurveTo(44, -589, 340, -589);
        a.quadraticCurveTo(452, -589, 566, -598);
        a.lineTo(873, -608);
        a.quadraticCurveTo(1213, -476, 1301, -51);
        a.quadraticCurveTo(1389, 372, 1238, 753);
        a.quadraticCurveTo(1086, 1133, 837, 1461);
        a.quadraticCurveTo(941, 1414, 1041, 1357);
        a.quadraticCurveTo(1275, 1221, 1473, 1038);
        a.lineTo(1504, 1060);
        a.quadraticCurveTo(1571, 1105, 1632, 1125);
        a.lineTo(1768, 1171);
        a.quadraticCurveTo(1752, 1058, 1868, 1011);
        a.quadraticCurveTo(1984, 963, 2097, 875);
        a.lineTo(2096, 874);
        a.quadraticCurveTo(2028, 792, 1933, 741);
        a.quadraticCurveTo(2014, 696, 2103, 683);
        a.lineTo(2103, 672);
        a.quadraticCurveTo(1833, 633, 1624, 483);
        a.lineTo(1581, 451);
        a.lineTo(1585, 439);
        a.quadraticCurveTo(1461, 297, 1434, 244);
        a.lineTo(1432, 240);
        a.quadraticCurveTo(1522, 18, 1560, -281);
        a.quadraticCurveTo(1610, -669, 1341, -1139);
        a.lineTo(1328, -1132);
        a.lineTo(1288, -1126);
        a.quadraticCurveTo(1217, -1126, 1135, -1201);
        a.quadraticCurveTo(1086, -1246, 1043, -1254);
        a.lineTo(1043, -1254);
        a.quadraticCurveTo(1043, -1254, 1043, -1254);
        a.quadraticCurveTo(845, -1562, 389, -1616);
        a.quadraticCurveTo(295, -1627, 203, -1627);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5460, 4587);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 28.57;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(1585, 439);
        a.lineTo(1624, 483);
        a.moveTo(2096, 874);
        a.lineTo(2111, 876);
        a.moveTo(1043, -1254);
        a.quadraticCurveTo(1073, -1208, 1097, -1155);
        a.quadraticCurveTo(1156, -1025, 1034, -893);
        a.moveTo(902, -694);
        a.quadraticCurveTo(924, -747, 959, -798);
        a.moveTo(936, -144);
        a.quadraticCurveTo(910, -212, 893, -271);
        a.moveTo(861, -426);
        a.quadraticCurveTo(856, -473, 859, -512);
        a.quadraticCurveTo(861, -559, 873, -608);
        a.moveTo(-809, -1138);
        a.lineTo(-816, -1126);
        a.quadraticCurveTo(-833, -1073, -838, -1018);
        a.moveTo(1043, -1254);
        a.quadraticCurveTo(845, -1562, 389, -1616);
        a.quadraticCurveTo(-88, -1673, -498, -1441);
        a.lineTo(-506, -1436);
        a.quadraticCurveTo(-695, -1325, -809, -1138);
        a.moveTo(1851, 861);
        a.lineTo(1739, 839);
        a.moveTo(1655, 816);
        a.lineTo(1639, 811);
        a.lineTo(1596, 798);
        a.moveTo(2096, 874);
        a.lineTo(1948, 868);
        a.moveTo(1581, 451);
        a.lineTo(1585,
          439);
        a.moveTo(1117, 367);
        a.quadraticCurveTo(1104, 260, 1067, 158);
        a.moveTo(1540, 828);
        a.lineTo(1545, 810);
        a.lineTo(1552, 783);
        a.lineTo(1574, 664);
        a.moveTo(1581, 451);
        a.lineTo(1581, 557);
        a.moveTo(1047, 885);
        a.quadraticCurveTo(1127, 668, 1124, 467);
        a.moveTo(561, 1563);
        a.lineTo(675, 1471);
        a.moveTo(1433, 1007);
        a.quadraticCurveTo(1485, 954, 1517, 889);
        a.moveTo(930, 1139);
        a.lineTo(1007, 984);
        a.moveTo(773, 1368);
        a.lineTo(858, 1257);
        a.moveTo(1021, 51);
        a.lineTo(974, -51);
        a.moveTo(-811, -775);
        a.lineTo(-831, -855);
        a.moveTo(-730, -579);
        a.quadraticCurveTo(-741, -617, -760, -654);
        a.lineTo(-766, -666);
        a.moveTo(-792, -126);
        a.quadraticCurveTo(-769, -183, -752, -242);
        a.moveTo(-736, -314);
        a.quadraticCurveTo(-725, -372, -720, -431);
        a.moveTo(-926, 49);
        a.lineTo(-903, 76);
        a.lineTo(-839, -27);
        a.moveTo(-982, 129);
        a.lineTo(-962, 156);
        a.lineTo(-940, 126);
        a.lineTo(-903, 76);
        a.lineTo(-897, 85);
        a.lineTo(-854, 145);
        a.moveTo(-962, 156);
        a.lineTo(-951, 168);
        a.lineTo(-894, 217);
        a.moveTo(-1062, 257);
        a.lineTo(-1034, 279);
        a.quadraticCurveTo(-1005, 215, -962, 156);
        a.moveTo(-974, 321);
        a.lineTo(-1022, 288);
        a.lineTo(-1034, 279);
        a.quadraticCurveTo(-1067, 349, -1083, 424);
        a.lineTo(-1077, 424);
        a.lineTo(-998, 425);
        a.moveTo(-1150, 465);
        a.lineTo(-1092, 471);
        a.lineTo(-1083, 424);
        a.lineTo(-1126, 417);
        a.moveTo(-1092, 471);
        a.lineTo(-982, 473);
        a.moveTo(-1385, 901);
        a.lineTo(-1419, 869);
        a.lineTo(-1445, 843);
        a.moveTo(-1517, 769);
        a.lineTo(-1559, 723);
        a.lineTo(-1581, 699);
        a.lineTo(-1592, 687);
        a.moveTo(-1059, 888);
        a.lineTo(-1087, 752);
        a.moveTo(-1092, 471);
        a.quadraticCurveTo(-1105, 553, -1100, 640);
        a.lineTo(-1093, 641);
        a.quadraticCurveTo(-1039,
          646, -1014, 641);
        a.moveTo(-1098, 673);
        a.lineTo(-1100, 640);
        a.lineTo(-1150, 633);
        a.moveTo(-977, 1143);
        a.lineTo(-1024, 1011);
        a.moveTo(-836, 1437);
        a.lineTo(-931, 1253);
        a.moveTo(-1236, 1019);
        a.lineTo(-1326, 952);
        a.moveTo(-1962, 1012);
        a.lineTo(-1801, 916);
        a.lineTo(-1777, 900);
        a.moveTo(-1644, 623);
        a.lineTo(-1697, 548);
        a.moveTo(-1710, 852);
        a.lineTo(-1662, 813);
        a.lineTo(-1595, 756);
        a.moveTo(-1720, 511);
        a.lineTo(-1745, 466)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5460, 4587);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 40;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(1333, -1153);
        a.lineTo(1341, -1139);
        a.quadraticCurveTo(1610, -669, 1560, -281);
        a.quadraticCurveTo(1522, 18, 1432, 240);
        a.moveTo(1624, 483);
        a.quadraticCurveTo(1833, 633, 2103, 672);
        a.lineTo(2103, 683);
        a.quadraticCurveTo(2014, 696, 1933, 741);
        a.quadraticCurveTo(2028, 792, 2096, 874);
        a.moveTo(837, 1461);
        a.quadraticCurveTo(941, 1414, 1041, 1357);
        a.quadraticCurveTo(1275, 1221, 1473, 1038);
        a.lineTo(1433, 1007);
        a.lineTo(1354,
          938);
        a.moveTo(1473, 1038);
        a.lineTo(1504, 1060);
        a.quadraticCurveTo(1571, 1105, 1632, 1125);
        a.lineTo(1768, 1171);
        a.quadraticCurveTo(1752, 1058, 1868, 1011);
        a.quadraticCurveTo(1984, 963, 2097, 875);
        a.lineTo(2096, 874);
        a.moveTo(1432, 240);
        a.lineTo(1371, 372);
        a.moveTo(1581, 451);
        a.lineTo(1566, 438);
        a.moveTo(837, 1461);
        a.quadraticCurveTo(702, 1521, 561, 1563);
        a.lineTo(550, 1566);
        a.quadraticCurveTo(270, 1636, -17, 1628);
        a.quadraticCurveTo(-310, 1620, -588, 1533);
        a.quadraticCurveTo(-716, 1494, -836, 1437);
        a.quadraticCurveTo(-949, 1384, -1054, 1316);
        a.lineTo(-1113, 1275);
        a.quadraticCurveTo(-1213, 1206, -1303, 1122);
        a.lineTo(-1343, 1144);
        a.lineTo(-1396, 1163);
        a.lineTo(-1552, 1204);
        a.quadraticCurveTo(-1643, 1232, -1687, 1276);
        a.lineTo(-1698, 1200);
        a.quadraticCurveTo(-1709, 1136, -1721, 1100);
        a.quadraticCurveTo(-1753, 1003, -1839, 1003);
        a.lineTo(-1964, 1023);
        a.lineTo(-1962, 1012);
        a.quadraticCurveTo(-1935, 873, -1972, 803);
        a.quadraticCurveTo(-2018, 720, -2111, 702);
        a.quadraticCurveTo(-2009, 703, -1847, 564);
        a.lineTo(-1745, 466);
        a.lineTo(-1661, 383);
        a.lineTo(-1630,
          353);
        a.moveTo(1624, 483);
        a.lineTo(1581, 451);
        a.moveTo(-1473, 277);
        a.quadraticCurveTo(-1678, -205, -1481, -700);
        a.quadraticCurveTo(-1384, -945, -1195, -1127);
        a.moveTo(-1452, 325);
        a.lineTo(-1473, 277);
        a.moveTo(-1303, 1122);
        a.quadraticCurveTo(-1285, 1110, -1272, 1096);
        a.quadraticCurveTo(-1244, 1065, -1236, 1019);
        a.quadraticCurveTo(-1230, 986, -1235, 946)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4065);
        a.fillStyle = "rgba(0,0,0,1.000)";
        a.beginPath();
        a.moveTo(-1533, -1810);
        a.lineTo(-1556, -1763);
        a.quadraticCurveTo(-1589, -1690, -1604, -1603);
        a.quadraticCurveTo(-1634, -1434, -1628, -1259);
        a.quadraticCurveTo(-1624, -1128, -1578, -1017);
        a.quadraticCurveTo(-1534, -1127, -1506, -1266);
        a.quadraticCurveTo(-1478, -1406, -1483, -1522);
        a.quadraticCurveTo(-1488, -1638, -1501, -1699);
        a.lineTo(-1533, -1810);
        a.closePath();
        a.moveTo(1821, -1692);
        a.quadraticCurveTo(1768, -1635, 1734, -1473);
        a.quadraticCurveTo(1699, -1312, 1677, -1133);
        a.quadraticCurveTo(1655, -955, 1665, -781);
        a.lineTo(1711, -789);
        a.quadraticCurveTo(1734, -796, 1754, -811);
        a.quadraticCurveTo(1795, -843,
          1815, -911);
        a.quadraticCurveTo(1843, -1010, 1858, -1122);
        a.quadraticCurveTo(1871, -1221, 1872, -1344);
        a.lineTo(1869, -1428);
        a.lineTo(1859, -1535);
        a.lineTo(1858, -1547);
        a.lineTo(1851, -1595);
        a.quadraticCurveTo(1846, -1642, 1823, -1690);
        a.lineTo(1821, -1692);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4065);
        a.fillStyle = b;
        a.beginPath();
        a.moveTo(355, -3594);
        a.lineTo(257, -3296);
        a.quadraticCurveTo(234, -3208, 234, -3032);
        a.quadraticCurveTo(234, -2810, 289, -2652);
        a.quadraticCurveTo(314, -2580, 404, -2402);
        a.lineTo(531, -2386);
        a.lineTo(530, -2389);
        a.lineTo(535, -2385);
        a.quadraticCurveTo(904, -2083, 985, -1597);
        a.quadraticCurveTo(1061, -1141, 982, -686);
        a.quadraticCurveTo(907, -252, 649, 108);
        a.quadraticCurveTo(489, 332, 278, 503);
        a.lineTo(294, 494);
        a.quadraticCurveTo(441, 412, 517, 344);
        a.lineTo(607, 265);
        a.lineTo(685, 215);
        a.quadraticCurveTo(760, 167, 902, 100);
        a.lineTo(903, 99);
        a.quadraticCurveTo(1045, 31, 1189, -109);
        a.lineTo(1197, -117);
        a.lineTo(1261, -184);
        a.lineTo(1294, -218);
        a.lineTo(1358, -293);
        a.quadraticCurveTo(1432, -377, 1482, -474);
        a.quadraticCurveTo(1524, -553, 1548, -641);
        a.lineTo(1563, -680);
        a.quadraticCurveTo(1582, -721, 1627, -728);
        a.lineTo(1706, -722);
        a.lineTo(1712, -725);
        a.quadraticCurveTo(1735, -742, 1743, -770);
        a.lineTo(1754, -811);
        a.lineTo(1754, -811);
        a.quadraticCurveTo(1734, -796, 1711, -789);
        a.lineTo(1665, -781);
        a.quadraticCurveTo(1663, -781, 1662, -781);
        a.quadraticCurveTo(1620, -781, 1589, -807);
        a.quadraticCurveTo(1541, -849, 1540, -985);
        a.quadraticCurveTo(1543, -1069, 1560, -1193);
        a.quadraticCurveTo(1577, -1318, 1596, -1408);
        a.lineTo(1616, -1514);
        a.lineTo(1658, -1645);
        a.quadraticCurveTo(1691, -1743, 1747, -1743);
        a.quadraticCurveTo(1752, -1743, 1757, -1742);
        a.quadraticCurveTo(1794, -1729, 1821, -1692);
        a.lineTo(1823, -1690);
        a.quadraticCurveTo(1831, -1776, 1821, -1809);
        a.lineTo(1786, -1888);
        a.quadraticCurveTo(1761, -1934, 1704, -1955);
        a.lineTo(1679, -1963);
        a.lineTo(1618, -1967);
        a.quadraticCurveTo(1492, -1830, 1429, -1653);
        a.lineTo(1402, -1578);
        a.quadraticCurveTo(1357, -1711, 1366, -1853);
        a.quadraticCurveTo(1370, -1912, 1400, -1962);
        a.quadraticCurveTo(1309, -1970, 1252, -2008);
        a.lineTo(1243, -2015);
        a.lineTo(1101, -2129);
        a.lineTo(987, -2219);
        a.quadraticCurveTo(939, -2253, 873, -2287);
        a.lineTo(833, -2328);
        a.quadraticCurveTo(730, -2436, 657, -2562);
        a.lineTo(581, -2696);
        a.quadraticCurveTo(534, -2779, 488, -2893);
        a.quadraticCurveTo(442, -3007, 429, -3077);
        a.lineTo(408, -3192);
        a.lineTo(401, -3237);
        a.quadraticCurveTo(394, -3288, 390, -3338);
        a.lineTo(389, -3343);
        a.lineTo(384, -3402);
        a.lineTo(383, -3430);
        a.lineTo(381, -3453);
        a.lineTo(377, -3479);
        a.lineTo(373, -3506);
        a.lineTo(370, -3529);
        a.lineTo(365, -3555);
        a.lineTo(355, -3594);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4065);
        a.fillStyle = c;
        a.beginPath();
        a.moveTo(1579, -1967);
        a.lineTo(1505, -1963);
        a.lineTo(1497, -1963);
        a.quadraticCurveTo(1467, -1961, 1439, -1961);
        a.quadraticCurveTo(1418, -1961, 1400, -1962);
        a.quadraticCurveTo(1370, -1912, 1366, -1853);
        a.quadraticCurveTo(1357, -1711, 1402, -1578);
        a.lineTo(1429, -1653);
        a.quadraticCurveTo(1492, -1830, 1618, -1967);
        a.closePath();
        a.moveTo(278, -3664);
        a.lineTo(203, -3566);
        a.lineTo(149, -3489);
        a.lineTo(113, -3449);
        a.lineTo(68, -3405);
        a.lineTo(-1, -3314);
        a.lineTo(-2, -3313);
        a.lineTo(-62, -3219);
        a.lineTo(-111, -3132);
        a.lineTo(-158, -3050);
        a.lineTo(-216, -2952);
        a.lineTo(-249, -2898);
        a.lineTo(-284, -2842);
        a.lineTo(-322, -2782);
        a.lineTo(-354, -2731);
        a.lineTo(-388, -2681);
        a.lineTo(-422, -2631);
        a.lineTo(-481, -2551);
        a.lineTo(-535, -2479);
        a.lineTo(-601, -2397);
        a.lineTo(-678, -2306);
        a.lineTo(-721, -2256);
        a.quadraticCurveTo(-894, -2191, -1046, -2105);
        a.quadraticCurveTo(-1199, -2020, -1302, -1940);
        a.lineTo(-1349, -1966);
        a.quadraticCurveTo(-1397, -1994, -1433, -1994);
        a.quadraticCurveTo(-1474, -1994, -1500, -1957);
        a.quadraticCurveTo(-1498, -1920, -1482, -1886);
        a.lineTo(-1457, -1830);
        a.lineTo(-1454, -1823);
        a.lineTo(-1445, -1802);
        a.lineTo(-1440, -1790);
        a.quadraticCurveTo(-1418, -1735, -1406, -1676);
        a.quadraticCurveTo(-1331, -1314, -1496, -1018);
        a.lineTo(-1526, -969);
        a.lineTo(-1542, -945);
        a.lineTo(-1552, -931);
        a.quadraticCurveTo(-1553, -870, -1511, -841);
        a.quadraticCurveTo(-1500, -833, -1485, -833);
        a.quadraticCurveTo(-1465, -833, -1437, -848);
        a.quadraticCurveTo(-1339, -789, -1327, -697);
        a.quadraticCurveTo(-1315, -606, -1307, -485);
        a.quadraticCurveTo(-1299, -364, -1198, -222);
        a.quadraticCurveTo(-1097, -80, -1037, -7);
        a.quadraticCurveTo(-977, 64, -857, 170);
        a.lineTo(-600, 393);
        a.quadraticCurveTo(-533, 451, -459, 490);
        a.quadraticCurveTo(-383, 529, -301, 548);
        a.quadraticCurveTo(-202, 571, -101, 571);
        a.quadraticCurveTo(-65, 571, -29, 568);
        a.quadraticCurveTo(-13, 569, 3, 569);
        a.quadraticCurveTo(151, 569, 278, 503);
        a.quadraticCurveTo(489, 332, 649, 108);
        a.quadraticCurveTo(907, -252, 982, -686);
        a.quadraticCurveTo(1061, -1141,
          985, -1597);
        a.quadraticCurveTo(904, -2083, 535, -2385);
        a.lineTo(531, -2386);
        a.lineTo(404, -2402);
        a.quadraticCurveTo(314, -2580, 289, -2652);
        a.quadraticCurveTo(234, -2810, 234, -3032);
        a.quadraticCurveTo(234, -3208, 257, -3296);
        a.lineTo(355, -3594);
        a.lineTo(351, -3608);
        a.quadraticCurveTo(341, -3646, 278, -3664);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4065);
        a.fillStyle = "rgba(255,255,255,1.000)";
        a.beginPath();
        a.moveTo(-1482, -1886);
        a.quadraticCurveTo(-1511, -1851, -1533, -1810);
        a.lineTo(-1501, -1699);
        a.quadraticCurveTo(-1488, -1638, -1483, -1522);
        a.quadraticCurveTo(-1478, -1406, -1506, -1266);
        a.quadraticCurveTo(-1534, -1127, -1578, -1017);
        a.lineTo(-1542, -945);
        a.lineTo(-1526, -969);
        a.lineTo(-1496, -1018);
        a.quadraticCurveTo(-1331, -1314, -1406, -1676);
        a.quadraticCurveTo(-1418, -1735, -1440, -1790);
        a.lineTo(-1445, -1802);
        a.lineTo(-1454, -1823);
        a.lineTo(-1457, -1830);
        a.lineTo(-1482, -1886);
        a.closePath();
        a.moveTo(1747, -1743);
        a.quadraticCurveTo(1691, -1743, 1658, -1645);
        a.lineTo(1616, -1514);
        a.lineTo(1596, -1408);
        a.quadraticCurveTo(1577, -1318, 1560, -1193);
        a.quadraticCurveTo(1543, -1069, 1540, -985);
        a.quadraticCurveTo(1541, -849, 1589, -807);
        a.quadraticCurveTo(1620, -781, 1662, -781);
        a.quadraticCurveTo(1664, -781, 1665, -781);
        a.quadraticCurveTo(1655, -955, 1677, -1133);
        a.quadraticCurveTo(1699, -1312, 1734, -1473);
        a.quadraticCurveTo(1768, -1635, 1821, -1692);
        a.quadraticCurveTo(1794, -1729, 1757, -1742);
        a.quadraticCurveTo(1752, -1743, 1747, -1743);
        a.closePath()
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4065);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle =
          "rgba(0,0,0,1.000)";
        a.lineWidth = 40;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(355, -3594);
        a.lineTo(365, -3555);
        a.lineTo(370, -3529);
        a.lineTo(373, -3506);
        a.lineTo(377, -3479);
        a.lineTo(381, -3453);
        a.lineTo(383, -3430);
        a.lineTo(384, -3402);
        a.lineTo(389, -3343);
        a.lineTo(390, -3338);
        a.quadraticCurveTo(394, -3288, 401, -3237);
        a.lineTo(408, -3192);
        a.lineTo(429, -3077);
        a.quadraticCurveTo(442, -3007, 488, -2893);
        a.quadraticCurveTo(534, -2779, 581, -2696);
        a.lineTo(657, -2562);
        a.quadraticCurveTo(730, -2436, 833, -2328);
        a.lineTo(873, -2287);
        a.quadraticCurveTo(939, -2253, 987, -2219);
        a.lineTo(1101, -2129);
        a.lineTo(1243, -2015);
        a.lineTo(1252, -2008);
        a.quadraticCurveTo(1309, -1970, 1400, -1962);
        a.quadraticCurveTo(1444, -1959, 1497, -1963);
        a.lineTo(1505, -1963);
        a.lineTo(1579, -1967);
        a.lineTo(1618, -1967);
        a.lineTo(1679, -1963);
        a.lineTo(1704, -1955);
        a.quadraticCurveTo(1761, -1934, 1786, -1888);
        a.lineTo(1821, -1809);
        a.quadraticCurveTo(1831, -1776, 1823, -1690);
        a.quadraticCurveTo(1846, -1642, 1851, -1595);
        a.lineTo(1858, -1547);
        a.lineTo(1859, -1535);
        a.lineTo(1869, -1428);
        a.lineTo(1872, -1344);
        a.quadraticCurveTo(1871, -1221, 1858, -1122);
        a.quadraticCurveTo(1843, -1010, 1815, -911);
        a.quadraticCurveTo(1795, -843, 1754, -811);
        a.lineTo(1743, -770);
        a.quadraticCurveTo(1735, -742, 1712, -725);
        a.lineTo(1706, -722);
        a.lineTo(1627, -728);
        a.quadraticCurveTo(1582, -721, 1563, -680);
        a.lineTo(1548, -641);
        a.quadraticCurveTo(1524, -553, 1482, -474);
        a.quadraticCurveTo(1432, -377, 1358, -293);
        a.lineTo(1294, -218);
        a.lineTo(1261, -184);
        a.lineTo(1197, -117);
        a.lineTo(1189, -109);
        a.quadraticCurveTo(1045,
          31, 903, 99);
        a.moveTo(902, 100);
        a.quadraticCurveTo(760, 167, 685, 215);
        a.lineTo(607, 265);
        a.lineTo(517, 344);
        a.quadraticCurveTo(441, 412, 294, 494);
        a.lineTo(278, 503);
        a.quadraticCurveTo(137, 576, -29, 568);
        a.quadraticCurveTo(-167, 579, -301, 548);
        a.quadraticCurveTo(-383, 529, -459, 490);
        a.quadraticCurveTo(-533, 451, -600, 393);
        a.lineTo(-857, 170);
        a.quadraticCurveTo(-977, 64, -1037, -7);
        a.quadraticCurveTo(-1097, -80, -1198, -222);
        a.quadraticCurveTo(-1299, -364, -1307, -485);
        a.quadraticCurveTo(-1315, -606, -1327, -697);
        a.quadraticCurveTo(-1339, -789, -1437, -848);
        a.quadraticCurveTo(-1485, -823, -1511, -841);
        a.quadraticCurveTo(-1553, -870, -1552, -931);
        a.lineTo(-1542, -945);
        a.lineTo(-1578, -1017);
        a.quadraticCurveTo(-1624, -1128, -1628, -1259);
        a.quadraticCurveTo(-1634, -1434, -1604, -1603);
        a.quadraticCurveTo(-1589, -1690, -1556, -1763);
        a.lineTo(-1533, -1810);
        a.quadraticCurveTo(-1511, -1851, -1482, -1886);
        a.quadraticCurveTo(-1498, -1920, -1500, -1957);
        a.quadraticCurveTo(-1452, -2026, -1349, -1966);
        a.lineTo(-1302, -1940);
        a.quadraticCurveTo(-1199, -2020, -1046, -2105);
        a.quadraticCurveTo(-894, -2191, -721, -2256);
        a.lineTo(-678, -2306);
        a.lineTo(-601, -2397);
        a.lineTo(-535, -2479);
        a.lineTo(-481, -2551);
        a.lineTo(-422, -2631);
        a.lineTo(-388, -2681);
        a.lineTo(-354, -2731);
        a.lineTo(-322, -2782);
        a.lineTo(-284, -2842);
        a.lineTo(-249, -2898);
        a.lineTo(-216, -2952);
        a.lineTo(-158, -3050);
        a.lineTo(-111, -3132);
        a.lineTo(-62, -3219);
        a.lineTo(-2, -3313);
        a.lineTo(-1, -3314);
        a.lineTo(68, -3405);
        a.lineTo(113, -3449);
        a.lineTo(149, -3489);
        a.lineTo(203, -3566);
        a.lineTo(278, -3664);
        a.quadraticCurveTo(341, -3646, 351, -3608);
        a.lineTo(355, -3594);
        a.moveTo(404, -2402);
        a.lineTo(531, -2386);
        a.moveTo(404, -2402);
        a.lineTo(303, -2408);
        a.moveTo(535, -2385);
        a.lineTo(604, -2373);
        a.lineTo(705, -2350);
        a.quadraticCurveTo(788, -2328, 843, -2301);
        a.lineTo(873, -2287);
        a.moveTo(531, -2386);
        a.lineTo(535, -2385);
        a.moveTo(1821, -1692);
        a.quadraticCurveTo(1794, -1729, 1757, -1742);
        a.quadraticCurveTo(1694, -1751, 1658, -1645);
        a.lineTo(1616, -1514);
        a.lineTo(1596, -1408);
        a.quadraticCurveTo(1577, -1318, 1560, -1193);
        a.quadraticCurveTo(1543, -1069, 1540, -985);
        a.quadraticCurveTo(1541, -849, 1589, -807);
        a.quadraticCurveTo(1621, -780, 1665, -781);
        a.quadraticCurveTo(1655, -955, 1677, -1133);
        a.quadraticCurveTo(1699, -1312, 1734, -1473);
        a.quadraticCurveTo(1768, -1635, 1821, -1692);
        a.closePath();
        a.moveTo(1665, -781);
        a.lineTo(1711, -789);
        a.quadraticCurveTo(1734, -796, 1754, -811);
        a.moveTo(-420, -2347);
        a.quadraticCurveTo(-568, -2313, -721, -2256);
        a.moveTo(-420, -2347);
        a.lineTo(-382, -2355);
        a.quadraticCurveTo(-215, -2390, -44, -2398);
        a.moveTo(-1542, -945);
        a.lineTo(-1526, -969);
        a.lineTo(-1496, -1018);
        a.quadraticCurveTo(-1331, -1314, -1406, -1676);
        a.quadraticCurveTo(-1418, -1735, -1440, -1790);
        a.lineTo(-1445, -1802);
        a.lineTo(-1454, -1823);
        a.lineTo(-1457, -1830);
        a.lineTo(-1482, -1886);
        a.moveTo(-1533, -1810);
        a.lineTo(-1501, -1699);
        a.quadraticCurveTo(-1488, -1638, -1483, -1522);
        a.quadraticCurveTo(-1478, -1406, -1506, -1266);
        a.quadraticCurveTo(-1534, -1127, -1578, -1017);
        a.moveTo(-1302, -1940);
        a.quadraticCurveTo(-1237, -1897, -1172, -1831);
        a.moveTo(-1373, -895);
        a.quadraticCurveTo(-1409, -864, -1437, -848)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4065);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 28.57;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(903, 99);
        a.lineTo(902, 100);
        a.moveTo(531, -2386);
        a.lineTo(530, -2389);
        a.lineTo(488, -2488);
        a.moveTo(390, -3338);
        a.quadraticCurveTo(368, -3290, 354, -3242);
        a.moveTo(33, -3088);
        a.lineTo(33, -3128);
        a.lineTo(30, -3177);
        a.moveTo(335, -3159);
        a.quadraticCurveTo(327, -3115, 326, -3071);
        a.moveTo(424, -2649);
        a.lineTo(452, -2577);
        a.moveTo(363, -2815);
        a.lineTo(370, -2795);
        a.lineTo(393, -2732);
        a.moveTo(705, -2350);
        a.lineTo(790, -2265);
        a.moveTo(856, -2190);
        a.lineTo(898, -2140);
        a.moveTo(328, -2981);
        a.lineTo(341, -2898);
        a.moveTo(11, -2889);
        a.lineTo(29, -3013);
        a.moveTo(1164, -1579);
        a.lineTo(1204, -1591);
        a.lineTo(1208, -1591);
        a.quadraticCurveTo(1158, -1743, 1076, -1882);
        a.lineTo(1068, -1895);
        a.moveTo(1310, -1428);
        a.lineTo(1251, -1428);
        a.lineTo(1263, -1363);
        a.lineTo(1280, -1237);
        a.lineTo(1307, -1244);
        a.lineTo(1359, -1258);
        a.moveTo(1211, -1428);
        a.lineTo(1251, -1428);
        a.lineTo(1239, -1483);
        a.lineTo(1218, -1481);
        a.lineTo(1179, -1475);
        a.moveTo(1347, -1087);
        a.lineTo(1290, -1083);
        a.lineTo(1291, -998);
        a.lineTo(1324, -998);
        a.moveTo(1239, -998);
        a.lineTo(1291, -998);
        a.lineTo(1289, -938);
        a.lineTo(1343, -941);
        a.moveTo(1234, -1083);
        a.lineTo(1276, -1083);
        a.lineTo(1290, -1083);
        a.lineTo(1287, -1146);
        a.lineTo(1280, -1237);
        a.lineTo(1229, -1220);
        a.moveTo(1291, -1594);
        a.lineTo(1208, -1591);
        a.lineTo(1239, -1483);
        a.lineTo(1315, -1485);
        a.moveTo(1234, -938);
        a.lineTo(1246, -938);
        a.lineTo(1289, -938);
        a.lineTo(1284, -855);
        a.moveTo(1334, -683);
        a.lineTo(1264, -689);
        a.lineTo(1253, -630);
        a.moveTo(1206, -703);
        a.lineTo(1249, -693);
        a.lineTo(1264, -689);
        a.lineTo(1275, -761);
        a.moveTo(1281, -476);
        a.lineTo(1214, -476);
        a.lineTo(1204, -445);
        a.moveTo(1159, -490);
        a.lineTo(1191, -479);
        a.lineTo(1214, -476);
        a.lineTo(1233, -543);
        a.moveTo(1161, -336);
        a.lineTo(1147, -306);
        a.quadraticCurveTo(1045, -100, 903, 99);
        a.moveTo(958, -2062);
        a.lineTo(1015, -1979);
        a.moveTo(-55, -2701);
        a.lineTo(-33, -2747);
        a.lineTo(-15, -2791);
        a.moveTo(-160, -2552);
        a.quadraticCurveTo(-124, -2592, -95, -2635);
        a.moveTo(-801, -2035);
        a.lineTo(-771, -2068);
        a.lineTo(-710, -2127);
        a.moveTo(-540, -2261);
        a.lineTo(-420, -2347);
        a.moveTo(-653, -2174);
        a.lineTo(-600, -2217);
        a.moveTo(-369, -2375);
        a.lineTo(-316, -2412);
        a.moveTo(-273, -2445);
        a.lineTo(-208, -2502);
        a.moveTo(-1250, -769);
        a.quadraticCurveTo(-1301, -970, -1270, -1196);
        a.quadraticCurveTo(-1251, -1332, -1185, -1487);
        a.lineTo(-1152, -1557);
        a.moveTo(-1082, -1679);
        a.lineTo(-997, -1800);
        a.lineTo(-857, -1972);
        a.moveTo(-1188, -588);
        a.lineTo(-1182, -573);
        a.quadraticCurveTo(-1161, -588, -1140, -590);
        a.moveTo(-1045, -462);
        a.quadraticCurveTo(-1079, -455, -1116, -429);
        a.lineTo(-1117, -428);
        a.lineTo(-1094, -380);
        a.lineTo(-1091, -382);
        a.lineTo(-1031, -415);
        a.moveTo(-1158, -391);
        a.quadraticCurveTo(-1148, -408, -1117, -428);
        a.lineTo(-1139, -474);
        a.lineTo(-1143, -472);
        a.lineTo(-1182, -443);
        a.moveTo(-1067, -328);
        a.lineTo(-1094, -380);
        a.quadraticCurveTo(-1115, -368, -1122, -360);
        a.moveTo(-1182, -573);
        a.lineTo(-1139, -474);
        a.quadraticCurveTo(-1103, -498, -1073, -508);
        a.moveTo(-1182, -573);
        a.lineTo(-1218, -540);
        a.moveTo(-684, 238);
        a.lineTo(-790,
          107);
        a.moveTo(-459, 490);
        a.lineTo(-627, 305);
        a.moveTo(21, -3237);
        a.lineTo(-1, -3314);
        a.moveTo(-849, 29);
        a.lineTo(-933, -93)
      },
      function(a) {
        a.transform(0.48, 0, 0, 0.48, 5486, 4065);
        a.fillStyle = "rgba(0,0,0,0)";
        a.strokeStyle = "rgb(0,0,0)";
        a.strokeStyle = "rgba(0,0,0,1.000)";
        a.lineWidth = 60;
        a.lineCap = "round";
        a.lineJoin = "round";
        a.beginPath();
        a.moveTo(1821, -1692);
        a.lineTo(1823, -1690)
      }
    ]
  }
}

function make_baby_6(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4370);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(117, -1319);
      a.lineTo(122, -1313);
      a.lineTo(127, -1308);
      a.lineTo(122, -1318);
      a.lineTo(119, -1317);
      a.lineTo(118, -1319);
      a.closePath();
      a.moveTo(-2792, 2832);
      a.quadraticCurveTo(-2736, 2860, -2680, 2895);
      a.quadraticCurveTo(-2611, 3071, -2525, 3239);
      a.quadraticCurveTo(-2440, 3388, -2331, 3524);
      a.lineTo(-2275, 3884);
      a.quadraticCurveTo(-2254, 4014, -2196, 4132);
      a.quadraticCurveTo(-2132,
        4242, -2148, 4340);
      a.lineTo(-2198, 4288);
      a.quadraticCurveTo(-2419, 4045, -2523, 3693);
      a.quadraticCurveTo(-2704, 3291, -2792, 2832);
      a.closePath();
      a.moveTo(-979, -1123);
      a.quadraticCurveTo(-1017, -1123, -1057, -1114);
      a.quadraticCurveTo(-1652, -996, -2102, -590);
      a.quadraticCurveTo(-2505, -224, -2769, 248);
      a.quadraticCurveTo(-3021, 701, -3176, 1198);
      a.quadraticCurveTo(-3347, 1748, -3308, 2316);
      a.quadraticCurveTo(-3269, 2884, -3056, 3413);
      a.quadraticCurveTo(-2851, 3923, -2431, 4274);
      a.quadraticCurveTo(-2041, 4599, -1576, 4804);
      a.quadraticCurveTo(-1831,
        4588, -1960, 4273);
      a.quadraticCurveTo(-2232, 3537, -2255, 2901);
      a.quadraticCurveTo(-2269, 2404, -2187, 2114);
      a.lineTo(-2186, 2108);
      a.lineTo(-2172, 2062);
      a.lineTo(-2156, 2014);
      a.lineTo(-2150, 2E3);
      a.lineTo(-2101, 1880);
      a.lineTo(-2066, 1793);
      a.lineTo(-2009, 1665);
      a.lineTo(-2008, 1663);
      a.lineTo(-2008, 1661);
      a.quadraticCurveTo(-2005, 1659, -2006, 1659);
      a.quadraticCurveTo(-2006, 1659, -2007, 1659);
      a.quadraticCurveTo(-2015, 1627, -2026, 1603);
      a.lineTo(-2026, 1603);
      a.quadraticCurveTo(-2014, 1625, -2005, 1654);
      a.lineTo(-2003, 1648);
      a.lineTo(-1950,
        1541);
      a.quadraticCurveTo(-1804, 1161, -1562, 961);
      a.quadraticCurveTo(-1546, 942, -1530, 938);
      a.lineTo(-1523, 934);
      a.quadraticCurveTo(-1069, 657, -696, 516);
      a.quadraticCurveTo(-592, 293, -638, 44);
      a.lineTo(-649, -26);
      a.quadraticCurveTo(-960, -138, -1115, -428);
      a.lineTo(-1115, -428);
      a.quadraticCurveTo(-973, -358, -830, -358);
      a.quadraticCurveTo(-703, -358, -575, -413);
      a.quadraticCurveTo(-438, -732, -516, -1084);
      a.lineTo(-516, -1084);
      a.quadraticCurveTo(-559, -1081, -604, -1081);
      a.quadraticCurveTo(-750, -1081, -903, -1114);
      a.quadraticCurveTo(-940, -1122, -979, -1122);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4370);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(102, -1335);
      a.lineTo(98, -1331);
      a.quadraticCurveTo(92, -1321, 102, -1320);
      a.lineTo(84, -1303);
      a.quadraticCurveTo(-195, -1109, -516, -1084);
      a.quadraticCurveTo(-438, -732, -575, -413);
      a.quadraticCurveTo(-703, -358, -830, -358);
      a.quadraticCurveTo(-973, -358, -1115, -428);
      a.lineTo(-1115, -428);
      a.quadraticCurveTo(-960, -138, -649, -26);
      a.lineTo(-638, 44);
      a.quadraticCurveTo(-592, 293, -696, 516);
      a.quadraticCurveTo(-1069,
        657, -1523, 934);
      a.lineTo(-1530, 938);
      a.quadraticCurveTo(-1546, 942, -1562, 961);
      a.quadraticCurveTo(-1804, 1161, -1950, 1541);
      a.lineTo(-2003, 1648);
      a.lineTo(-2005, 1654);
      a.lineTo(-2007, 1659);
      a.quadraticCurveTo(-2006, 1659, -2006, 1659);
      a.quadraticCurveTo(-2005, 1659, -2008, 1661);
      a.lineTo(-2008, 1663);
      a.lineTo(-2009, 1665);
      a.lineTo(-2066, 1793);
      a.lineTo(-2101, 1880);
      a.lineTo(-2150, 2E3);
      a.lineTo(-2156, 2014);
      a.lineTo(-2172, 2062);
      a.lineTo(-2186, 2108);
      a.lineTo(-2187, 2114);
      a.quadraticCurveTo(-2269, 2404, -2255, 2901);
      a.quadraticCurveTo(-2232,
        3537, -1960, 4273);
      a.lineTo(-2057, 3811);
      a.quadraticCurveTo(-2164, 3288, -2125, 2753);
      a.quadraticCurveTo(-2087, 2220, -1889, 1723);
      a.quadraticCurveTo(-1655, 1138, -1041, 983);
      a.quadraticCurveTo(-807, 924, -574, 924);
      a.quadraticCurveTo(-247, 924, 75, 1041);
      a.lineTo(76, 1043);
      a.quadraticCurveTo(247, 530, 318, -26);
      a.quadraticCurveTo(382, -590, 194, -1109);
      a.quadraticCurveTo(159, -1203, 131, -1305);
      a.lineTo(130, -1305);
      a.lineTo(128, -1307);
      a.lineTo(127, -1307);
      a.lineTo(127, -1308);
      a.lineTo(122, -1313);
      a.lineTo(117, -1319);
      a.lineTo(118, -1319);
      a.lineTo(119, -1317);
      a.lineTo(122, -1318);
      a.lineTo(102, -1335);
      a.closePath();
      a.moveTo(-2792, 2832);
      a.quadraticCurveTo(-2704, 3291, -2523, 3693);
      a.quadraticCurveTo(-2419, 4045, -2198, 4288);
      a.lineTo(-2148, 4340);
      a.quadraticCurveTo(-2132, 4242, -2196, 4132);
      a.quadraticCurveTo(-2254, 4014, -2275, 3884);
      a.lineTo(-2331, 3524);
      a.quadraticCurveTo(-2440, 3388, -2525, 3239);
      a.quadraticCurveTo(-2611, 3071, -2680, 2895);
      a.quadraticCurveTo(-2736, 2860, -2792, 2832);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4370);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(122, -1318);
      a.lineTo(125, -1318);
      a.quadraticCurveTo(122, -1313, 126, -1315);
      a.quadraticCurveTo(124, -1309, 130, -1306);
      a.lineTo(130, -1305);
      a.lineTo(131, -1305);
      a.quadraticCurveTo(159, -1203, 194, -1109);
      a.quadraticCurveTo(382, -590, 318, -26);
      a.quadraticCurveTo(247, 530, 76, 1043);
      a.moveTo(75, 1041);
      a.quadraticCurveTo(-478, 840, -1041, 983);
      a.quadraticCurveTo(-1655,
        1138, -1889, 1723);
      a.quadraticCurveTo(-2087, 2220, -2125, 2753);
      a.quadraticCurveTo(-2164, 3288, -2057, 3811);
      a.lineTo(-1960, 4273);
      a.quadraticCurveTo(-1831, 4588, -1576, 4804);
      a.quadraticCurveTo(-2041, 4599, -2431, 4274);
      a.quadraticCurveTo(-2851, 3923, -3056, 3413);
      a.quadraticCurveTo(-3269, 2884, -3308, 2316);
      a.quadraticCurveTo(-3347, 1748, -3176, 1198);
      a.quadraticCurveTo(-3021, 701, -2769, 248);
      a.quadraticCurveTo(-2505, -224, -2102, -590);
      a.quadraticCurveTo(-1652, -996, -1057, -1114);
      a.quadraticCurveTo(-978, -1131, -903, -1114);
      a.quadraticCurveTo(-703, -1071, -516, -1084);
      a.quadraticCurveTo(-195, -1109, 84, -1303);
      a.lineTo(102, -1320);
      a.quadraticCurveTo(92, -1321, 98, -1331);
      a.lineTo(102, -1335);
      a.moveTo(127, -1308);
      a.lineTo(127, -1307);
      a.moveTo(128, -1307);
      a.lineTo(130, -1305);
      a.lineTo(130, -1306);
      a.moveTo(122, -1318);
      a.lineTo(119, -1317);
      a.moveTo(122, -1313);
      a.lineTo(127, -1308);
      a.moveTo(118, -1319);
      a.lineTo(117, -1319);
      a.lineTo(122, -1313);
      a.moveTo(107, -1329);
      a.lineTo(102, -1320);
      a.lineTo(117, -1319);
      a.lineTo(111, -1324);
      a.lineTo(107, -1329);
      a.closePath();
      a.moveTo(107, -1329);
      a.lineTo(102, -1335);
      a.moveTo(118, -1319);
      a.lineTo(111, -1324);
      a.moveTo(-2008, 1663);
      a.lineTo(-2009, 1665);
      a.moveTo(-2275, 3884);
      a.lineTo(-2331, 3524);
      a.quadraticCurveTo(-2440, 3388, -2525, 3239);
      a.quadraticCurveTo(-2611, 3071, -2680, 2895);
      a.quadraticCurveTo(-2736, 2860, -2792, 2832);
      a.quadraticCurveTo(-2704, 3291, -2523, 3693);
      a.quadraticCurveTo(-2399, 3787, -2275, 3884);
      a.closePath();
      a.moveTo(-2275, 3884);
      a.quadraticCurveTo(-2254, 4014, -2196, 4132);
      a.quadraticCurveTo(-2132, 4242, -2148, 4340);
      a.lineTo(-2198, 4288);
      a.quadraticCurveTo(-2419, 4045, -2523, 3693)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4370);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(102, -1335);
      a.lineTo(122, -1318);
      a.lineTo(127, -1308);
      a.moveTo(127, -1307);
      a.lineTo(128, -1307);
      a.moveTo(119, -1317);
      a.lineTo(122, -1313);
      a.moveTo(119, -1317);
      a.lineTo(118, -1319);
      a.moveTo(42, -1064);
      a.lineTo(127, -1196);
      a.moveTo(-1763, -619);
      a.quadraticCurveTo(-1725, -647, -1694, -678);
      a.moveTo(-1961, -447);
      a.quadraticCurveTo(-1933, -469, -1908, -494);
      a.moveTo(-2163, -219);
      a.lineTo(-2091, -312);
      a.moveTo(-1019, -515);
      a.lineTo(-1496, -498);
      a.moveTo(-1118, -910);
      a.lineTo(-947, -918);
      a.moveTo(-694, -581);
      a.lineTo(-766, -425);
      a.lineTo(-920, -491);
      a.moveTo(-516, -124);
      a.lineTo(-628, -293);
      a.moveTo(-853, -915);
      a.lineTo(-710, -887);
      a.moveTo(-1636, -721);
      a.quadraticCurveTo(-1481, -791, -1330, -864);
      a.moveTo(-283, 419);
      a.lineTo(-273, 348);
      a.lineTo(-285, 326);
      a.lineTo(-291, 370);
      a.moveTo(-319, 314);
      a.lineTo(-312, 267);
      a.lineTo(-285, 326);
      a.moveTo(-273, 348);
      a.quadraticCurveTo(-253, 386, -232, 431);
      a.lineTo(-242, 489);
      a.moveTo(-369, 157);
      a.lineTo(-433, 23);
      a.lineTo(-453, 121);
      a.moveTo(-1523, 934);
      a.lineTo(-1530, 938);
      a.moveTo(-1950, 1541);
      a.quadraticCurveTo(-1908, 1467, -1873, 1393);
      a.moveTo(-2521, 319);
      a.lineTo(-2439, 189);
      a.moveTo(-2673, 692);
      a.lineTo(-2644, 593);
      a.moveTo(-2992, 1787);
      a.lineTo(-2922, 1575);
      a.moveTo(-2859, 1368);
      a.lineTo(-2819, 1225);
      a.moveTo(-2101, 1880);
      a.lineTo(-2150, 2E3);
      a.moveTo(-2156, 2014);
      a.lineTo(-2172,
        2062);
      a.moveTo(-2009, 1665);
      a.lineTo(-2066, 1793);
      a.moveTo(-2007, 1659);
      a.quadraticCurveTo(-2004, 1658, -2008, 1661);
      a.lineTo(-2008, 1663);
      a.moveTo(-2005, 1654);
      a.lineTo(-2003, 1648);
      a.moveTo(-2771, 1049);
      a.lineTo(-2721, 865);
      a.moveTo(-2266, 2450);
      a.lineTo(-2289, 2729);
      a.moveTo(-2187, 2114);
      a.lineTo(-2225, 2237);
      a.moveTo(-2227, 3474);
      a.lineTo(-2169, 3775);
      a.moveTo(-2285, 2954);
      a.quadraticCurveTo(-2269, 3129, -2256, 3304);
      a.moveTo(-1611, 1079);
      a.lineTo(-1696, 1200);
      a.moveTo(-2121, 3974);
      a.lineTo(-2082, 4145);
      a.moveTo(-2365,
        72);
      a.lineTo(-2285, -47)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4370);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(117, -1319);
      a.lineTo(122, -1313);
      a.lineTo(127, -1308);
      a.lineTo(122, -1318);
      a.lineTo(119, -1317);
      a.lineTo(118, -1319);
      a.closePath();
      a.moveTo(-2792, 2832);
      a.quadraticCurveTo(-2736, 2860, -2680, 2895);
      a.quadraticCurveTo(-2611, 3071, -2525, 3239);
      a.quadraticCurveTo(-2440, 3388, -2331, 3524);
      a.lineTo(-2275, 3884);
      a.quadraticCurveTo(-2254, 4014, -2196, 4132);
      a.quadraticCurveTo(-2132, 4242, -2148, 4340);
      a.lineTo(-2198,
        4288);
      a.quadraticCurveTo(-2419, 4045, -2523, 3693);
      a.quadraticCurveTo(-2704, 3291, -2792, 2832);
      a.closePath();
      a.moveTo(-979, -1123);
      a.quadraticCurveTo(-1017, -1123, -1057, -1114);
      a.quadraticCurveTo(-1652, -996, -2102, -590);
      a.quadraticCurveTo(-2505, -224, -2769, 248);
      a.quadraticCurveTo(-3021, 701, -3176, 1198);
      a.quadraticCurveTo(-3347, 1748, -3308, 2316);
      a.quadraticCurveTo(-3269, 2884, -3056, 3413);
      a.quadraticCurveTo(-2851, 3923, -2431, 4274);
      a.quadraticCurveTo(-2041, 4599, -1576, 4804);
      a.quadraticCurveTo(-1831, 4588, -1960, 4273);
      a.quadraticCurveTo(-2232, 3537, -2255, 2901);
      a.quadraticCurveTo(-2269, 2404, -2187, 2114);
      a.lineTo(-2186, 2108);
      a.lineTo(-2172, 2062);
      a.lineTo(-2156, 2014);
      a.lineTo(-2150, 2E3);
      a.lineTo(-2101, 1880);
      a.lineTo(-2066, 1793);
      a.lineTo(-2009, 1665);
      a.lineTo(-2008, 1663);
      a.lineTo(-2008, 1661);
      a.quadraticCurveTo(-2005, 1659, -2006, 1659);
      a.quadraticCurveTo(-2006, 1659, -2007, 1659);
      a.quadraticCurveTo(-2015, 1627, -2026, 1603);
      a.lineTo(-2026, 1603);
      a.quadraticCurveTo(-2014, 1625, -2005, 1654);
      a.lineTo(-2003, 1648);
      a.lineTo(-1950, 1541);
      a.quadraticCurveTo(-1804, 1161, -1562, 961);
      a.quadraticCurveTo(-1546, 942, -1530, 938);
      a.lineTo(-1523, 934);
      a.quadraticCurveTo(-1069, 657, -696, 516);
      a.quadraticCurveTo(-592, 293, -638, 44);
      a.lineTo(-649, -26);
      a.quadraticCurveTo(-960, -138, -1115, -428);
      a.lineTo(-1115, -428);
      a.quadraticCurveTo(-973, -358, -830, -358);
      a.quadraticCurveTo(-703, -358, -575, -413);
      a.quadraticCurveTo(-438, -732, -516, -1084);
      a.lineTo(-516, -1084);
      a.quadraticCurveTo(-559, -1081, -604, -1081);
      a.quadraticCurveTo(-750, -1081, -903, -1114);
      a.quadraticCurveTo(-940, -1122, -979, -1122);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4370);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(102, -1335);
      a.lineTo(98, -1331);
      a.quadraticCurveTo(92, -1321, 102, -1320);
      a.lineTo(84, -1303);
      a.quadraticCurveTo(-195, -1109, -516, -1084);
      a.quadraticCurveTo(-438, -732, -575, -413);
      a.quadraticCurveTo(-703, -358, -830, -358);
      a.quadraticCurveTo(-973, -358, -1115, -428);
      a.lineTo(-1115, -428);
      a.quadraticCurveTo(-960, -138, -649, -26);
      a.lineTo(-638, 44);
      a.quadraticCurveTo(-592, 293, -696, 516);
      a.quadraticCurveTo(-1069,
        657, -1523, 934);
      a.lineTo(-1530, 938);
      a.quadraticCurveTo(-1546, 942, -1562, 961);
      a.quadraticCurveTo(-1804, 1161, -1950, 1541);
      a.lineTo(-2003, 1648);
      a.lineTo(-2005, 1654);
      a.lineTo(-2007, 1659);
      a.quadraticCurveTo(-2006, 1659, -2006, 1659);
      a.quadraticCurveTo(-2005, 1659, -2008, 1661);
      a.lineTo(-2008, 1663);
      a.lineTo(-2009, 1665);
      a.lineTo(-2066, 1793);
      a.lineTo(-2101, 1880);
      a.lineTo(-2150, 2E3);
      a.lineTo(-2156, 2014);
      a.lineTo(-2172, 2062);
      a.lineTo(-2186, 2108);
      a.lineTo(-2187, 2114);
      a.quadraticCurveTo(-2269, 2404, -2255, 2901);
      a.quadraticCurveTo(-2232,
        3537, -1960, 4273);
      a.lineTo(-2057, 3811);
      a.quadraticCurveTo(-2164, 3288, -2125, 2753);
      a.quadraticCurveTo(-2087, 2220, -1889, 1723);
      a.quadraticCurveTo(-1655, 1138, -1041, 983);
      a.quadraticCurveTo(-807, 924, -574, 924);
      a.quadraticCurveTo(-247, 924, 75, 1041);
      a.lineTo(76, 1043);
      a.quadraticCurveTo(247, 530, 318, -26);
      a.quadraticCurveTo(382, -590, 194, -1109);
      a.quadraticCurveTo(159, -1203, 131, -1305);
      a.lineTo(130, -1305);
      a.lineTo(128, -1307);
      a.lineTo(127, -1307);
      a.lineTo(127, -1308);
      a.lineTo(122, -1313);
      a.lineTo(117, -1319);
      a.lineTo(118, -1319);
      a.lineTo(119, -1317);
      a.lineTo(122, -1318);
      a.lineTo(102, -1335);
      a.closePath();
      a.moveTo(-2792, 2832);
      a.quadraticCurveTo(-2704, 3291, -2523, 3693);
      a.quadraticCurveTo(-2419, 4045, -2198, 4288);
      a.lineTo(-2148, 4340);
      a.quadraticCurveTo(-2132, 4242, -2196, 4132);
      a.quadraticCurveTo(-2254, 4014, -2275, 3884);
      a.lineTo(-2331, 3524);
      a.quadraticCurveTo(-2440, 3388, -2525, 3239);
      a.quadraticCurveTo(-2611, 3071, -2680, 2895);
      a.quadraticCurveTo(-2736, 2860, -2792, 2832);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4370);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(122, -1318);
      a.lineTo(125, -1318);
      a.quadraticCurveTo(122, -1313, 126, -1315);
      a.quadraticCurveTo(124, -1309, 130, -1306);
      a.lineTo(130, -1305);
      a.lineTo(131, -1305);
      a.quadraticCurveTo(159, -1203, 194, -1109);
      a.quadraticCurveTo(382, -590, 318, -26);
      a.quadraticCurveTo(247, 530, 76, 1043);
      a.moveTo(75, 1041);
      a.quadraticCurveTo(-478, 840, -1041, 983);
      a.quadraticCurveTo(-1655,
        1138, -1889, 1723);
      a.quadraticCurveTo(-2087, 2220, -2125, 2753);
      a.quadraticCurveTo(-2164, 3288, -2057, 3811);
      a.lineTo(-1960, 4273);
      a.quadraticCurveTo(-1831, 4588, -1576, 4804);
      a.quadraticCurveTo(-2041, 4599, -2431, 4274);
      a.quadraticCurveTo(-2851, 3923, -3056, 3413);
      a.quadraticCurveTo(-3269, 2884, -3308, 2316);
      a.quadraticCurveTo(-3347, 1748, -3176, 1198);
      a.quadraticCurveTo(-3021, 701, -2769, 248);
      a.quadraticCurveTo(-2505, -224, -2102, -590);
      a.quadraticCurveTo(-1652, -996, -1057, -1114);
      a.quadraticCurveTo(-978, -1131, -903, -1114);
      a.quadraticCurveTo(-703, -1071, -516, -1084);
      a.quadraticCurveTo(-195, -1109, 84, -1303);
      a.lineTo(102, -1320);
      a.quadraticCurveTo(92, -1321, 98, -1331);
      a.lineTo(102, -1335);
      a.moveTo(127, -1308);
      a.lineTo(127, -1307);
      a.moveTo(128, -1307);
      a.lineTo(130, -1305);
      a.lineTo(130, -1306);
      a.moveTo(122, -1318);
      a.lineTo(119, -1317);
      a.moveTo(122, -1313);
      a.lineTo(127, -1308);
      a.moveTo(118, -1319);
      a.lineTo(117, -1319);
      a.lineTo(122, -1313);
      a.moveTo(107, -1329);
      a.lineTo(102, -1320);
      a.lineTo(117, -1319);
      a.lineTo(111, -1324);
      a.lineTo(107, -1329);
      a.closePath();
      a.moveTo(107, -1329);
      a.lineTo(102, -1335);
      a.moveTo(118, -1319);
      a.lineTo(111, -1324);
      a.moveTo(-2008, 1663);
      a.lineTo(-2009, 1665);
      a.moveTo(-2275, 3884);
      a.lineTo(-2331, 3524);
      a.quadraticCurveTo(-2440, 3388, -2525, 3239);
      a.quadraticCurveTo(-2611, 3071, -2680, 2895);
      a.quadraticCurveTo(-2736, 2860, -2792, 2832);
      a.quadraticCurveTo(-2704, 3291, -2523, 3693);
      a.quadraticCurveTo(-2399, 3787, -2275, 3884);
      a.closePath();
      a.moveTo(-2275, 3884);
      a.quadraticCurveTo(-2254, 4014, -2196, 4132);
      a.quadraticCurveTo(-2132, 4242, -2148, 4340);
      a.lineTo(-2198, 4288);
      a.quadraticCurveTo(-2419, 4045, -2523, 3693)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4370);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(102, -1335);
      a.lineTo(122, -1318);
      a.lineTo(127, -1308);
      a.moveTo(127, -1307);
      a.lineTo(128, -1307);
      a.moveTo(119, -1317);
      a.lineTo(122, -1313);
      a.moveTo(119, -1317);
      a.lineTo(118, -1319);
      a.moveTo(42, -1064);
      a.lineTo(127, -1196);
      a.moveTo(-1763, -619);
      a.quadraticCurveTo(-1725, -647, -1694, -678);
      a.moveTo(-1961, -447);
      a.quadraticCurveTo(-1933, -469, -1908, -494);
      a.moveTo(-2163, -219);
      a.lineTo(-2091, -312);
      a.moveTo(-1019, -515);
      a.lineTo(-1496, -498);
      a.moveTo(-1118, -910);
      a.lineTo(-947, -918);
      a.moveTo(-694, -581);
      a.lineTo(-766, -425);
      a.lineTo(-920, -491);
      a.moveTo(-516, -124);
      a.lineTo(-628, -293);
      a.moveTo(-853, -915);
      a.lineTo(-710, -887);
      a.moveTo(-1636, -721);
      a.quadraticCurveTo(-1481, -791, -1330, -864);
      a.moveTo(-283, 419);
      a.lineTo(-273, 348);
      a.lineTo(-285, 326);
      a.lineTo(-291, 370);
      a.moveTo(-319, 314);
      a.lineTo(-312, 267);
      a.lineTo(-285, 326);
      a.moveTo(-273, 348);
      a.quadraticCurveTo(-253, 386, -232, 431);
      a.lineTo(-242, 489);
      a.moveTo(-369, 157);
      a.lineTo(-433, 23);
      a.lineTo(-453, 121);
      a.moveTo(-1523, 934);
      a.lineTo(-1530, 938);
      a.moveTo(-1950, 1541);
      a.quadraticCurveTo(-1908, 1467, -1873, 1393);
      a.moveTo(-2521, 319);
      a.lineTo(-2439, 189);
      a.moveTo(-2673, 692);
      a.lineTo(-2644, 593);
      a.moveTo(-2992, 1787);
      a.lineTo(-2922, 1575);
      a.moveTo(-2859, 1368);
      a.lineTo(-2819, 1225);
      a.moveTo(-2101, 1880);
      a.lineTo(-2150, 2E3);
      a.moveTo(-2156, 2014);
      a.lineTo(-2172,
        2062);
      a.moveTo(-2009, 1665);
      a.lineTo(-2066, 1793);
      a.moveTo(-2007, 1659);
      a.quadraticCurveTo(-2004, 1658, -2008, 1661);
      a.lineTo(-2008, 1663);
      a.moveTo(-2005, 1654);
      a.lineTo(-2003, 1648);
      a.moveTo(-2771, 1049);
      a.lineTo(-2721, 865);
      a.moveTo(-2266, 2450);
      a.lineTo(-2289, 2729);
      a.moveTo(-2187, 2114);
      a.lineTo(-2225, 2237);
      a.moveTo(-2227, 3474);
      a.lineTo(-2169, 3775);
      a.moveTo(-2285, 2954);
      a.quadraticCurveTo(-2269, 3129, -2256, 3304);
      a.moveTo(-1611, 1079);
      a.lineTo(-1696, 1200);
      a.moveTo(-2121, 3974);
      a.lineTo(-2082, 4145);
      a.moveTo(-2365,
        72);
      a.lineTo(-2285, -47)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4543);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-511, -1436);
      a.quadraticCurveTo(-578, -1436, -653, -1410);
      a.quadraticCurveTo(-750, -1377, -878, -1294);
      a.quadraticCurveTo(-1014, -1205, -1087, -1169);
      a.quadraticCurveTo(-1142, -1141, -1188, -1129);
      a.lineTo(-1195, -1127);
      a.quadraticCurveTo(-1384, -945, -1481, -700);
      a.quadraticCurveTo(-1678, -205, -1473, 277);
      a.quadraticCurveTo(-1521, 322, -1569, 348);
      a.quadraticCurveTo(-1611, 370, -1661, 383);
      a.lineTo(-1745, 466);
      a.lineTo(-1847,
        564);
      a.quadraticCurveTo(-2008, 702, -2110, 702);
      a.quadraticCurveTo(-2111, 702, -2111, 702);
      a.lineTo(-2111, 702);
      a.quadraticCurveTo(-2018, 720, -1972, 803);
      a.quadraticCurveTo(-1935, 873, -1962, 1012);
      a.lineTo(-1964, 1023);
      a.lineTo(-1839, 1003);
      a.quadraticCurveTo(-1753, 1003, -1721, 1100);
      a.quadraticCurveTo(-1709, 1136, -1698, 1200);
      a.quadraticCurveTo(-1588, 1171, -1445, 1052);
      a.quadraticCurveTo(-1315, 943, -1245, 847);
      a.quadraticCurveTo(-1218, 904, -1144, 1132);
      a.quadraticCurveTo(-1102, 1238, -1054, 1316);
      a.quadraticCurveTo(-949,
        1384, -836, 1437);
      a.quadraticCurveTo(-716, 1494, -588, 1533);
      a.quadraticCurveTo(-310, 1620, -17, 1628);
      a.quadraticCurveTo(12, 1629, 41, 1629);
      a.quadraticCurveTo(299, 1629, 550, 1566);
      a.lineTo(561, 1563);
      a.quadraticCurveTo(702, 1521, 837, 1461);
      a.quadraticCurveTo(1086, 1133, 1238, 753);
      a.quadraticCurveTo(1389, 372, 1301, -51);
      a.quadraticCurveTo(1213, -476, 873, -608);
      a.quadraticCurveTo(873, -608, 873, -608);
      a.lineTo(873, -608);
      a.lineTo(566, -598);
      a.quadraticCurveTo(453, -589, 340, -589);
      a.quadraticCurveTo(43, -589, -245, -649);
      a.quadraticCurveTo(-664, -735, -809, -1138);
      a.quadraticCurveTo(-695, -1325, -506, -1436);
      a.quadraticCurveTo(-508, -1436, -511, -1436);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4543);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-1245, 847);
      a.quadraticCurveTo(-1315, 943, -1445, 1052);
      a.quadraticCurveTo(-1588, 1171, -1698, 1200);
      a.lineTo(-1687, 1276);
      a.quadraticCurveTo(-1643, 1232, -1552, 1204);
      a.lineTo(-1396, 1163);
      a.lineTo(-1343, 1144);
      a.lineTo(-1303, 1122);
      a.quadraticCurveTo(-1213, 1206, -1113, 1275);
      a.lineTo(-1054, 1316);
      a.quadraticCurveTo(-1102,
        1238, -1144, 1132);
      a.quadraticCurveTo(-1218, 904, -1245, 847);
      a.closePath();
      a.moveTo(203, -1627);
      a.quadraticCurveTo(-169, -1627, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.quadraticCurveTo(-664, -735, -245, -649);
      a.quadraticCurveTo(44, -589, 340, -589);
      a.quadraticCurveTo(452, -589, 566, -598);
      a.lineTo(873, -608);
      a.quadraticCurveTo(1213, -476, 1301, -51);
      a.quadraticCurveTo(1389, 372, 1238, 753);
      a.quadraticCurveTo(1086, 1133, 837, 1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275,
        1221, 1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632, 1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.quadraticCurveTo(2028, 792, 1933, 741);
      a.quadraticCurveTo(2014, 696, 2103, 683);
      a.lineTo(2103, 672);
      a.quadraticCurveTo(1833, 633, 1624, 483);
      a.lineTo(1581, 451);
      a.lineTo(1585, 439);
      a.quadraticCurveTo(1461, 297, 1434, 244);
      a.lineTo(1432, 240);
      a.quadraticCurveTo(1522, 18, 1560, -281);
      a.quadraticCurveTo(1610, -669, 1341, -1139);
      a.lineTo(1328, -1132);
      a.lineTo(1288, -1126);
      a.quadraticCurveTo(1217, -1126, 1135, -1201);
      a.quadraticCurveTo(1086, -1246, 1043, -1254);
      a.lineTo(1043, -1254);
      a.quadraticCurveTo(1043, -1254, 1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(295, -1627, 203, -1627);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4543);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1585, 439);
      a.lineTo(1624,
        483);
      a.moveTo(2096, 874);
      a.lineTo(2111, 876);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(1073, -1208, 1097, -1155);
      a.quadraticCurveTo(1156, -1025, 1034, -893);
      a.moveTo(902, -694);
      a.quadraticCurveTo(924, -747, 959, -798);
      a.moveTo(936, -144);
      a.quadraticCurveTo(910, -212, 893, -271);
      a.moveTo(861, -426);
      a.quadraticCurveTo(856, -473, 859, -512);
      a.quadraticCurveTo(861, -559, 873, -608);
      a.moveTo(-809, -1138);
      a.lineTo(-816, -1126);
      a.quadraticCurveTo(-833, -1073, -838, -1018);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(-88, -1673, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.moveTo(1851, 861);
      a.lineTo(1739, 839);
      a.moveTo(1655, 816);
      a.lineTo(1639, 811);
      a.lineTo(1596, 798);
      a.moveTo(2096, 874);
      a.lineTo(1948, 868);
      a.moveTo(1581, 451);
      a.lineTo(1585, 439);
      a.moveTo(1117, 367);
      a.quadraticCurveTo(1104, 260, 1067, 158);
      a.moveTo(1540, 828);
      a.lineTo(1545, 810);
      a.lineTo(1552, 783);
      a.lineTo(1574, 664);
      a.moveTo(1581, 451);
      a.lineTo(1581, 557);
      a.moveTo(1047, 885);
      a.quadraticCurveTo(1127, 668, 1124, 467);
      a.moveTo(561, 1563);
      a.lineTo(675, 1471);
      a.moveTo(1433, 1007);
      a.quadraticCurveTo(1485, 954, 1517, 889);
      a.moveTo(930, 1139);
      a.lineTo(1007, 984);
      a.moveTo(773, 1368);
      a.lineTo(858, 1257);
      a.moveTo(1021, 51);
      a.lineTo(974, -51);
      a.moveTo(-811, -775);
      a.lineTo(-831, -855);
      a.moveTo(-730, -579);
      a.quadraticCurveTo(-741, -617, -760, -654);
      a.lineTo(-766, -666);
      a.moveTo(-792, -126);
      a.quadraticCurveTo(-769, -183, -752, -242);
      a.moveTo(-736, -314);
      a.quadraticCurveTo(-725, -372, -720, -431);
      a.moveTo(-926, 49);
      a.lineTo(-903, 76);
      a.lineTo(-839, -27);
      a.moveTo(-982, 129);
      a.lineTo(-962, 156);
      a.lineTo(-940, 126);
      a.lineTo(-903, 76);
      a.lineTo(-897, 85);
      a.lineTo(-854, 145);
      a.moveTo(-962, 156);
      a.lineTo(-951, 168);
      a.lineTo(-894, 217);
      a.moveTo(-1062, 257);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1005, 215, -962, 156);
      a.moveTo(-974, 321);
      a.lineTo(-1022, 288);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1067, 349, -1083, 424);
      a.lineTo(-1077, 424);
      a.lineTo(-998, 425);
      a.moveTo(-1150, 465);
      a.lineTo(-1092, 471);
      a.lineTo(-1083, 424);
      a.lineTo(-1126, 417);
      a.moveTo(-1092, 471);
      a.lineTo(-982, 473);
      a.moveTo(-1385, 901);
      a.lineTo(-1419, 869);
      a.lineTo(-1445, 843);
      a.moveTo(-1517, 769);
      a.lineTo(-1559, 723);
      a.lineTo(-1581, 699);
      a.lineTo(-1592, 687);
      a.moveTo(-1059, 888);
      a.lineTo(-1087, 752);
      a.moveTo(-1092, 471);
      a.quadraticCurveTo(-1105, 553, -1100, 640);
      a.lineTo(-1093, 641);
      a.quadraticCurveTo(-1039, 646, -1014, 641);
      a.moveTo(-1098, 673);
      a.lineTo(-1100, 640);
      a.lineTo(-1150, 633);
      a.moveTo(-977, 1143);
      a.lineTo(-1024, 1011);
      a.moveTo(-836, 1437);
      a.lineTo(-931, 1253);
      a.moveTo(-1236, 1019);
      a.lineTo(-1326, 952);
      a.moveTo(-1962, 1012);
      a.lineTo(-1801, 916);
      a.lineTo(-1777, 900);
      a.moveTo(-1644, 623);
      a.lineTo(-1697, 548);
      a.moveTo(-1710, 852);
      a.lineTo(-1662, 813);
      a.lineTo(-1595, 756);
      a.moveTo(-1720, 511);
      a.lineTo(-1745, 466)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4543);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1333, -1153);
      a.lineTo(1341, -1139);
      a.quadraticCurveTo(1610, -669, 1560, -281);
      a.quadraticCurveTo(1522, 18, 1432, 240);
      a.moveTo(1624, 483);
      a.quadraticCurveTo(1833, 633, 2103, 672);
      a.lineTo(2103, 683);
      a.quadraticCurveTo(2014, 696, 1933, 741);
      a.quadraticCurveTo(2028, 792, 2096, 874);
      a.moveTo(837, 1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275, 1221, 1473, 1038);
      a.lineTo(1433, 1007);
      a.lineTo(1354, 938);
      a.moveTo(1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632, 1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.moveTo(1432, 240);
      a.lineTo(1371, 372);
      a.moveTo(1581, 451);
      a.lineTo(1566, 438);
      a.moveTo(837, 1461);
      a.quadraticCurveTo(702, 1521, 561, 1563);
      a.lineTo(550, 1566);
      a.quadraticCurveTo(270, 1636, -17, 1628);
      a.quadraticCurveTo(-310, 1620, -588, 1533);
      a.quadraticCurveTo(-716, 1494, -836, 1437);
      a.quadraticCurveTo(-949, 1384, -1054, 1316);
      a.lineTo(-1113, 1275);
      a.quadraticCurveTo(-1213, 1206, -1303, 1122);
      a.lineTo(-1343, 1144);
      a.lineTo(-1396, 1163);
      a.lineTo(-1552, 1204);
      a.quadraticCurveTo(-1643, 1232, -1687, 1276);
      a.lineTo(-1698, 1200);
      a.quadraticCurveTo(-1709,
        1136, -1721, 1100);
      a.quadraticCurveTo(-1753, 1003, -1839, 1003);
      a.lineTo(-1964, 1023);
      a.lineTo(-1962, 1012);
      a.quadraticCurveTo(-1935, 873, -1972, 803);
      a.quadraticCurveTo(-2018, 720, -2111, 702);
      a.quadraticCurveTo(-2009, 703, -1847, 564);
      a.lineTo(-1745, 466);
      a.lineTo(-1661, 383);
      a.lineTo(-1630, 353);
      a.moveTo(1624, 483);
      a.lineTo(1581, 451);
      a.moveTo(-1473, 277);
      a.quadraticCurveTo(-1678, -205, -1481, -700);
      a.quadraticCurveTo(-1384, -945, -1195, -1127);
      a.moveTo(-1452, 325);
      a.lineTo(-1473, 277);
      a.moveTo(-1303, 1122);
      a.quadraticCurveTo(-1285,
        1110, -1272, 1096);
      a.quadraticCurveTo(-1244, 1065, -1236, 1019);
      a.quadraticCurveTo(-1230, 986, -1235, 946)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(-1533, -1810);
      a.lineTo(-1556, -1763);
      a.quadraticCurveTo(-1589, -1690, -1604, -1603);
      a.quadraticCurveTo(-1634, -1434, -1628, -1259);
      a.quadraticCurveTo(-1624, -1128, -1578, -1017);
      a.quadraticCurveTo(-1534, -1127, -1506, -1266);
      a.quadraticCurveTo(-1478, -1406, -1483, -1522);
      a.quadraticCurveTo(-1488, -1638, -1501, -1699);
      a.lineTo(-1533, -1810);
      a.closePath();
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1768, -1635, 1734, -1473);
      a.quadraticCurveTo(1699, -1312, 1677, -1133);
      a.quadraticCurveTo(1655, -955, 1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.quadraticCurveTo(1795, -843, 1815, -911);
      a.quadraticCurveTo(1843, -1010, 1858, -1122);
      a.quadraticCurveTo(1871, -1221, 1872, -1344);
      a.lineTo(1869, -1428);
      a.lineTo(1859, -1535);
      a.lineTo(1858, -1547);
      a.lineTo(1851, -1595);
      a.quadraticCurveTo(1846, -1642, 1823, -1690);
      a.lineTo(1821, -1692);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(257, -3296);
      a.quadraticCurveTo(234, -3208, 234, -3032);
      a.quadraticCurveTo(234, -2810, 289, -2652);
      a.quadraticCurveTo(314, -2580, 404, -2402);
      a.lineTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(535, -2385);
      a.quadraticCurveTo(904, -2083, 985, -1597);
      a.quadraticCurveTo(1061, -1141, 982, -686);
      a.quadraticCurveTo(907, -252, 649, 108);
      a.quadraticCurveTo(489, 332, 278, 503);
      a.lineTo(294, 494);
      a.quadraticCurveTo(441,
        412, 517, 344);
      a.lineTo(607, 265);
      a.lineTo(685, 215);
      a.quadraticCurveTo(760, 167, 902, 100);
      a.lineTo(903, 99);
      a.quadraticCurveTo(1045, 31, 1189, -109);
      a.lineTo(1197, -117);
      a.lineTo(1261, -184);
      a.lineTo(1294, -218);
      a.lineTo(1358, -293);
      a.quadraticCurveTo(1432, -377, 1482, -474);
      a.quadraticCurveTo(1524, -553, 1548, -641);
      a.lineTo(1563, -680);
      a.quadraticCurveTo(1582, -721, 1627, -728);
      a.lineTo(1706, -722);
      a.lineTo(1712, -725);
      a.quadraticCurveTo(1735, -742, 1743, -770);
      a.lineTo(1754, -811);
      a.lineTo(1754, -811);
      a.quadraticCurveTo(1734, -796, 1711, -789);
      a.lineTo(1665, -781);
      a.quadraticCurveTo(1663, -781, 1662, -781);
      a.quadraticCurveTo(1620, -781, 1589, -807);
      a.quadraticCurveTo(1541, -849, 1540, -985);
      a.quadraticCurveTo(1543, -1069, 1560, -1193);
      a.quadraticCurveTo(1577, -1318, 1596, -1408);
      a.lineTo(1616, -1514);
      a.lineTo(1658, -1645);
      a.quadraticCurveTo(1691, -1743, 1747, -1743);
      a.quadraticCurveTo(1752, -1743, 1757, -1742);
      a.quadraticCurveTo(1794, -1729, 1821, -1692);
      a.lineTo(1823, -1690);
      a.quadraticCurveTo(1831, -1776, 1821, -1809);
      a.lineTo(1786, -1888);
      a.quadraticCurveTo(1761, -1934, 1704, -1955);
      a.lineTo(1679, -1963);
      a.lineTo(1618, -1967);
      a.quadraticCurveTo(1492, -1830, 1429, -1653);
      a.lineTo(1402, -1578);
      a.quadraticCurveTo(1357, -1711, 1366, -1853);
      a.quadraticCurveTo(1370, -1912, 1400, -1962);
      a.quadraticCurveTo(1309, -1970, 1252, -2008);
      a.lineTo(1243, -2015);
      a.lineTo(1101, -2129);
      a.lineTo(987, -2219);
      a.quadraticCurveTo(939, -2253, 873, -2287);
      a.lineTo(833, -2328);
      a.quadraticCurveTo(730, -2436, 657, -2562);
      a.lineTo(581, -2696);
      a.quadraticCurveTo(534, -2779, 488, -2893);
      a.quadraticCurveTo(442, -3007, 429, -3077);
      a.lineTo(408, -3192);
      a.lineTo(401, -3237);
      a.quadraticCurveTo(394, -3288, 390, -3338);
      a.lineTo(389, -3343);
      a.lineTo(384, -3402);
      a.lineTo(383, -3430);
      a.lineTo(381, -3453);
      a.lineTo(377, -3479);
      a.lineTo(373, -3506);
      a.lineTo(370, -3529);
      a.lineTo(365, -3555);
      a.lineTo(355, -3594);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1579, -1967);
      a.lineTo(1505, -1963);
      a.lineTo(1497, -1963);
      a.quadraticCurveTo(1467, -1961, 1439, -1961);
      a.quadraticCurveTo(1418, -1961, 1400, -1962);
      a.quadraticCurveTo(1370, -1912, 1366, -1853);
      a.quadraticCurveTo(1357, -1711, 1402, -1578);
      a.lineTo(1429, -1653);
      a.quadraticCurveTo(1492, -1830, 1618, -1967);
      a.closePath();
      a.moveTo(278, -3664);
      a.lineTo(203, -3566);
      a.lineTo(149, -3489);
      a.lineTo(113, -3449);
      a.lineTo(68, -3405);
      a.lineTo(-1, -3314);
      a.lineTo(-2, -3313);
      a.lineTo(-62, -3219);
      a.lineTo(-111, -3132);
      a.lineTo(-158, -3050);
      a.lineTo(-216, -2952);
      a.lineTo(-249, -2898);
      a.lineTo(-284, -2842);
      a.lineTo(-322, -2782);
      a.lineTo(-354, -2731);
      a.lineTo(-388, -2681);
      a.lineTo(-422, -2631);
      a.lineTo(-481, -2551);
      a.lineTo(-535, -2479);
      a.lineTo(-601, -2397);
      a.lineTo(-678, -2306);
      a.lineTo(-721, -2256);
      a.quadraticCurveTo(-894, -2191, -1046, -2105);
      a.quadraticCurveTo(-1199, -2020, -1302, -1940);
      a.lineTo(-1349, -1966);
      a.quadraticCurveTo(-1397, -1994, -1433, -1994);
      a.quadraticCurveTo(-1474, -1994, -1500, -1957);
      a.quadraticCurveTo(-1498, -1920, -1482, -1886);
      a.lineTo(-1457, -1830);
      a.lineTo(-1454, -1823);
      a.lineTo(-1445, -1802);
      a.lineTo(-1440, -1790);
      a.quadraticCurveTo(-1418, -1735, -1406, -1676);
      a.quadraticCurveTo(-1331, -1314, -1496, -1018);
      a.lineTo(-1526, -969);
      a.lineTo(-1542, -945);
      a.lineTo(-1552, -931);
      a.quadraticCurveTo(-1553, -870, -1511, -841);
      a.quadraticCurveTo(-1500, -833, -1485, -833);
      a.quadraticCurveTo(-1465, -833, -1437, -848);
      a.quadraticCurveTo(-1339, -789, -1327, -697);
      a.quadraticCurveTo(-1315, -606, -1307, -485);
      a.quadraticCurveTo(-1299, -364, -1198, -222);
      a.quadraticCurveTo(-1097, -80, -1037, -7);
      a.quadraticCurveTo(-977, 64, -857, 170);
      a.lineTo(-600, 393);
      a.quadraticCurveTo(-533, 451, -459, 490);
      a.quadraticCurveTo(-383, 529, -301, 548);
      a.quadraticCurveTo(-202, 571, -101, 571);
      a.quadraticCurveTo(-65, 571, -29, 568);
      a.quadraticCurveTo(-13, 569, 3, 569);
      a.quadraticCurveTo(151, 569, 278, 503);
      a.quadraticCurveTo(489, 332, 649, 108);
      a.quadraticCurveTo(907, -252, 982, -686);
      a.quadraticCurveTo(1061, -1141, 985, -1597);
      a.quadraticCurveTo(904, -2083, 535, -2385);
      a.lineTo(531, -2386);
      a.lineTo(404, -2402);
      a.quadraticCurveTo(314, -2580, 289, -2652);
      a.quadraticCurveTo(234, -2810, 234, -3032);
      a.quadraticCurveTo(234, -3208, 257, -3296);
      a.lineTo(355, -3594);
      a.lineTo(351, -3608);
      a.quadraticCurveTo(341, -3646, 278, -3664);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(-1482, -1886);
      a.quadraticCurveTo(-1511, -1851, -1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.lineTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.closePath();
      a.moveTo(1747, -1743);
      a.quadraticCurveTo(1691, -1743, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318, 1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1620, -781, 1662, -781);
      a.quadraticCurveTo(1664, -781, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1752, -1743, 1747, -1743);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(365, -3555);
      a.lineTo(370, -3529);
      a.lineTo(373, -3506);
      a.lineTo(377, -3479);
      a.lineTo(381, -3453);
      a.lineTo(383, -3430);
      a.lineTo(384, -3402);
      a.lineTo(389, -3343);
      a.lineTo(390, -3338);
      a.quadraticCurveTo(394, -3288, 401, -3237);
      a.lineTo(408, -3192);
      a.lineTo(429, -3077);
      a.quadraticCurveTo(442, -3007, 488, -2893);
      a.quadraticCurveTo(534, -2779, 581, -2696);
      a.lineTo(657, -2562);
      a.quadraticCurveTo(730, -2436, 833, -2328);
      a.lineTo(873, -2287);
      a.quadraticCurveTo(939, -2253, 987, -2219);
      a.lineTo(1101, -2129);
      a.lineTo(1243, -2015);
      a.lineTo(1252, -2008);
      a.quadraticCurveTo(1309, -1970, 1400, -1962);
      a.quadraticCurveTo(1444, -1959, 1497, -1963);
      a.lineTo(1505, -1963);
      a.lineTo(1579, -1967);
      a.lineTo(1618, -1967);
      a.lineTo(1679, -1963);
      a.lineTo(1704, -1955);
      a.quadraticCurveTo(1761, -1934, 1786, -1888);
      a.lineTo(1821, -1809);
      a.quadraticCurveTo(1831, -1776, 1823, -1690);
      a.quadraticCurveTo(1846, -1642, 1851, -1595);
      a.lineTo(1858, -1547);
      a.lineTo(1859, -1535);
      a.lineTo(1869, -1428);
      a.lineTo(1872, -1344);
      a.quadraticCurveTo(1871, -1221, 1858, -1122);
      a.quadraticCurveTo(1843, -1010, 1815, -911);
      a.quadraticCurveTo(1795, -843, 1754, -811);
      a.lineTo(1743, -770);
      a.quadraticCurveTo(1735, -742, 1712, -725);
      a.lineTo(1706, -722);
      a.lineTo(1627, -728);
      a.quadraticCurveTo(1582, -721, 1563, -680);
      a.lineTo(1548, -641);
      a.quadraticCurveTo(1524, -553, 1482, -474);
      a.quadraticCurveTo(1432, -377, 1358, -293);
      a.lineTo(1294, -218);
      a.lineTo(1261, -184);
      a.lineTo(1197, -117);
      a.lineTo(1189, -109);
      a.quadraticCurveTo(1045, 31, 903, 99);
      a.moveTo(902, 100);
      a.quadraticCurveTo(760, 167, 685, 215);
      a.lineTo(607, 265);
      a.lineTo(517, 344);
      a.quadraticCurveTo(441, 412, 294, 494);
      a.lineTo(278, 503);
      a.quadraticCurveTo(137, 576, -29, 568);
      a.quadraticCurveTo(-167, 579, -301, 548);
      a.quadraticCurveTo(-383, 529, -459, 490);
      a.quadraticCurveTo(-533, 451, -600, 393);
      a.lineTo(-857, 170);
      a.quadraticCurveTo(-977, 64, -1037, -7);
      a.quadraticCurveTo(-1097, -80, -1198, -222);
      a.quadraticCurveTo(-1299, -364, -1307, -485);
      a.quadraticCurveTo(-1315, -606, -1327, -697);
      a.quadraticCurveTo(-1339, -789, -1437, -848);
      a.quadraticCurveTo(-1485, -823, -1511, -841);
      a.quadraticCurveTo(-1553, -870, -1552, -931);
      a.lineTo(-1542, -945);
      a.lineTo(-1578, -1017);
      a.quadraticCurveTo(-1624, -1128, -1628, -1259);
      a.quadraticCurveTo(-1634, -1434, -1604, -1603);
      a.quadraticCurveTo(-1589, -1690, -1556, -1763);
      a.lineTo(-1533, -1810);
      a.quadraticCurveTo(-1511, -1851, -1482, -1886);
      a.quadraticCurveTo(-1498, -1920, -1500, -1957);
      a.quadraticCurveTo(-1452, -2026, -1349, -1966);
      a.lineTo(-1302, -1940);
      a.quadraticCurveTo(-1199, -2020, -1046, -2105);
      a.quadraticCurveTo(-894, -2191, -721, -2256);
      a.lineTo(-678, -2306);
      a.lineTo(-601, -2397);
      a.lineTo(-535, -2479);
      a.lineTo(-481, -2551);
      a.lineTo(-422, -2631);
      a.lineTo(-388, -2681);
      a.lineTo(-354, -2731);
      a.lineTo(-322, -2782);
      a.lineTo(-284, -2842);
      a.lineTo(-249, -2898);
      a.lineTo(-216, -2952);
      a.lineTo(-158, -3050);
      a.lineTo(-111, -3132);
      a.lineTo(-62, -3219);
      a.lineTo(-2, -3313);
      a.lineTo(-1, -3314);
      a.lineTo(68, -3405);
      a.lineTo(113, -3449);
      a.lineTo(149, -3489);
      a.lineTo(203, -3566);
      a.lineTo(278, -3664);
      a.quadraticCurveTo(341, -3646, 351, -3608);
      a.lineTo(355, -3594);
      a.moveTo(404, -2402);
      a.lineTo(531, -2386);
      a.moveTo(404, -2402);
      a.lineTo(303, -2408);
      a.moveTo(535, -2385);
      a.lineTo(604, -2373);
      a.lineTo(705, -2350);
      a.quadraticCurveTo(788, -2328, 843, -2301);
      a.lineTo(873, -2287);
      a.moveTo(531, -2386);
      a.lineTo(535, -2385);
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1694, -1751, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318, 1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1621, -780, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.closePath();
      a.moveTo(1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.moveTo(-420, -2347);
      a.quadraticCurveTo(-568, -2313, -721, -2256);
      a.moveTo(-420, -2347);
      a.lineTo(-382, -2355);
      a.quadraticCurveTo(-215, -2390, -44, -2398);
      a.moveTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.moveTo(-1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.moveTo(-1302, -1940);
      a.quadraticCurveTo(-1237, -1897, -1172, -1831);
      a.moveTo(-1373, -895);
      a.quadraticCurveTo(-1409, -864, -1437, -848)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(903, 99);
      a.lineTo(902, 100);
      a.moveTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(488, -2488);
      a.moveTo(390, -3338);
      a.quadraticCurveTo(368, -3290, 354, -3242);
      a.moveTo(33, -3088);
      a.lineTo(33, -3128);
      a.lineTo(30, -3177);
      a.moveTo(335, -3159);
      a.quadraticCurveTo(327, -3115, 326, -3071);
      a.moveTo(424, -2649);
      a.lineTo(452, -2577);
      a.moveTo(363, -2815);
      a.lineTo(370, -2795);
      a.lineTo(393, -2732);
      a.moveTo(705, -2350);
      a.lineTo(790, -2265);
      a.moveTo(856, -2190);
      a.lineTo(898, -2140);
      a.moveTo(328, -2981);
      a.lineTo(341, -2898);
      a.moveTo(11, -2889);
      a.lineTo(29, -3013);
      a.moveTo(1164, -1579);
      a.lineTo(1204, -1591);
      a.lineTo(1208, -1591);
      a.quadraticCurveTo(1158, -1743, 1076, -1882);
      a.lineTo(1068, -1895);
      a.moveTo(1310, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1263, -1363);
      a.lineTo(1280, -1237);
      a.lineTo(1307, -1244);
      a.lineTo(1359, -1258);
      a.moveTo(1211, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1239, -1483);
      a.lineTo(1218, -1481);
      a.lineTo(1179, -1475);
      a.moveTo(1347, -1087);
      a.lineTo(1290, -1083);
      a.lineTo(1291, -998);
      a.lineTo(1324, -998);
      a.moveTo(1239, -998);
      a.lineTo(1291, -998);
      a.lineTo(1289, -938);
      a.lineTo(1343, -941);
      a.moveTo(1234, -1083);
      a.lineTo(1276, -1083);
      a.lineTo(1290, -1083);
      a.lineTo(1287, -1146);
      a.lineTo(1280, -1237);
      a.lineTo(1229, -1220);
      a.moveTo(1291, -1594);
      a.lineTo(1208, -1591);
      a.lineTo(1239, -1483);
      a.lineTo(1315, -1485);
      a.moveTo(1234, -938);
      a.lineTo(1246, -938);
      a.lineTo(1289, -938);
      a.lineTo(1284, -855);
      a.moveTo(1334, -683);
      a.lineTo(1264, -689);
      a.lineTo(1253, -630);
      a.moveTo(1206, -703);
      a.lineTo(1249, -693);
      a.lineTo(1264, -689);
      a.lineTo(1275, -761);
      a.moveTo(1281, -476);
      a.lineTo(1214, -476);
      a.lineTo(1204, -445);
      a.moveTo(1159, -490);
      a.lineTo(1191, -479);
      a.lineTo(1214, -476);
      a.lineTo(1233, -543);
      a.moveTo(1161, -336);
      a.lineTo(1147, -306);
      a.quadraticCurveTo(1045, -100, 903, 99);
      a.moveTo(958, -2062);
      a.lineTo(1015, -1979);
      a.moveTo(-55, -2701);
      a.lineTo(-33, -2747);
      a.lineTo(-15, -2791);
      a.moveTo(-160, -2552);
      a.quadraticCurveTo(-124, -2592, -95, -2635);
      a.moveTo(-801, -2035);
      a.lineTo(-771, -2068);
      a.lineTo(-710, -2127);
      a.moveTo(-540, -2261);
      a.lineTo(-420, -2347);
      a.moveTo(-653, -2174);
      a.lineTo(-600, -2217);
      a.moveTo(-369, -2375);
      a.lineTo(-316, -2412);
      a.moveTo(-273, -2445);
      a.lineTo(-208, -2502);
      a.moveTo(-1250, -769);
      a.quadraticCurveTo(-1301, -970, -1270, -1196);
      a.quadraticCurveTo(-1251, -1332, -1185, -1487);
      a.lineTo(-1152, -1557);
      a.moveTo(-1082, -1679);
      a.lineTo(-997, -1800);
      a.lineTo(-857, -1972);
      a.moveTo(-1188, -588);
      a.lineTo(-1182, -573);
      a.quadraticCurveTo(-1161, -588, -1140, -590);
      a.moveTo(-1045, -462);
      a.quadraticCurveTo(-1079, -455, -1116, -429);
      a.lineTo(-1117, -428);
      a.lineTo(-1094, -380);
      a.lineTo(-1091, -382);
      a.lineTo(-1031, -415);
      a.moveTo(-1158, -391);
      a.quadraticCurveTo(-1148, -408, -1117, -428);
      a.lineTo(-1139, -474);
      a.lineTo(-1143, -472);
      a.lineTo(-1182, -443);
      a.moveTo(-1067, -328);
      a.lineTo(-1094, -380);
      a.quadraticCurveTo(-1115, -368, -1122, -360);
      a.moveTo(-1182, -573);
      a.lineTo(-1139, -474);
      a.quadraticCurveTo(-1103, -498, -1073, -508);
      a.moveTo(-1182, -573);
      a.lineTo(-1218, -540);
      a.moveTo(-684, 238);
      a.lineTo(-790, 107);
      a.moveTo(-459, 490);
      a.lineTo(-627, 305);
      a.moveTo(21, -3237);
      a.lineTo(-1, -3314);
      a.moveTo(-849, 29);
      a.lineTo(-933, -93)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth =
        60;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1821, -1692);
      a.lineTo(1823, -1690)
    }]
  }
}

function make_baby_7(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4341);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-3916, 2534);
      a.lineTo(-3827, 2594);
      a.quadraticCurveTo(-3792, 2741, -3739, 2878);
      a.quadraticCurveTo(-3689, 3008, -3614, 3127);
      a.lineTo(-3637, 3432);
      a.quadraticCurveTo(-3647, 3549, -3622, 3665);
      a.quadraticCurveTo(-3599, 3775, -3633, 3878);
      a.lineTo(-3661, 3818);
      a.quadraticCurveTo(-3788, 3542, -3814, 3240);
      a.quadraticCurveTo(-3902, 2891, -3916, 2534);
      a.closePath();
      a.moveTo(-1293, -1191);
      a.quadraticCurveTo(-1304, -1191, -1315, -1191);
      a.quadraticCurveTo(-1882, -1179, -2383, -931);
      a.quadraticCurveTo(-2891, -677, -3308, -293);
      a.quadraticCurveTo(-3757, 121, -4016, 671);
      a.quadraticCurveTo(-4241, 1147, -4272, 1672);
      a.quadraticCurveTo(-4304, 2197, -4237, 2722);
      a.quadraticCurveTo(-4164, 3303, -3838, 3794);
      a.quadraticCurveTo(-3580, 4184, -3281, 4549);
      a.quadraticCurveTo(-3422, 4200, -3455, 3824);
      a.quadraticCurveTo(-3504, 3115, -3428, 2646);
      a.quadraticCurveTo(-3365, 2254, -3247, 2007);
      a.lineTo(-3206, 1928);
      a.lineTo(-3198,
        1915);
      a.lineTo(-3017, 1607);
      a.lineTo(-3015, 1605);
      a.lineTo(-3062, 1481);
      a.lineTo(-3014, 1602);
      a.lineTo(-3012, 1594);
      a.lineTo(-2942, 1489);
      a.quadraticCurveTo(-2730, 1112, -2356, 919);
      a.quadraticCurveTo(-2333, 906, -2308, 896);
      a.lineTo(-2298, 893);
      a.quadraticCurveTo(-1567, 542, -773, 424);
      a.quadraticCurveTo(-732, 333, -753, 232);
      a.lineTo(-755, 223);
      a.quadraticCurveTo(-1082, -19, -1091, -440);
      a.lineTo(-1091, -440);
      a.quadraticCurveTo(-942, -362, -827, -362);
      a.quadraticCurveTo(-613, -362, -519, -633);
      a.quadraticCurveTo(-437, -867, -493, -1114);
      a.lineTo(-493, -1114);
      a.quadraticCurveTo(-561, -1107, -630, -1107);
      a.quadraticCurveTo(-810, -1107, -1E3, -1154);
      a.quadraticCurveTo(-1143, -1191, -1293, -1191);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4341);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(84, -1338);
      a.lineTo(91, -1333);
      a.lineTo(91, -1333);
      a.lineTo(84, -1338);
      a.closePath();
      a.moveTo(91, -1333);
      a.lineTo(91, -1332);
      a.lineTo(86, -1322);
      a.lineTo(66, -1306);
      a.quadraticCurveTo(-199, -1145, -493, -1114);
      a.quadraticCurveTo(-437, -867, -519, -633);
      a.quadraticCurveTo(-613, -362, -827, -362);
      a.quadraticCurveTo(-942, -362, -1091, -440);
      a.lineTo(-1091, -440);
      a.quadraticCurveTo(-1082, -19, -755, 223);
      a.lineTo(-753, 232);
      a.quadraticCurveTo(-732, 333, -773, 424);
      a.quadraticCurveTo(-1567, 542, -2298, 893);
      a.lineTo(-2308, 896);
      a.quadraticCurveTo(-2333, 906, -2356, 919);
      a.quadraticCurveTo(-2730, 1112, -2942, 1489);
      a.lineTo(-3012, 1594);
      a.lineTo(-3014, 1602);
      a.lineTo(-3015, 1605);
      a.lineTo(-3017, 1607);
      a.lineTo(-3198, 1915);
      a.lineTo(-3206, 1928);
      a.lineTo(-3247, 2007);
      a.quadraticCurveTo(-3365, 2254, -3428, 2646);
      a.quadraticCurveTo(-3504, 3115, -3455, 3824);
      a.quadraticCurveTo(-3423, 3085, -3317, 2713);
      a.quadraticCurveTo(-3212, 2340, -3086, 2095);
      a.quadraticCurveTo(-2960, 1850, -2765, 1537);
      a.quadraticCurveTo(-2570, 1224, -1987, 1021);
      a.quadraticCurveTo(-1612, 889, -1224, 889);
      a.quadraticCurveTo(-1052, 889, -877, 915);
      a.quadraticCurveTo(-435, 978, 5, 1014);
      a.lineTo(11, 1015);
      a.lineTo(12, 1016);
      a.quadraticCurveTo(257, 505, 324, -50);
      a.quadraticCurveTo(389, -597, 188, -1112);
      a.lineTo(118, -1307);
      a.lineTo(116, -1310);
      a.lineTo(104, -1321);
      a.lineTo(108, -1320);
      a.lineTo(91, -1333);
      a.closePath();
      a.moveTo(-3916, 2534);
      a.quadraticCurveTo(-3902, 2891, -3814, 3240);
      a.quadraticCurveTo(-3788, 3542, -3661, 3818);
      a.lineTo(-3633, 3878);
      a.quadraticCurveTo(-3599, 3775, -3622, 3665);
      a.quadraticCurveTo(-3647, 3549, -3637, 3432);
      a.lineTo(-3614, 3127);
      a.quadraticCurveTo(-3689, 3008, -3739, 2878);
      a.quadraticCurveTo(-3792, 2741, -3827, 2594);
      a.lineTo(-3916, 2534);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4341);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle =
        "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(91, -1332);
      a.lineTo(86, -1322);
      a.lineTo(102, -1321);
      a.lineTo(91, -1332);
      a.closePath();
      a.moveTo(91, -1332);
      a.lineTo(84, -1338);
      a.lineTo(79, -1333);
      a.quadraticCurveTo(69, -1324, 86, -1322);
      a.lineTo(66, -1306);
      a.quadraticCurveTo(-199, -1145, -493, -1114);
      a.moveTo(91, -1332);
      a.lineTo(91, -1333);
      a.lineTo(84, -1338);
      a.lineTo(108, -1320);
      a.lineTo(111, -1320);
      a.lineTo(112, -1317);
      a.lineTo(117, -1309);
      a.lineTo(118, -1307);
      a.lineTo(188, -1112);
      a.quadraticCurveTo(389, -597, 324, -50);
      a.quadraticCurveTo(257, 505, 12, 1016);
      a.moveTo(11, 1015);
      a.lineTo(5, 1014);
      a.quadraticCurveTo(-435, 978, -877, 915);
      a.quadraticCurveTo(-1445, 830, -1987, 1021);
      a.quadraticCurveTo(-2570, 1224, -2765, 1537);
      a.quadraticCurveTo(-2960, 1850, -3086, 2095);
      a.quadraticCurveTo(-3212, 2340, -3317, 2713);
      a.quadraticCurveTo(-3423, 3085, -3455, 3824);
      a.quadraticCurveTo(-3422, 4200, -3281, 4549);
      a.quadraticCurveTo(-3580, 4184, -3838, 3794);
      a.quadraticCurveTo(-4164, 3303, -4237, 2722);
      a.quadraticCurveTo(-4304,
        2197, -4272, 1672);
      a.quadraticCurveTo(-4241, 1147, -4016, 671);
      a.quadraticCurveTo(-3757, 121, -3308, -293);
      a.quadraticCurveTo(-2891, -677, -2383, -931);
      a.quadraticCurveTo(-1882, -1179, -1315, -1191);
      a.quadraticCurveTo(-1154, -1194, -1E3, -1154);
      a.quadraticCurveTo(-737, -1089, -493, -1114);
      a.moveTo(104, -1321);
      a.lineTo(102, -1321);
      a.lineTo(118, -1307);
      a.lineTo(116, -1310);
      a.lineTo(104, -1321);
      a.closePath();
      a.moveTo(104, -1321);
      a.lineTo(91, -1333);
      a.moveTo(108, -1320);
      a.lineTo(104, -1321);
      a.moveTo(118, -1307);
      a.lineTo(117, -1309);
      a.lineTo(116, -1310);
      a.lineTo(108, -1320);
      a.moveTo(118, -1307);
      a.lineTo(117, -1309);
      a.lineTo(112, -1317);
      a.moveTo(-3637, 3432);
      a.lineTo(-3614, 3127);
      a.quadraticCurveTo(-3689, 3008, -3739, 2878);
      a.quadraticCurveTo(-3792, 2741, -3827, 2594);
      a.lineTo(-3916, 2534);
      a.quadraticCurveTo(-3902, 2891, -3814, 3240);
      a.lineTo(-3637, 3432);
      a.closePath();
      a.moveTo(-3637, 3432);
      a.quadraticCurveTo(-3647, 3549, -3622, 3665);
      a.quadraticCurveTo(-3599, 3775, -3633, 3878);
      a.lineTo(-3661, 3818);
      a.quadraticCurveTo(-3788, 3542, -3814, 3240)
    }, function(a) {
      a.transform(-0.49,
        0, 0, 0.48, 6058, 4341);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2298, 893);
      a.lineTo(-2308, 896);
      a.moveTo(-2942, 1489);
      a.lineTo(-2834, 1344);
      a.moveTo(13, -1067);
      a.lineTo(114, -1198);
      a.moveTo(-2728, -451);
      a.lineTo(-2623, -534);
      a.moveTo(-3038, -186);
      a.lineTo(-2914, -296);
      a.moveTo(-2049, -868);
      a.lineTo(-1744, -961);
      a.moveTo(-2201, -785);
      a.lineTo(-2116, -833);
      a.moveTo(-2449, -647);
      a.lineTo(-2381, -685);
      a.moveTo(-1022, -608);
      a.lineTo(-1143, -454);
      a.lineTo(-1334, -534);
      a.moveTo(-820, -138);
      a.lineTo(-962, -314);
      a.moveTo(-1517, -978);
      a.lineTo(-1315, -966);
      a.moveTo(-1200, -953);
      a.lineTo(-1013, -913);
      a.moveTo(-1452, -569);
      a.lineTo(-1948, -615);
      a.moveTo(-622, 149);
      a.lineTo(-710, 15);
      a.lineTo(-750, 111);
      a.moveTo(-560, 306);
      a.lineTo(-545, 260);
      a.lineTo(-507, 316);
      a.lineTo(-490, 341);
      a.lineTo(-433, 421);
      a.lineTo(-452, 479);
      a.moveTo(-507, 316);
      a.lineTo(-521, 361);
      a.moveTo(-513, 410);
      a.lineTo(-490, 341);
      a.moveTo(-2445, 1040);
      a.lineTo(-2579, 1159);
      a.moveTo(-3014, 1602);
      a.lineTo(-3012, 1594);
      a.moveTo(-3015, 1605);
      a.lineTo(-3017, 1607);
      a.moveTo(-3206, 1928);
      a.lineTo(-3247, 2007);
      a.moveTo(-3017, 1607);
      a.lineTo(-3102, 1729);
      a.moveTo(-3767, 829);
      a.lineTo(-3671, 627);
      a.moveTo(-3572, 441);
      a.lineTo(-3510, 332);
      a.moveTo(-4030, 1622);
      a.quadraticCurveTo(-4005, 1510, -3973, 1401);
      a.moveTo(-3904, 1178);
      a.lineTo(-3847, 1022);
      a.moveTo(-3372, 2286);
      a.lineTo(-3435, 2507);
      a.moveTo(-3467, 2684);
      a.lineTo(-3501, 2960);
      a.moveTo(-3247, 2007);
      a.lineTo(-3302, 2112);
      a.moveTo(-3521,
        3528);
      a.lineTo(-3528, 3688);
      a.moveTo(-3508, 3098);
      a.lineTo(-3518, 3350);
      a.moveTo(-3289, 52);
      a.lineTo(-3158, -75)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4341);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-3916, 2534);
      a.lineTo(-3827, 2594);
      a.quadraticCurveTo(-3792, 2741, -3739, 2878);
      a.quadraticCurveTo(-3689, 3008, -3614, 3127);
      a.lineTo(-3637, 3432);
      a.quadraticCurveTo(-3647, 3549, -3622, 3665);
      a.quadraticCurveTo(-3599, 3775, -3633, 3878);
      a.lineTo(-3661, 3818);
      a.quadraticCurveTo(-3788, 3542, -3814, 3240);
      a.quadraticCurveTo(-3902,
        2891, -3916, 2534);
      a.closePath();
      a.moveTo(-1293, -1191);
      a.quadraticCurveTo(-1304, -1191, -1315, -1191);
      a.quadraticCurveTo(-1882, -1179, -2383, -931);
      a.quadraticCurveTo(-2891, -677, -3308, -293);
      a.quadraticCurveTo(-3757, 121, -4016, 671);
      a.quadraticCurveTo(-4241, 1147, -4272, 1672);
      a.quadraticCurveTo(-4304, 2197, -4237, 2722);
      a.quadraticCurveTo(-4164, 3303, -3838, 3794);
      a.quadraticCurveTo(-3580, 4184, -3281, 4549);
      a.quadraticCurveTo(-3422, 4200, -3455, 3824);
      a.quadraticCurveTo(-3504, 3115, -3428, 2646);
      a.quadraticCurveTo(-3365, 2254, -3247, 2007);
      a.lineTo(-3206, 1928);
      a.lineTo(-3198, 1915);
      a.lineTo(-3017, 1607);
      a.lineTo(-3015, 1605);
      a.lineTo(-3062, 1481);
      a.lineTo(-3014, 1602);
      a.lineTo(-3012, 1594);
      a.lineTo(-2942, 1489);
      a.quadraticCurveTo(-2730, 1112, -2356, 919);
      a.quadraticCurveTo(-2333, 906, -2308, 896);
      a.lineTo(-2298, 893);
      a.quadraticCurveTo(-1567, 542, -773, 424);
      a.quadraticCurveTo(-732, 333, -753, 232);
      a.lineTo(-755, 223);
      a.quadraticCurveTo(-1082, -19, -1091, -440);
      a.lineTo(-1091, -440);
      a.quadraticCurveTo(-942, -362, -827, -362);
      a.quadraticCurveTo(-613, -362, -519, -633);
      a.quadraticCurveTo(-437, -867, -493, -1114);
      a.lineTo(-493, -1114);
      a.quadraticCurveTo(-561, -1107, -630, -1107);
      a.quadraticCurveTo(-810, -1107, -1E3, -1154);
      a.quadraticCurveTo(-1143, -1191, -1293, -1191);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4341);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(84, -1338);
      a.lineTo(91, -1333);
      a.lineTo(91, -1333);
      a.lineTo(84, -1338);
      a.closePath();
      a.moveTo(91, -1333);
      a.lineTo(91, -1332);
      a.lineTo(86, -1322);
      a.lineTo(66, -1306);
      a.quadraticCurveTo(-199, -1145, -493, -1114);
      a.quadraticCurveTo(-437, -867, -519, -633);
      a.quadraticCurveTo(-613, -362, -827, -362);
      a.quadraticCurveTo(-942, -362, -1091, -440);
      a.lineTo(-1091, -440);
      a.quadraticCurveTo(-1082, -19, -755, 223);
      a.lineTo(-753, 232);
      a.quadraticCurveTo(-732, 333, -773, 424);
      a.quadraticCurveTo(-1567, 542, -2298, 893);
      a.lineTo(-2308, 896);
      a.quadraticCurveTo(-2333, 906, -2356, 919);
      a.quadraticCurveTo(-2730, 1112, -2942, 1489);
      a.lineTo(-3012, 1594);
      a.lineTo(-3014, 1602);
      a.lineTo(-3015, 1605);
      a.lineTo(-3017, 1607);
      a.lineTo(-3198, 1915);
      a.lineTo(-3206, 1928);
      a.lineTo(-3247, 2007);
      a.quadraticCurveTo(-3365, 2254, -3428, 2646);
      a.quadraticCurveTo(-3504, 3115, -3455, 3824);
      a.quadraticCurveTo(-3423, 3085, -3317, 2713);
      a.quadraticCurveTo(-3212, 2340, -3086, 2095);
      a.quadraticCurveTo(-2960, 1850, -2765, 1537);
      a.quadraticCurveTo(-2570, 1224, -1987, 1021);
      a.quadraticCurveTo(-1612, 889, -1224, 889);
      a.quadraticCurveTo(-1052, 889, -877, 915);
      a.quadraticCurveTo(-435, 978, 5, 1014);
      a.lineTo(11, 1015);
      a.lineTo(12, 1016);
      a.quadraticCurveTo(257, 505, 324, -50);
      a.quadraticCurveTo(389, -597, 188, -1112);
      a.lineTo(118, -1307);
      a.lineTo(116, -1310);
      a.lineTo(104, -1321);
      a.lineTo(108, -1320);
      a.lineTo(91, -1333);
      a.closePath();
      a.moveTo(-3916, 2534);
      a.quadraticCurveTo(-3902, 2891, -3814, 3240);
      a.quadraticCurveTo(-3788, 3542, -3661, 3818);
      a.lineTo(-3633, 3878);
      a.quadraticCurveTo(-3599, 3775, -3622, 3665);
      a.quadraticCurveTo(-3647, 3549, -3637, 3432);
      a.lineTo(-3614, 3127);
      a.quadraticCurveTo(-3689, 3008, -3739, 2878);
      a.quadraticCurveTo(-3792, 2741, -3827, 2594);
      a.lineTo(-3916, 2534);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4341);
      a.fillStyle =
        "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(91, -1332);
      a.lineTo(86, -1322);
      a.lineTo(102, -1321);
      a.lineTo(91, -1332);
      a.closePath();
      a.moveTo(91, -1332);
      a.lineTo(84, -1338);
      a.lineTo(79, -1333);
      a.quadraticCurveTo(69, -1324, 86, -1322);
      a.lineTo(66, -1306);
      a.quadraticCurveTo(-199, -1145, -493, -1114);
      a.moveTo(91, -1332);
      a.lineTo(91, -1333);
      a.lineTo(84, -1338);
      a.lineTo(108, -1320);
      a.lineTo(111, -1320);
      a.lineTo(112, -1317);
      a.lineTo(117, -1309);
      a.lineTo(118, -1307);
      a.lineTo(188, -1112);
      a.quadraticCurveTo(389, -597, 324, -50);
      a.quadraticCurveTo(257, 505, 12, 1016);
      a.moveTo(11, 1015);
      a.lineTo(5, 1014);
      a.quadraticCurveTo(-435, 978, -877, 915);
      a.quadraticCurveTo(-1445, 830, -1987, 1021);
      a.quadraticCurveTo(-2570, 1224, -2765, 1537);
      a.quadraticCurveTo(-2960, 1850, -3086, 2095);
      a.quadraticCurveTo(-3212, 2340, -3317, 2713);
      a.quadraticCurveTo(-3423, 3085, -3455, 3824);
      a.quadraticCurveTo(-3422, 4200, -3281, 4549);
      a.quadraticCurveTo(-3580, 4184, -3838, 3794);
      a.quadraticCurveTo(-4164,
        3303, -4237, 2722);
      a.quadraticCurveTo(-4304, 2197, -4272, 1672);
      a.quadraticCurveTo(-4241, 1147, -4016, 671);
      a.quadraticCurveTo(-3757, 121, -3308, -293);
      a.quadraticCurveTo(-2891, -677, -2383, -931);
      a.quadraticCurveTo(-1882, -1179, -1315, -1191);
      a.quadraticCurveTo(-1154, -1194, -1E3, -1154);
      a.quadraticCurveTo(-737, -1089, -493, -1114);
      a.moveTo(104, -1321);
      a.lineTo(102, -1321);
      a.lineTo(118, -1307);
      a.lineTo(116, -1310);
      a.lineTo(104, -1321);
      a.closePath();
      a.moveTo(104, -1321);
      a.lineTo(91, -1333);
      a.moveTo(108, -1320);
      a.lineTo(104, -1321);
      a.moveTo(118, -1307);
      a.lineTo(117, -1309);
      a.lineTo(116, -1310);
      a.lineTo(108, -1320);
      a.moveTo(118, -1307);
      a.lineTo(117, -1309);
      a.lineTo(112, -1317);
      a.moveTo(-3637, 3432);
      a.lineTo(-3614, 3127);
      a.quadraticCurveTo(-3689, 3008, -3739, 2878);
      a.quadraticCurveTo(-3792, 2741, -3827, 2594);
      a.lineTo(-3916, 2534);
      a.quadraticCurveTo(-3902, 2891, -3814, 3240);
      a.lineTo(-3637, 3432);
      a.closePath();
      a.moveTo(-3637, 3432);
      a.quadraticCurveTo(-3647, 3549, -3622, 3665);
      a.quadraticCurveTo(-3599, 3775, -3633, 3878);
      a.lineTo(-3661, 3818);
      a.quadraticCurveTo(-3788,
        3542, -3814, 3240)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4341);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-2298, 893);
      a.lineTo(-2308, 896);
      a.moveTo(-2942, 1489);
      a.lineTo(-2834, 1344);
      a.moveTo(13, -1067);
      a.lineTo(114, -1198);
      a.moveTo(-2728, -451);
      a.lineTo(-2623, -534);
      a.moveTo(-3038, -186);
      a.lineTo(-2914, -296);
      a.moveTo(-2049, -868);
      a.lineTo(-1744, -961);
      a.moveTo(-2201, -785);
      a.lineTo(-2116, -833);
      a.moveTo(-2449, -647);
      a.lineTo(-2381, -685);
      a.moveTo(-1022, -608);
      a.lineTo(-1143, -454);
      a.lineTo(-1334, -534);
      a.moveTo(-820, -138);
      a.lineTo(-962, -314);
      a.moveTo(-1517, -978);
      a.lineTo(-1315, -966);
      a.moveTo(-1200, -953);
      a.lineTo(-1013, -913);
      a.moveTo(-1452, -569);
      a.lineTo(-1948, -615);
      a.moveTo(-622, 149);
      a.lineTo(-710, 15);
      a.lineTo(-750, 111);
      a.moveTo(-560, 306);
      a.lineTo(-545, 260);
      a.lineTo(-507, 316);
      a.lineTo(-490, 341);
      a.lineTo(-433, 421);
      a.lineTo(-452, 479);
      a.moveTo(-507, 316);
      a.lineTo(-521, 361);
      a.moveTo(-513, 410);
      a.lineTo(-490, 341);
      a.moveTo(-2445, 1040);
      a.lineTo(-2579, 1159);
      a.moveTo(-3014, 1602);
      a.lineTo(-3012, 1594);
      a.moveTo(-3015, 1605);
      a.lineTo(-3017, 1607);
      a.moveTo(-3206, 1928);
      a.lineTo(-3247, 2007);
      a.moveTo(-3017, 1607);
      a.lineTo(-3102, 1729);
      a.moveTo(-3767, 829);
      a.lineTo(-3671, 627);
      a.moveTo(-3572, 441);
      a.lineTo(-3510, 332);
      a.moveTo(-4030, 1622);
      a.quadraticCurveTo(-4005, 1510, -3973, 1401);
      a.moveTo(-3904, 1178);
      a.lineTo(-3847, 1022);
      a.moveTo(-3372, 2286);
      a.lineTo(-3435, 2507);
      a.moveTo(-3467, 2684);
      a.lineTo(-3501, 2960);
      a.moveTo(-3247,
        2007);
      a.lineTo(-3302, 2112);
      a.moveTo(-3521, 3528);
      a.lineTo(-3528, 3688);
      a.moveTo(-3508, 3098);
      a.lineTo(-3518, 3350);
      a.moveTo(-3289, 52);
      a.lineTo(-3158, -75)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4513);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-511, -1436);
      a.quadraticCurveTo(-578, -1436, -653, -1410);
      a.quadraticCurveTo(-750, -1377, -878, -1294);
      a.quadraticCurveTo(-1014, -1205, -1087, -1169);
      a.quadraticCurveTo(-1142, -1141, -1188, -1129);
      a.lineTo(-1195, -1127);
      a.quadraticCurveTo(-1384, -945, -1481, -700);
      a.quadraticCurveTo(-1678, -205, -1473, 277);
      a.quadraticCurveTo(-1521, 322, -1569, 348);
      a.quadraticCurveTo(-1611, 370, -1661, 383);
      a.lineTo(-1745, 466);
      a.lineTo(-1847, 564);
      a.quadraticCurveTo(-2008, 702, -2110, 702);
      a.quadraticCurveTo(-2111, 702, -2111, 702);
      a.lineTo(-2111, 702);
      a.quadraticCurveTo(-2018, 720, -1972, 803);
      a.quadraticCurveTo(-1935, 873, -1962, 1012);
      a.lineTo(-1964, 1023);
      a.lineTo(-1839, 1003);
      a.quadraticCurveTo(-1753, 1003, -1721, 1100);
      a.quadraticCurveTo(-1709, 1136, -1698, 1200);
      a.quadraticCurveTo(-1588, 1171, -1445, 1052);
      a.quadraticCurveTo(-1315,
        943, -1245, 847);
      a.quadraticCurveTo(-1218, 904, -1144, 1132);
      a.quadraticCurveTo(-1102, 1238, -1054, 1316);
      a.quadraticCurveTo(-949, 1384, -836, 1437);
      a.quadraticCurveTo(-716, 1494, -588, 1533);
      a.quadraticCurveTo(-310, 1620, -17, 1628);
      a.quadraticCurveTo(12, 1629, 41, 1629);
      a.quadraticCurveTo(299, 1629, 550, 1566);
      a.lineTo(561, 1563);
      a.quadraticCurveTo(702, 1521, 837, 1461);
      a.quadraticCurveTo(1086, 1133, 1238, 753);
      a.quadraticCurveTo(1389, 372, 1301, -51);
      a.quadraticCurveTo(1213, -476, 873, -608);
      a.quadraticCurveTo(873, -608, 873, -608);
      a.lineTo(873, -608);
      a.lineTo(566, -598);
      a.quadraticCurveTo(453, -589, 340, -589);
      a.quadraticCurveTo(43, -589, -245, -649);
      a.quadraticCurveTo(-664, -735, -809, -1138);
      a.quadraticCurveTo(-695, -1325, -506, -1436);
      a.quadraticCurveTo(-508, -1436, -511, -1436);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4513);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-1245, 847);
      a.quadraticCurveTo(-1315, 943, -1445, 1052);
      a.quadraticCurveTo(-1588, 1171, -1698, 1200);
      a.lineTo(-1687, 1276);
      a.quadraticCurveTo(-1643, 1232, -1552, 1204);
      a.lineTo(-1396,
        1163);
      a.lineTo(-1343, 1144);
      a.lineTo(-1303, 1122);
      a.quadraticCurveTo(-1213, 1206, -1113, 1275);
      a.lineTo(-1054, 1316);
      a.quadraticCurveTo(-1102, 1238, -1144, 1132);
      a.quadraticCurveTo(-1218, 904, -1245, 847);
      a.closePath();
      a.moveTo(203, -1627);
      a.quadraticCurveTo(-169, -1627, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.quadraticCurveTo(-664, -735, -245, -649);
      a.quadraticCurveTo(44, -589, 340, -589);
      a.quadraticCurveTo(452, -589, 566, -598);
      a.lineTo(873, -608);
      a.quadraticCurveTo(1213, -476, 1301, -51);
      a.quadraticCurveTo(1389, 372, 1238, 753);
      a.quadraticCurveTo(1086, 1133, 837, 1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275, 1221, 1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632, 1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.quadraticCurveTo(2028, 792, 1933, 741);
      a.quadraticCurveTo(2014, 696, 2103, 683);
      a.lineTo(2103, 672);
      a.quadraticCurveTo(1833, 633, 1624, 483);
      a.lineTo(1581, 451);
      a.lineTo(1585, 439);
      a.quadraticCurveTo(1461, 297, 1434, 244);
      a.lineTo(1432, 240);
      a.quadraticCurveTo(1522, 18, 1560, -281);
      a.quadraticCurveTo(1610, -669, 1341, -1139);
      a.lineTo(1328, -1132);
      a.lineTo(1288, -1126);
      a.quadraticCurveTo(1217, -1126, 1135, -1201);
      a.quadraticCurveTo(1086, -1246, 1043, -1254);
      a.lineTo(1043, -1254);
      a.quadraticCurveTo(1043, -1254, 1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(295, -1627, 203, -1627);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4513);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle =
        "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1585, 439);
      a.lineTo(1624, 483);
      a.moveTo(2096, 874);
      a.lineTo(2111, 876);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(1073, -1208, 1097, -1155);
      a.quadraticCurveTo(1156, -1025, 1034, -893);
      a.moveTo(902, -694);
      a.quadraticCurveTo(924, -747, 959, -798);
      a.moveTo(936, -144);
      a.quadraticCurveTo(910, -212, 893, -271);
      a.moveTo(861, -426);
      a.quadraticCurveTo(856, -473, 859, -512);
      a.quadraticCurveTo(861, -559, 873, -608);
      a.moveTo(-809, -1138);
      a.lineTo(-816, -1126);
      a.quadraticCurveTo(-833, -1073, -838, -1018);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(-88, -1673, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.moveTo(1851, 861);
      a.lineTo(1739, 839);
      a.moveTo(1655, 816);
      a.lineTo(1639, 811);
      a.lineTo(1596, 798);
      a.moveTo(2096, 874);
      a.lineTo(1948, 868);
      a.moveTo(1581, 451);
      a.lineTo(1585, 439);
      a.moveTo(1117, 367);
      a.quadraticCurveTo(1104, 260, 1067, 158);
      a.moveTo(1540, 828);
      a.lineTo(1545,
        810);
      a.lineTo(1552, 783);
      a.lineTo(1574, 664);
      a.moveTo(1581, 451);
      a.lineTo(1581, 557);
      a.moveTo(1047, 885);
      a.quadraticCurveTo(1127, 668, 1124, 467);
      a.moveTo(561, 1563);
      a.lineTo(675, 1471);
      a.moveTo(1433, 1007);
      a.quadraticCurveTo(1485, 954, 1517, 889);
      a.moveTo(930, 1139);
      a.lineTo(1007, 984);
      a.moveTo(773, 1368);
      a.lineTo(858, 1257);
      a.moveTo(1021, 51);
      a.lineTo(974, -51);
      a.moveTo(-811, -775);
      a.lineTo(-831, -855);
      a.moveTo(-730, -579);
      a.quadraticCurveTo(-741, -617, -760, -654);
      a.lineTo(-766, -666);
      a.moveTo(-792, -126);
      a.quadraticCurveTo(-769, -183, -752, -242);
      a.moveTo(-736, -314);
      a.quadraticCurveTo(-725, -372, -720, -431);
      a.moveTo(-926, 49);
      a.lineTo(-903, 76);
      a.lineTo(-839, -27);
      a.moveTo(-982, 129);
      a.lineTo(-962, 156);
      a.lineTo(-940, 126);
      a.lineTo(-903, 76);
      a.lineTo(-897, 85);
      a.lineTo(-854, 145);
      a.moveTo(-962, 156);
      a.lineTo(-951, 168);
      a.lineTo(-894, 217);
      a.moveTo(-1062, 257);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1005, 215, -962, 156);
      a.moveTo(-974, 321);
      a.lineTo(-1022, 288);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1067, 349, -1083, 424);
      a.lineTo(-1077, 424);
      a.lineTo(-998,
        425);
      a.moveTo(-1150, 465);
      a.lineTo(-1092, 471);
      a.lineTo(-1083, 424);
      a.lineTo(-1126, 417);
      a.moveTo(-1092, 471);
      a.lineTo(-982, 473);
      a.moveTo(-1385, 901);
      a.lineTo(-1419, 869);
      a.lineTo(-1445, 843);
      a.moveTo(-1517, 769);
      a.lineTo(-1559, 723);
      a.lineTo(-1581, 699);
      a.lineTo(-1592, 687);
      a.moveTo(-1059, 888);
      a.lineTo(-1087, 752);
      a.moveTo(-1092, 471);
      a.quadraticCurveTo(-1105, 553, -1100, 640);
      a.lineTo(-1093, 641);
      a.quadraticCurveTo(-1039, 646, -1014, 641);
      a.moveTo(-1098, 673);
      a.lineTo(-1100, 640);
      a.lineTo(-1150, 633);
      a.moveTo(-977, 1143);
      a.lineTo(-1024, 1011);
      a.moveTo(-836, 1437);
      a.lineTo(-931, 1253);
      a.moveTo(-1236, 1019);
      a.lineTo(-1326, 952);
      a.moveTo(-1962, 1012);
      a.lineTo(-1801, 916);
      a.lineTo(-1777, 900);
      a.moveTo(-1644, 623);
      a.lineTo(-1697, 548);
      a.moveTo(-1710, 852);
      a.lineTo(-1662, 813);
      a.lineTo(-1595, 756);
      a.moveTo(-1720, 511);
      a.lineTo(-1745, 466)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4513);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1333, -1153);
      a.lineTo(1341, -1139);
      a.quadraticCurveTo(1610, -669, 1560, -281);
      a.quadraticCurveTo(1522, 18, 1432, 240);
      a.moveTo(1624, 483);
      a.quadraticCurveTo(1833, 633, 2103, 672);
      a.lineTo(2103, 683);
      a.quadraticCurveTo(2014, 696, 1933, 741);
      a.quadraticCurveTo(2028, 792, 2096, 874);
      a.moveTo(837, 1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275, 1221, 1473, 1038);
      a.lineTo(1433, 1007);
      a.lineTo(1354, 938);
      a.moveTo(1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632, 1125);
      a.lineTo(1768,
        1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.moveTo(1432, 240);
      a.lineTo(1371, 372);
      a.moveTo(1581, 451);
      a.lineTo(1566, 438);
      a.moveTo(837, 1461);
      a.quadraticCurveTo(702, 1521, 561, 1563);
      a.lineTo(550, 1566);
      a.quadraticCurveTo(270, 1636, -17, 1628);
      a.quadraticCurveTo(-310, 1620, -588, 1533);
      a.quadraticCurveTo(-716, 1494, -836, 1437);
      a.quadraticCurveTo(-949, 1384, -1054, 1316);
      a.lineTo(-1113, 1275);
      a.quadraticCurveTo(-1213, 1206, -1303, 1122);
      a.lineTo(-1343, 1144);
      a.lineTo(-1396,
        1163);
      a.lineTo(-1552, 1204);
      a.quadraticCurveTo(-1643, 1232, -1687, 1276);
      a.lineTo(-1698, 1200);
      a.quadraticCurveTo(-1709, 1136, -1721, 1100);
      a.quadraticCurveTo(-1753, 1003, -1839, 1003);
      a.lineTo(-1964, 1023);
      a.lineTo(-1962, 1012);
      a.quadraticCurveTo(-1935, 873, -1972, 803);
      a.quadraticCurveTo(-2018, 720, -2111, 702);
      a.quadraticCurveTo(-2009, 703, -1847, 564);
      a.lineTo(-1745, 466);
      a.lineTo(-1661, 383);
      a.lineTo(-1630, 353);
      a.moveTo(1624, 483);
      a.lineTo(1581, 451);
      a.moveTo(-1473, 277);
      a.quadraticCurveTo(-1678, -205, -1481, -700);
      a.quadraticCurveTo(-1384, -945, -1195, -1127);
      a.moveTo(-1452, 325);
      a.lineTo(-1473, 277);
      a.moveTo(-1303, 1122);
      a.quadraticCurveTo(-1285, 1110, -1272, 1096);
      a.quadraticCurveTo(-1244, 1065, -1236, 1019);
      a.quadraticCurveTo(-1230, 986, -1235, 946)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 3979);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(-1533, -1810);
      a.lineTo(-1556, -1763);
      a.quadraticCurveTo(-1589, -1690, -1604, -1603);
      a.quadraticCurveTo(-1634, -1434, -1628, -1259);
      a.quadraticCurveTo(-1624, -1128, -1578, -1017);
      a.quadraticCurveTo(-1534, -1127, -1506, -1266);
      a.quadraticCurveTo(-1478, -1406, -1483, -1522);
      a.quadraticCurveTo(-1488, -1638, -1501, -1699);
      a.lineTo(-1533, -1810);
      a.closePath();
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1768, -1635, 1734, -1473);
      a.quadraticCurveTo(1699, -1312, 1677, -1133);
      a.quadraticCurveTo(1655, -955, 1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.quadraticCurveTo(1795, -843, 1815, -911);
      a.quadraticCurveTo(1843, -1010, 1858, -1122);
      a.quadraticCurveTo(1871, -1221, 1872, -1344);
      a.lineTo(1869, -1428);
      a.lineTo(1859, -1535);
      a.lineTo(1858, -1547);
      a.lineTo(1851, -1595);
      a.quadraticCurveTo(1846, -1642, 1823, -1690);
      a.lineTo(1821, -1692);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 3979);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(257, -3296);
      a.quadraticCurveTo(234, -3208, 234, -3032);
      a.quadraticCurveTo(234, -2810, 289, -2652);
      a.quadraticCurveTo(314, -2580, 404, -2402);
      a.lineTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(535, -2385);
      a.quadraticCurveTo(904, -2083, 985, -1597);
      a.quadraticCurveTo(1061, -1141, 982, -686);
      a.quadraticCurveTo(907, -252, 649, 108);
      a.quadraticCurveTo(489, 332, 278, 503);
      a.lineTo(294, 494);
      a.quadraticCurveTo(441, 412, 517, 344);
      a.lineTo(607, 265);
      a.lineTo(685, 215);
      a.quadraticCurveTo(760, 167, 902, 100);
      a.lineTo(903, 99);
      a.quadraticCurveTo(1045, 31, 1189, -109);
      a.lineTo(1197, -117);
      a.lineTo(1261, -184);
      a.lineTo(1294, -218);
      a.lineTo(1358, -293);
      a.quadraticCurveTo(1432, -377, 1482, -474);
      a.quadraticCurveTo(1524, -553, 1548, -641);
      a.lineTo(1563, -680);
      a.quadraticCurveTo(1582, -721, 1627, -728);
      a.lineTo(1706, -722);
      a.lineTo(1712, -725);
      a.quadraticCurveTo(1735, -742, 1743, -770);
      a.lineTo(1754, -811);
      a.lineTo(1754, -811);
      a.quadraticCurveTo(1734, -796, 1711, -789);
      a.lineTo(1665, -781);
      a.quadraticCurveTo(1663, -781, 1662, -781);
      a.quadraticCurveTo(1620, -781, 1589, -807);
      a.quadraticCurveTo(1541, -849, 1540, -985);
      a.quadraticCurveTo(1543, -1069, 1560, -1193);
      a.quadraticCurveTo(1577, -1318, 1596, -1408);
      a.lineTo(1616, -1514);
      a.lineTo(1658, -1645);
      a.quadraticCurveTo(1691, -1743, 1747, -1743);
      a.quadraticCurveTo(1752, -1743, 1757, -1742);
      a.quadraticCurveTo(1794, -1729,
        1821, -1692);
      a.lineTo(1823, -1690);
      a.quadraticCurveTo(1831, -1776, 1821, -1809);
      a.lineTo(1786, -1888);
      a.quadraticCurveTo(1761, -1934, 1704, -1955);
      a.lineTo(1679, -1963);
      a.lineTo(1618, -1967);
      a.quadraticCurveTo(1492, -1830, 1429, -1653);
      a.lineTo(1402, -1578);
      a.quadraticCurveTo(1357, -1711, 1366, -1853);
      a.quadraticCurveTo(1370, -1912, 1400, -1962);
      a.quadraticCurveTo(1309, -1970, 1252, -2008);
      a.lineTo(1243, -2015);
      a.lineTo(1101, -2129);
      a.lineTo(987, -2219);
      a.quadraticCurveTo(939, -2253, 873, -2287);
      a.lineTo(833, -2328);
      a.quadraticCurveTo(730, -2436, 657, -2562);
      a.lineTo(581, -2696);
      a.quadraticCurveTo(534, -2779, 488, -2893);
      a.quadraticCurveTo(442, -3007, 429, -3077);
      a.lineTo(408, -3192);
      a.lineTo(401, -3237);
      a.quadraticCurveTo(394, -3288, 390, -3338);
      a.lineTo(389, -3343);
      a.lineTo(384, -3402);
      a.lineTo(383, -3430);
      a.lineTo(381, -3453);
      a.lineTo(377, -3479);
      a.lineTo(373, -3506);
      a.lineTo(370, -3529);
      a.lineTo(365, -3555);
      a.lineTo(355, -3594);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 3979);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1579, -1967);
      a.lineTo(1505, -1963);
      a.lineTo(1497, -1963);
      a.quadraticCurveTo(1467, -1961, 1439, -1961);
      a.quadraticCurveTo(1418, -1961, 1400, -1962);
      a.quadraticCurveTo(1370, -1912, 1366, -1853);
      a.quadraticCurveTo(1357, -1711, 1402, -1578);
      a.lineTo(1429, -1653);
      a.quadraticCurveTo(1492, -1830, 1618, -1967);
      a.closePath();
      a.moveTo(278, -3664);
      a.lineTo(203, -3566);
      a.lineTo(149, -3489);
      a.lineTo(113, -3449);
      a.lineTo(68, -3405);
      a.lineTo(-1, -3314);
      a.lineTo(-2, -3313);
      a.lineTo(-62, -3219);
      a.lineTo(-111, -3132);
      a.lineTo(-158, -3050);
      a.lineTo(-216, -2952);
      a.lineTo(-249, -2898);
      a.lineTo(-284, -2842);
      a.lineTo(-322, -2782);
      a.lineTo(-354, -2731);
      a.lineTo(-388, -2681);
      a.lineTo(-422, -2631);
      a.lineTo(-481, -2551);
      a.lineTo(-535, -2479);
      a.lineTo(-601, -2397);
      a.lineTo(-678, -2306);
      a.lineTo(-721, -2256);
      a.quadraticCurveTo(-894, -2191, -1046, -2105);
      a.quadraticCurveTo(-1199, -2020, -1302, -1940);
      a.lineTo(-1349, -1966);
      a.quadraticCurveTo(-1397, -1994, -1433, -1994);
      a.quadraticCurveTo(-1474, -1994, -1500, -1957);
      a.quadraticCurveTo(-1498, -1920, -1482, -1886);
      a.lineTo(-1457, -1830);
      a.lineTo(-1454, -1823);
      a.lineTo(-1445, -1802);
      a.lineTo(-1440, -1790);
      a.quadraticCurveTo(-1418, -1735, -1406, -1676);
      a.quadraticCurveTo(-1331, -1314, -1496, -1018);
      a.lineTo(-1526, -969);
      a.lineTo(-1542, -945);
      a.lineTo(-1552, -931);
      a.quadraticCurveTo(-1553, -870, -1511, -841);
      a.quadraticCurveTo(-1500, -833, -1485, -833);
      a.quadraticCurveTo(-1465, -833, -1437, -848);
      a.quadraticCurveTo(-1339, -789, -1327, -697);
      a.quadraticCurveTo(-1315, -606, -1307, -485);
      a.quadraticCurveTo(-1299, -364, -1198, -222);
      a.quadraticCurveTo(-1097, -80, -1037, -7);
      a.quadraticCurveTo(-977,
        64, -857, 170);
      a.lineTo(-600, 393);
      a.quadraticCurveTo(-533, 451, -459, 490);
      a.quadraticCurveTo(-383, 529, -301, 548);
      a.quadraticCurveTo(-202, 571, -101, 571);
      a.quadraticCurveTo(-65, 571, -29, 568);
      a.quadraticCurveTo(-13, 569, 3, 569);
      a.quadraticCurveTo(151, 569, 278, 503);
      a.quadraticCurveTo(489, 332, 649, 108);
      a.quadraticCurveTo(907, -252, 982, -686);
      a.quadraticCurveTo(1061, -1141, 985, -1597);
      a.quadraticCurveTo(904, -2083, 535, -2385);
      a.lineTo(531, -2386);
      a.lineTo(404, -2402);
      a.quadraticCurveTo(314, -2580, 289, -2652);
      a.quadraticCurveTo(234, -2810, 234, -3032);
      a.quadraticCurveTo(234, -3208, 257, -3296);
      a.lineTo(355, -3594);
      a.lineTo(351, -3608);
      a.quadraticCurveTo(341, -3646, 278, -3664);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 3979);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(-1482, -1886);
      a.quadraticCurveTo(-1511, -1851, -1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.lineTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.closePath();
      a.moveTo(1747, -1743);
      a.quadraticCurveTo(1691, -1743, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318, 1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1620, -781, 1662, -781);
      a.quadraticCurveTo(1664, -781, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1752, -1743, 1747, -1743);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 3979);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(365, -3555);
      a.lineTo(370, -3529);
      a.lineTo(373, -3506);
      a.lineTo(377, -3479);
      a.lineTo(381, -3453);
      a.lineTo(383, -3430);
      a.lineTo(384, -3402);
      a.lineTo(389, -3343);
      a.lineTo(390, -3338);
      a.quadraticCurveTo(394, -3288, 401, -3237);
      a.lineTo(408, -3192);
      a.lineTo(429, -3077);
      a.quadraticCurveTo(442, -3007, 488, -2893);
      a.quadraticCurveTo(534, -2779, 581, -2696);
      a.lineTo(657, -2562);
      a.quadraticCurveTo(730, -2436, 833, -2328);
      a.lineTo(873, -2287);
      a.quadraticCurveTo(939, -2253, 987, -2219);
      a.lineTo(1101, -2129);
      a.lineTo(1243, -2015);
      a.lineTo(1252, -2008);
      a.quadraticCurveTo(1309, -1970, 1400, -1962);
      a.quadraticCurveTo(1444, -1959, 1497, -1963);
      a.lineTo(1505, -1963);
      a.lineTo(1579, -1967);
      a.lineTo(1618, -1967);
      a.lineTo(1679, -1963);
      a.lineTo(1704, -1955);
      a.quadraticCurveTo(1761, -1934, 1786, -1888);
      a.lineTo(1821, -1809);
      a.quadraticCurveTo(1831, -1776, 1823, -1690);
      a.quadraticCurveTo(1846, -1642, 1851, -1595);
      a.lineTo(1858, -1547);
      a.lineTo(1859, -1535);
      a.lineTo(1869, -1428);
      a.lineTo(1872, -1344);
      a.quadraticCurveTo(1871, -1221, 1858, -1122);
      a.quadraticCurveTo(1843, -1010, 1815, -911);
      a.quadraticCurveTo(1795, -843, 1754, -811);
      a.lineTo(1743, -770);
      a.quadraticCurveTo(1735, -742, 1712, -725);
      a.lineTo(1706, -722);
      a.lineTo(1627, -728);
      a.quadraticCurveTo(1582, -721, 1563, -680);
      a.lineTo(1548, -641);
      a.quadraticCurveTo(1524, -553, 1482, -474);
      a.quadraticCurveTo(1432, -377, 1358, -293);
      a.lineTo(1294, -218);
      a.lineTo(1261, -184);
      a.lineTo(1197, -117);
      a.lineTo(1189, -109);
      a.quadraticCurveTo(1045, 31, 903, 99);
      a.moveTo(902, 100);
      a.quadraticCurveTo(760, 167, 685, 215);
      a.lineTo(607, 265);
      a.lineTo(517, 344);
      a.quadraticCurveTo(441, 412, 294, 494);
      a.lineTo(278,
        503);
      a.quadraticCurveTo(137, 576, -29, 568);
      a.quadraticCurveTo(-167, 579, -301, 548);
      a.quadraticCurveTo(-383, 529, -459, 490);
      a.quadraticCurveTo(-533, 451, -600, 393);
      a.lineTo(-857, 170);
      a.quadraticCurveTo(-977, 64, -1037, -7);
      a.quadraticCurveTo(-1097, -80, -1198, -222);
      a.quadraticCurveTo(-1299, -364, -1307, -485);
      a.quadraticCurveTo(-1315, -606, -1327, -697);
      a.quadraticCurveTo(-1339, -789, -1437, -848);
      a.quadraticCurveTo(-1485, -823, -1511, -841);
      a.quadraticCurveTo(-1553, -870, -1552, -931);
      a.lineTo(-1542, -945);
      a.lineTo(-1578, -1017);
      a.quadraticCurveTo(-1624, -1128, -1628, -1259);
      a.quadraticCurveTo(-1634, -1434, -1604, -1603);
      a.quadraticCurveTo(-1589, -1690, -1556, -1763);
      a.lineTo(-1533, -1810);
      a.quadraticCurveTo(-1511, -1851, -1482, -1886);
      a.quadraticCurveTo(-1498, -1920, -1500, -1957);
      a.quadraticCurveTo(-1452, -2026, -1349, -1966);
      a.lineTo(-1302, -1940);
      a.quadraticCurveTo(-1199, -2020, -1046, -2105);
      a.quadraticCurveTo(-894, -2191, -721, -2256);
      a.lineTo(-678, -2306);
      a.lineTo(-601, -2397);
      a.lineTo(-535, -2479);
      a.lineTo(-481, -2551);
      a.lineTo(-422, -2631);
      a.lineTo(-388, -2681);
      a.lineTo(-354, -2731);
      a.lineTo(-322, -2782);
      a.lineTo(-284, -2842);
      a.lineTo(-249, -2898);
      a.lineTo(-216, -2952);
      a.lineTo(-158, -3050);
      a.lineTo(-111, -3132);
      a.lineTo(-62, -3219);
      a.lineTo(-2, -3313);
      a.lineTo(-1, -3314);
      a.lineTo(68, -3405);
      a.lineTo(113, -3449);
      a.lineTo(149, -3489);
      a.lineTo(203, -3566);
      a.lineTo(278, -3664);
      a.quadraticCurveTo(341, -3646, 351, -3608);
      a.lineTo(355, -3594);
      a.moveTo(404, -2402);
      a.lineTo(531, -2386);
      a.moveTo(404, -2402);
      a.lineTo(303, -2408);
      a.moveTo(535, -2385);
      a.lineTo(604, -2373);
      a.lineTo(705, -2350);
      a.quadraticCurveTo(788, -2328, 843, -2301);
      a.lineTo(873, -2287);
      a.moveTo(531, -2386);
      a.lineTo(535, -2385);
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1694, -1751, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318, 1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1621, -780, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.closePath();
      a.moveTo(1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.moveTo(-420, -2347);
      a.quadraticCurveTo(-568, -2313, -721, -2256);
      a.moveTo(-420, -2347);
      a.lineTo(-382, -2355);
      a.quadraticCurveTo(-215, -2390, -44, -2398);
      a.moveTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.moveTo(-1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.moveTo(-1302, -1940);
      a.quadraticCurveTo(-1237, -1897, -1172, -1831);
      a.moveTo(-1373, -895);
      a.quadraticCurveTo(-1409, -864, -1437, -848)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 3979);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(903,
        99);
      a.lineTo(902, 100);
      a.moveTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(488, -2488);
      a.moveTo(390, -3338);
      a.quadraticCurveTo(368, -3290, 354, -3242);
      a.moveTo(33, -3088);
      a.lineTo(33, -3128);
      a.lineTo(30, -3177);
      a.moveTo(335, -3159);
      a.quadraticCurveTo(327, -3115, 326, -3071);
      a.moveTo(424, -2649);
      a.lineTo(452, -2577);
      a.moveTo(363, -2815);
      a.lineTo(370, -2795);
      a.lineTo(393, -2732);
      a.moveTo(705, -2350);
      a.lineTo(790, -2265);
      a.moveTo(856, -2190);
      a.lineTo(898, -2140);
      a.moveTo(328, -2981);
      a.lineTo(341, -2898);
      a.moveTo(11, -2889);
      a.lineTo(29, -3013);
      a.moveTo(1164, -1579);
      a.lineTo(1204, -1591);
      a.lineTo(1208, -1591);
      a.quadraticCurveTo(1158, -1743, 1076, -1882);
      a.lineTo(1068, -1895);
      a.moveTo(1310, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1263, -1363);
      a.lineTo(1280, -1237);
      a.lineTo(1307, -1244);
      a.lineTo(1359, -1258);
      a.moveTo(1211, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1239, -1483);
      a.lineTo(1218, -1481);
      a.lineTo(1179, -1475);
      a.moveTo(1347, -1087);
      a.lineTo(1290, -1083);
      a.lineTo(1291, -998);
      a.lineTo(1324, -998);
      a.moveTo(1239, -998);
      a.lineTo(1291, -998);
      a.lineTo(1289, -938);
      a.lineTo(1343, -941);
      a.moveTo(1234, -1083);
      a.lineTo(1276, -1083);
      a.lineTo(1290, -1083);
      a.lineTo(1287, -1146);
      a.lineTo(1280, -1237);
      a.lineTo(1229, -1220);
      a.moveTo(1291, -1594);
      a.lineTo(1208, -1591);
      a.lineTo(1239, -1483);
      a.lineTo(1315, -1485);
      a.moveTo(1234, -938);
      a.lineTo(1246, -938);
      a.lineTo(1289, -938);
      a.lineTo(1284, -855);
      a.moveTo(1334, -683);
      a.lineTo(1264, -689);
      a.lineTo(1253, -630);
      a.moveTo(1206, -703);
      a.lineTo(1249, -693);
      a.lineTo(1264, -689);
      a.lineTo(1275, -761);
      a.moveTo(1281, -476);
      a.lineTo(1214, -476);
      a.lineTo(1204, -445);
      a.moveTo(1159, -490);
      a.lineTo(1191, -479);
      a.lineTo(1214, -476);
      a.lineTo(1233, -543);
      a.moveTo(1161, -336);
      a.lineTo(1147, -306);
      a.quadraticCurveTo(1045, -100, 903, 99);
      a.moveTo(958, -2062);
      a.lineTo(1015, -1979);
      a.moveTo(-55, -2701);
      a.lineTo(-33, -2747);
      a.lineTo(-15, -2791);
      a.moveTo(-160, -2552);
      a.quadraticCurveTo(-124, -2592, -95, -2635);
      a.moveTo(-801, -2035);
      a.lineTo(-771, -2068);
      a.lineTo(-710, -2127);
      a.moveTo(-540, -2261);
      a.lineTo(-420, -2347);
      a.moveTo(-653, -2174);
      a.lineTo(-600, -2217);
      a.moveTo(-369, -2375);
      a.lineTo(-316, -2412);
      a.moveTo(-273, -2445);
      a.lineTo(-208, -2502);
      a.moveTo(-1250, -769);
      a.quadraticCurveTo(-1301, -970, -1270, -1196);
      a.quadraticCurveTo(-1251, -1332, -1185, -1487);
      a.lineTo(-1152, -1557);
      a.moveTo(-1082, -1679);
      a.lineTo(-997, -1800);
      a.lineTo(-857, -1972);
      a.moveTo(-1188, -588);
      a.lineTo(-1182, -573);
      a.quadraticCurveTo(-1161, -588, -1140, -590);
      a.moveTo(-1045, -462);
      a.quadraticCurveTo(-1079, -455, -1116, -429);
      a.lineTo(-1117, -428);
      a.lineTo(-1094, -380);
      a.lineTo(-1091, -382);
      a.lineTo(-1031, -415);
      a.moveTo(-1158, -391);
      a.quadraticCurveTo(-1148, -408, -1117, -428);
      a.lineTo(-1139, -474);
      a.lineTo(-1143, -472);
      a.lineTo(-1182, -443);
      a.moveTo(-1067, -328);
      a.lineTo(-1094, -380);
      a.quadraticCurveTo(-1115, -368, -1122, -360);
      a.moveTo(-1182, -573);
      a.lineTo(-1139, -474);
      a.quadraticCurveTo(-1103, -498, -1073, -508);
      a.moveTo(-1182, -573);
      a.lineTo(-1218, -540);
      a.moveTo(-684, 238);
      a.lineTo(-790, 107);
      a.moveTo(-459, 490);
      a.lineTo(-627, 305);
      a.moveTo(21, -3237);
      a.lineTo(-1, -3314);
      a.moveTo(-849, 29);
      a.lineTo(-933, -93)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 3979);
      a.fillStyle =
        "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 60;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1821, -1692);
      a.lineTo(1823, -1690)
    }]
  }
}

function make_baby_8(b, c) {
  return {
    shapeCompatible: !0,
    paths: [function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4395);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-5841, 425);
      a.lineTo(-5778, 503);
      a.lineTo(-5798, 576);
      a.quadraticCurveTo(-5863, 768, -5823, 964);
      a.lineTo(-6038, 1168);
      a.lineTo(-6139, 1276);
      a.quadraticCurveTo(-6159, 1300, -6172, 1329);
      a.quadraticCurveTo(-6234, 1458, -6345, 1546);
      a.quadraticCurveTo(-6318, 1371, -6260, 1208);
      a.quadraticCurveTo(-6216, 1083, -6126, 980);
      a.lineTo(-6097, 916);
      a.quadraticCurveTo(-6E3, 656, -5841, 425);
      a.closePath();
      a.moveTo(-3382, -1317);
      a.quadraticCurveTo(-3390, -1317, -3398, -1317);
      a.quadraticCurveTo(-3825, -1314, -4236, -1209);
      a.quadraticCurveTo(-4801, -1058, -5266, -690);
      a.quadraticCurveTo(-5731, -324, -6064, 164);
      a.quadraticCurveTo(-6291, 496, -6435, 866);
      a.quadraticCurveTo(-6484, 1008, -6512, 1157);
      a.quadraticCurveTo(-6552, 1370, -6534, 1586);
      a.quadraticCurveTo(-6515, 1821, -6446, 2046);
      a.lineTo(-6394, 2207);
      a.quadraticCurveTo(-6336, 1906, -6175, 1647);
      a.quadraticCurveTo(-6129, 1574, -6076, 1510);
      a.quadraticCurveTo(-5972,
        1336, -5836, 1183);
      a.quadraticCurveTo(-5682, 1013, -5498, 873);
      a.quadraticCurveTo(-5314, 734, -5109, 627);
      a.quadraticCurveTo(-4900, 519, -4676, 452);
      a.quadraticCurveTo(-4544, 409, -4410, 380);
      a.lineTo(-4400, 378);
      a.lineTo(-4177, 337);
      a.quadraticCurveTo(-4022, 310, -3865, 310);
      a.quadraticCurveTo(-3791, 310, -3716, 316);
      a.quadraticCurveTo(-3494, 340, -3282, 411);
      a.lineTo(-2822, 539);
      a.quadraticCurveTo(-2724, 566, -2623, 581);
      a.lineTo(-2501, 585);
      a.quadraticCurveTo(-2277, 580, -2051, 549);
      a.lineTo(-1598, 510);
      a.lineTo(-1136, 485);
      a.quadraticCurveTo(-1114,
        480, -1096, 468);
      a.quadraticCurveTo(-1044, 437, -1058, 378);
      a.quadraticCurveTo(-1058, 356, -1066, 341);
      a.quadraticCurveTo(-1074, 326, -1085, 326);
      a.lineTo(-1176, 260);
      a.quadraticCurveTo(-1261, 209, -1354, 172);
      a.quadraticCurveTo(-1525, 106, -1692, 30);
      a.quadraticCurveTo(-1766, -3, -1825, -58);
      a.quadraticCurveTo(-2007, -230, -2102, -454);
      a.lineTo(-2102, -454);
      a.lineTo(-2087, -451);
      a.quadraticCurveTo(-1954, -394, -1823, -326);
      a.quadraticCurveTo(-1616, -220, -1390, -156);
      a.quadraticCurveTo(-1219, -105, -1043, -105);
      a.quadraticCurveTo(-988, -105, -932, -110);
      a.quadraticCurveTo(-675, -143, -557, -373);
      a.quadraticCurveTo(-456, -572, -485, -796);
      a.lineTo(-485, -796);
      a.quadraticCurveTo(-654, -708, -839, -708);
      a.quadraticCurveTo(-868, -708, -898, -710);
      a.lineTo(-1062, -732);
      a.quadraticCurveTo(-1265, -763, -1466, -819);
      a.quadraticCurveTo(-1619, -860, -1766, -916);
      a.lineTo(-2285, -1110);
      a.quadraticCurveTo(-2810, -1317, -3382, -1317);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4395);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-4, -1310);
      a.quadraticCurveTo(-30, -1229, -80, -1158);
      a.quadraticCurveTo(-242, -930, -485, -796);
      a.quadraticCurveTo(-456, -572, -557, -373);
      a.quadraticCurveTo(-675, -143, -932, -110);
      a.quadraticCurveTo(-988, -105, -1043, -105);
      a.quadraticCurveTo(-1219, -105, -1390, -156);
      a.quadraticCurveTo(-1616, -220, -1823, -326);
      a.quadraticCurveTo(-1954, -394, -2087, -451);
      a.lineTo(-2102, -454);
      a.lineTo(-2102, -454);
      a.quadraticCurveTo(-2007, -230, -1825, -58);
      a.quadraticCurveTo(-1766, -3, -1692, 30);
      a.quadraticCurveTo(-1525, 106, -1354, 172);
      a.quadraticCurveTo(-1261, 209, -1176, 260);
      a.lineTo(-1085, 326);
      a.quadraticCurveTo(-1074, 326, -1066, 341);
      a.quadraticCurveTo(-1058, 356, -1058, 378);
      a.quadraticCurveTo(-1044, 437, -1096, 468);
      a.quadraticCurveTo(-1114, 480, -1136, 485);
      a.lineTo(-1598, 510);
      a.lineTo(-2051, 549);
      a.quadraticCurveTo(-2277, 580, -2501, 585);
      a.lineTo(-2623, 581);
      a.quadraticCurveTo(-2724, 566, -2822, 539);
      a.lineTo(-3282, 411);
      a.quadraticCurveTo(-3494, 340, -3716, 316);
      a.quadraticCurveTo(-3791, 310, -3865, 310);
      a.quadraticCurveTo(-4022, 310, -4177, 337);
      a.lineTo(-4400, 378);
      a.lineTo(-4410, 380);
      a.quadraticCurveTo(-4544,
        409, -4676, 452);
      a.quadraticCurveTo(-4900, 519, -5109, 627);
      a.quadraticCurveTo(-5314, 734, -5498, 873);
      a.quadraticCurveTo(-5682, 1013, -5836, 1183);
      a.quadraticCurveTo(-5972, 1336, -6076, 1510);
      a.lineTo(-5816, 1295);
      a.quadraticCurveTo(-5685, 1191, -5545, 1099);
      a.quadraticCurveTo(-5405, 1007, -5260, 923);
      a.quadraticCurveTo(-5072, 816, -4872, 738);
      a.quadraticCurveTo(-4663, 654, -4443, 608);
      a.quadraticCurveTo(-4223, 563, -4001, 560);
      a.quadraticCurveTo(-3976, 560, -3951, 560);
      a.quadraticCurveTo(-3750, 560, -3552, 588);
      a.quadraticCurveTo(-3357,
        618, -3171, 681);
      a.lineTo(-2833, 790);
      a.lineTo(-2441, 954);
      a.quadraticCurveTo(-2339, 925, -2235, 889);
      a.quadraticCurveTo(-2079, 838, -1913, 823);
      a.lineTo(-1531, 779);
      a.lineTo(-1015, 796);
      a.quadraticCurveTo(-812, 826, -616, 891);
      a.quadraticCurveTo(-443, 951, -271, 1020);
      a.lineTo(-128, 1069);
      a.quadraticCurveTo(-83, 1084, -36, 1085);
      a.lineTo(182, 600);
      a.quadraticCurveTo(363, 187, 361, -265);
      a.quadraticCurveTo(360, -698, 144, -1074);
      a.quadraticCurveTo(76, -1194, -4, -1310);
      a.closePath();
      a.moveTo(-5841, 425);
      a.quadraticCurveTo(-6E3, 656, -6097, 916);
      a.lineTo(-6126, 980);
      a.quadraticCurveTo(-6216, 1083, -6260, 1208);
      a.quadraticCurveTo(-6318, 1371, -6345, 1546);
      a.quadraticCurveTo(-6234, 1458, -6172, 1329);
      a.quadraticCurveTo(-6159, 1300, -6139, 1276);
      a.lineTo(-6038, 1168);
      a.lineTo(-5823, 964);
      a.quadraticCurveTo(-5863, 768, -5798, 576);
      a.lineTo(-5778, 503);
      a.lineTo(-5841, 425);
      a.closePath()
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4395);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-485, -796);
      a.quadraticCurveTo(-680, -694, -898, -710);
      a.lineTo(-1062, -732);
      a.quadraticCurveTo(-1265, -763, -1466, -819);
      a.quadraticCurveTo(-1619, -860, -1766, -916);
      a.lineTo(-2285, -1110);
      a.quadraticCurveTo(-2818, -1320, -3398, -1317);
      a.quadraticCurveTo(-3825, -1314, -4236, -1209);
      a.quadraticCurveTo(-4801, -1058, -5266, -690);
      a.quadraticCurveTo(-5731, -324, -6064, 164);
      a.quadraticCurveTo(-6291, 496, -6435, 866);
      a.quadraticCurveTo(-6484, 1008, -6512, 1157);
      a.quadraticCurveTo(-6552, 1370, -6534, 1586);
      a.quadraticCurveTo(-6515, 1821, -6446, 2046);
      a.lineTo(-6394, 2207);
      a.quadraticCurveTo(-6336, 1906, -6175, 1647);
      a.quadraticCurveTo(-6129, 1574, -6076, 1510);
      a.moveTo(-2833, 790);
      a.lineTo(-2441, 954);
      a.quadraticCurveTo(-2339, 925, -2235, 889);
      a.quadraticCurveTo(-2079, 838, -1913, 823);
      a.lineTo(-1531, 779);
      a.lineTo(-1015, 796);
      a.quadraticCurveTo(-812, 826, -616, 891);
      a.quadraticCurveTo(-443, 951, -271, 1020);
      a.lineTo(-128, 1069);
      a.quadraticCurveTo(-83, 1084, -36, 1085);
      a.lineTo(182, 600);
      a.quadraticCurveTo(363, 187, 361, -265);
      a.quadraticCurveTo(360, -698, 144, -1074);
      a.quadraticCurveTo(76, -1194, -4, -1310);
      a.quadraticCurveTo(-30, -1229, -80, -1158);
      a.quadraticCurveTo(-242, -930, -485, -796);
      a.moveTo(-6076, 1510);
      a.lineTo(-5816, 1295);
      a.quadraticCurveTo(-5685, 1191, -5545, 1099);
      a.quadraticCurveTo(-5405, 1007, -5260, 923);
      a.quadraticCurveTo(-5072, 816, -4872, 738);
      a.quadraticCurveTo(-4663, 654, -4443, 608);
      a.quadraticCurveTo(-4223, 563, -4001, 560);
      a.quadraticCurveTo(-3775, 556, -3552, 588);
      a.quadraticCurveTo(-3357, 618, -3171, 681);
      a.lineTo(-2833,
        790);
      a.moveTo(-6038, 1168);
      a.lineTo(-5823, 964);
      a.quadraticCurveTo(-5863, 768, -5798, 576);
      a.lineTo(-5778, 503);
      a.lineTo(-5841, 425);
      a.quadraticCurveTo(-6E3, 656, -6097, 916);
      a.lineTo(-6126, 980);
      a.lineTo(-6038, 1168);
      a.closePath();
      a.moveTo(-6038, 1168);
      a.lineTo(-6139, 1276);
      a.quadraticCurveTo(-6159, 1300, -6172, 1329);
      a.quadraticCurveTo(-6234, 1458, -6345, 1546);
      a.quadraticCurveTo(-6318, 1371, -6260, 1208);
      a.quadraticCurveTo(-6216, 1083, -6126, 980)
    }, function(a) {
      a.transform(-0.49, 0, 0, 0.48, 6058, 4395);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-5226, -416);
      a.lineTo(-5038, -579);
      a.moveTo(-5645, -53);
      a.lineTo(-5366, -295);
      a.moveTo(-3623, -1083);
      a.lineTo(-3448, -1106);
      a.moveTo(-4006, -1035);
      a.lineTo(-3841, -1056);
      a.moveTo(-4849, -700);
      a.quadraticCurveTo(-4736, -763, -4619, -817);
      a.moveTo(-4449, -892);
      a.lineTo(-4330, -939);
      a.lineTo(-4220, -979);
      a.moveTo(-4410, 380);
      a.lineTo(-4558, 398);
      a.moveTo(-2769, -1060);
      a.lineTo(-2606, -1005);
      a.moveTo(-2994, -1093);
      a.lineTo(-2908, -1089);
      a.moveTo(-2590, -688);
      a.lineTo(-2940, -813);
      a.moveTo(-1868, -779);
      a.lineTo(-1694, -754);
      a.moveTo(-2189, -640);
      a.lineTo(-2280, -539);
      a.lineTo(-2162, -473);
      a.lineTo(-2095, -526);
      a.moveTo(-1176, 260);
      a.lineTo(-1155, 220);
      a.lineTo(-1225, 170);
      a.moveTo(-2122, -450);
      a.lineTo(-2162, -473);
      a.lineTo(-2214, -403);
      a.moveTo(-2175, -857);
      a.lineTo(-1961, -796);
      a.moveTo(-1770, -213);
      a.lineTo(-2028, -391);
      a.moveTo(-2280, -539);
      a.lineTo(-2304, -465);
      a.moveTo(-2484, -639);
      a.lineTo(-2280, -539);
      a.moveTo(-2497, -969);
      a.lineTo(-2282, -894);
      a.moveTo(-1679, -148);
      a.lineTo(-1540, -52);
      a.lineTo(-1477, -115);
      a.moveTo(-1605, -746);
      a.lineTo(-1499, -739);
      a.moveTo(-483, -411);
      a.lineTo(-302, -319);
      a.moveTo(-441, -689);
      a.lineTo(-383, -733);
      a.moveTo(-653, -498);
      a.lineTo(-568, -455);
      a.moveTo(-203, -269);
      a.lineTo(-52, -193);
      a.moveTo(-636, -556);
      a.lineTo(-547, -616);
      a.moveTo(-286, -822);
      a.lineTo(-209, -893);
      a.moveTo(-881, -603);
      a.lineTo(-752, -549);
      a.moveTo(-3291, -1108);
      a.lineTo(-3224, -1104);
      a.moveTo(-130, -967);
      a.lineTo(44, -1121);
      a.moveTo(-1124, 150);
      a.lineTo(-1155, 220);
      a.lineTo(-1064, 285);
      a.lineTo(-1E3, 207);
      a.moveTo(-1058, 378);
      a.lineTo(-1024, 314);
      a.lineTo(-1064, 285);
      a.lineTo(-1085, 326);
      a.moveTo(-1176, 260);
      a.lineTo(-1190, 289);
      a.moveTo(-1092, 346);
      a.lineTo(-1085, 326);
      a.moveTo(-3282, 411);
      a.lineTo(-3392, 434);
      a.moveTo(-954, 242);
      a.lineTo(-1024, 314);
      a.lineTo(-889, 412);
      a.lineTo(-841, 362);
      a.moveTo(-817, 465);
      a.lineTo(-889, 412);
      a.lineTo(-916, 469);
      a.moveTo(-4400, 378);
      a.lineTo(-4410, 380);
      a.moveTo(-3484, 441);
      a.lineTo(-3692, 427);
      a.moveTo(-3808,
        405);
      a.lineTo(-3967, 366);
      a.moveTo(-3270, 409);
      a.lineTo(-3282, 411);
      a.moveTo(-4106, 334);
      a.lineTo(-4276, 361);
      a.moveTo(-5101, 576);
      a.lineTo(-5276, 677);
      a.moveTo(-5401, 768);
      a.lineTo(-5586, 920);
      a.moveTo(-5674, 1001);
      a.lineTo(-5838, 1155);
      a.moveTo(-5957, 1274);
      a.lineTo(-6075, 1388);
      a.moveTo(-4759, 452);
      a.lineTo(-4946, 508);
      a.moveTo(-1339, 92);
      a.quadraticCurveTo(-1439, 20, -1540, -52);
      a.lineTo(-1586, 22)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4395);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-5841, 425);
      a.lineTo(-5778, 503);
      a.lineTo(-5798, 576);
      a.quadraticCurveTo(-5863, 768, -5823, 964);
      a.lineTo(-6038, 1168);
      a.lineTo(-6139, 1276);
      a.quadraticCurveTo(-6159, 1300, -6172, 1329);
      a.quadraticCurveTo(-6234, 1458, -6345, 1546);
      a.quadraticCurveTo(-6318, 1371, -6260, 1208);
      a.quadraticCurveTo(-6216, 1083, -6126, 980);
      a.lineTo(-6097, 916);
      a.quadraticCurveTo(-6E3, 656, -5841, 425);
      a.closePath();
      a.moveTo(-3382, -1317);
      a.quadraticCurveTo(-3390, -1317, -3398, -1317);
      a.quadraticCurveTo(-3825, -1314, -4236, -1209);
      a.quadraticCurveTo(-4801, -1058, -5266, -690);
      a.quadraticCurveTo(-5731, -324, -6064, 164);
      a.quadraticCurveTo(-6291, 496, -6435, 866);
      a.quadraticCurveTo(-6484, 1008, -6512, 1157);
      a.quadraticCurveTo(-6552, 1370, -6534, 1586);
      a.quadraticCurveTo(-6515, 1821, -6446, 2046);
      a.lineTo(-6394, 2207);
      a.quadraticCurveTo(-6336, 1906, -6175, 1647);
      a.quadraticCurveTo(-6129, 1574, -6076, 1510);
      a.quadraticCurveTo(-5972, 1336, -5836, 1183);
      a.quadraticCurveTo(-5682, 1013, -5498, 873);
      a.quadraticCurveTo(-5314, 734, -5109, 627);
      a.quadraticCurveTo(-4900, 519, -4676, 452);
      a.quadraticCurveTo(-4544, 409, -4410, 380);
      a.lineTo(-4400,
        378);
      a.lineTo(-4177, 337);
      a.quadraticCurveTo(-4022, 310, -3865, 310);
      a.quadraticCurveTo(-3791, 310, -3716, 316);
      a.quadraticCurveTo(-3494, 340, -3282, 411);
      a.lineTo(-2822, 539);
      a.quadraticCurveTo(-2724, 566, -2623, 581);
      a.lineTo(-2501, 585);
      a.quadraticCurveTo(-2277, 580, -2051, 549);
      a.lineTo(-1598, 510);
      a.lineTo(-1136, 485);
      a.quadraticCurveTo(-1114, 480, -1096, 468);
      a.quadraticCurveTo(-1044, 437, -1058, 378);
      a.quadraticCurveTo(-1058, 356, -1066, 341);
      a.quadraticCurveTo(-1074, 326, -1085, 326);
      a.lineTo(-1176, 260);
      a.quadraticCurveTo(-1261,
        209, -1354, 172);
      a.quadraticCurveTo(-1525, 106, -1692, 30);
      a.quadraticCurveTo(-1766, -3, -1825, -58);
      a.quadraticCurveTo(-2007, -230, -2102, -454);
      a.lineTo(-2102, -454);
      a.lineTo(-2087, -451);
      a.quadraticCurveTo(-1954, -394, -1823, -326);
      a.quadraticCurveTo(-1616, -220, -1390, -156);
      a.quadraticCurveTo(-1219, -105, -1043, -105);
      a.quadraticCurveTo(-988, -105, -932, -110);
      a.quadraticCurveTo(-675, -143, -557, -373);
      a.quadraticCurveTo(-456, -572, -485, -796);
      a.lineTo(-485, -796);
      a.quadraticCurveTo(-654, -708, -839, -708);
      a.quadraticCurveTo(-868, -708, -898, -710);
      a.lineTo(-1062, -732);
      a.quadraticCurveTo(-1265, -763, -1466, -819);
      a.quadraticCurveTo(-1619, -860, -1766, -916);
      a.lineTo(-2285, -1110);
      a.quadraticCurveTo(-2810, -1317, -3382, -1317);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4395);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-4, -1310);
      a.quadraticCurveTo(-30, -1229, -80, -1158);
      a.quadraticCurveTo(-242, -930, -485, -796);
      a.quadraticCurveTo(-456, -572, -557, -373);
      a.quadraticCurveTo(-675, -143, -932, -110);
      a.quadraticCurveTo(-988, -105, -1043, -105);
      a.quadraticCurveTo(-1219, -105, -1390, -156);
      a.quadraticCurveTo(-1616, -220, -1823, -326);
      a.quadraticCurveTo(-1954, -394, -2087, -451);
      a.lineTo(-2102, -454);
      a.lineTo(-2102, -454);
      a.quadraticCurveTo(-2007, -230, -1825, -58);
      a.quadraticCurveTo(-1766, -3, -1692, 30);
      a.quadraticCurveTo(-1525, 106, -1354, 172);
      a.quadraticCurveTo(-1261, 209, -1176, 260);
      a.lineTo(-1085, 326);
      a.quadraticCurveTo(-1074, 326, -1066, 341);
      a.quadraticCurveTo(-1058, 356, -1058, 378);
      a.quadraticCurveTo(-1044, 437, -1096, 468);
      a.quadraticCurveTo(-1114, 480, -1136, 485);
      a.lineTo(-1598, 510);
      a.lineTo(-2051, 549);
      a.quadraticCurveTo(-2277, 580, -2501, 585);
      a.lineTo(-2623, 581);
      a.quadraticCurveTo(-2724, 566, -2822, 539);
      a.lineTo(-3282, 411);
      a.quadraticCurveTo(-3494, 340, -3716, 316);
      a.quadraticCurveTo(-3791, 310, -3865, 310);
      a.quadraticCurveTo(-4022, 310, -4177, 337);
      a.lineTo(-4400, 378);
      a.lineTo(-4410, 380);
      a.quadraticCurveTo(-4544, 409, -4676, 452);
      a.quadraticCurveTo(-4900, 519, -5109, 627);
      a.quadraticCurveTo(-5314, 734, -5498, 873);
      a.quadraticCurveTo(-5682, 1013, -5836, 1183);
      a.quadraticCurveTo(-5972, 1336, -6076, 1510);
      a.lineTo(-5816, 1295);
      a.quadraticCurveTo(-5685, 1191, -5545, 1099);
      a.quadraticCurveTo(-5405, 1007, -5260, 923);
      a.quadraticCurveTo(-5072, 816, -4872, 738);
      a.quadraticCurveTo(-4663, 654, -4443, 608);
      a.quadraticCurveTo(-4223, 563, -4001, 560);
      a.quadraticCurveTo(-3976, 560, -3951, 560);
      a.quadraticCurveTo(-3750, 560, -3552, 588);
      a.quadraticCurveTo(-3357, 618, -3171, 681);
      a.lineTo(-2833, 790);
      a.lineTo(-2441, 954);
      a.quadraticCurveTo(-2339, 925, -2235, 889);
      a.quadraticCurveTo(-2079, 838, -1913, 823);
      a.lineTo(-1531, 779);
      a.lineTo(-1015, 796);
      a.quadraticCurveTo(-812, 826, -616, 891);
      a.quadraticCurveTo(-443, 951, -271, 1020);
      a.lineTo(-128, 1069);
      a.quadraticCurveTo(-83, 1084, -36, 1085);
      a.lineTo(182, 600);
      a.quadraticCurveTo(363, 187, 361, -265);
      a.quadraticCurveTo(360, -698, 144, -1074);
      a.quadraticCurveTo(76, -1194, -4, -1310);
      a.closePath();
      a.moveTo(-5841, 425);
      a.quadraticCurveTo(-6E3, 656, -6097, 916);
      a.lineTo(-6126, 980);
      a.quadraticCurveTo(-6216, 1083, -6260, 1208);
      a.quadraticCurveTo(-6318, 1371, -6345, 1546);
      a.quadraticCurveTo(-6234, 1458, -6172, 1329);
      a.quadraticCurveTo(-6159,
        1300, -6139, 1276);
      a.lineTo(-6038, 1168);
      a.lineTo(-5823, 964);
      a.quadraticCurveTo(-5863, 768, -5798, 576);
      a.lineTo(-5778, 503);
      a.lineTo(-5841, 425);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4395);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-485, -796);
      a.quadraticCurveTo(-680, -694, -898, -710);
      a.lineTo(-1062, -732);
      a.quadraticCurveTo(-1265, -763, -1466, -819);
      a.quadraticCurveTo(-1619, -860, -1766, -916);
      a.lineTo(-2285, -1110);
      a.quadraticCurveTo(-2818, -1320, -3398, -1317);
      a.quadraticCurveTo(-3825, -1314, -4236, -1209);
      a.quadraticCurveTo(-4801, -1058, -5266, -690);
      a.quadraticCurveTo(-5731, -324, -6064, 164);
      a.quadraticCurveTo(-6291, 496, -6435, 866);
      a.quadraticCurveTo(-6484, 1008, -6512, 1157);
      a.quadraticCurveTo(-6552, 1370, -6534, 1586);
      a.quadraticCurveTo(-6515, 1821, -6446, 2046);
      a.lineTo(-6394, 2207);
      a.quadraticCurveTo(-6336, 1906, -6175, 1647);
      a.quadraticCurveTo(-6129, 1574, -6076, 1510);
      a.moveTo(-2833, 790);
      a.lineTo(-2441, 954);
      a.quadraticCurveTo(-2339, 925, -2235, 889);
      a.quadraticCurveTo(-2079, 838, -1913, 823);
      a.lineTo(-1531, 779);
      a.lineTo(-1015, 796);
      a.quadraticCurveTo(-812, 826, -616, 891);
      a.quadraticCurveTo(-443, 951, -271, 1020);
      a.lineTo(-128, 1069);
      a.quadraticCurveTo(-83, 1084, -36, 1085);
      a.lineTo(182, 600);
      a.quadraticCurveTo(363, 187, 361, -265);
      a.quadraticCurveTo(360, -698, 144, -1074);
      a.quadraticCurveTo(76, -1194, -4, -1310);
      a.quadraticCurveTo(-30, -1229, -80, -1158);
      a.quadraticCurveTo(-242, -930, -485, -796);
      a.moveTo(-6076,
        1510);
      a.lineTo(-5816, 1295);
      a.quadraticCurveTo(-5685, 1191, -5545, 1099);
      a.quadraticCurveTo(-5405, 1007, -5260, 923);
      a.quadraticCurveTo(-5072, 816, -4872, 738);
      a.quadraticCurveTo(-4663, 654, -4443, 608);
      a.quadraticCurveTo(-4223, 563, -4001, 560);
      a.quadraticCurveTo(-3775, 556, -3552, 588);
      a.quadraticCurveTo(-3357, 618, -3171, 681);
      a.lineTo(-2833, 790);
      a.moveTo(-6038, 1168);
      a.lineTo(-5823, 964);
      a.quadraticCurveTo(-5863, 768, -5798, 576);
      a.lineTo(-5778, 503);
      a.lineTo(-5841, 425);
      a.quadraticCurveTo(-6E3, 656, -6097, 916);
      a.lineTo(-6126,
        980);
      a.lineTo(-6038, 1168);
      a.closePath();
      a.moveTo(-6038, 1168);
      a.lineTo(-6139, 1276);
      a.quadraticCurveTo(-6159, 1300, -6172, 1329);
      a.quadraticCurveTo(-6234, 1458, -6345, 1546);
      a.quadraticCurveTo(-6318, 1371, -6260, 1208);
      a.quadraticCurveTo(-6216, 1083, -6126, 980)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 4959, 4395);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(-5226, -416);
      a.lineTo(-5038, -579);
      a.moveTo(-5645, -53);
      a.lineTo(-5366, -295);
      a.moveTo(-3623, -1083);
      a.lineTo(-3448, -1106);
      a.moveTo(-4006, -1035);
      a.lineTo(-3841, -1056);
      a.moveTo(-4849, -700);
      a.quadraticCurveTo(-4736, -763, -4619, -817);
      a.moveTo(-4449, -892);
      a.lineTo(-4330, -939);
      a.lineTo(-4220, -979);
      a.moveTo(-4410, 380);
      a.lineTo(-4558, 398);
      a.moveTo(-2769, -1060);
      a.lineTo(-2606, -1005);
      a.moveTo(-2994, -1093);
      a.lineTo(-2908, -1089);
      a.moveTo(-2590, -688);
      a.lineTo(-2940, -813);
      a.moveTo(-1868, -779);
      a.lineTo(-1694, -754);
      a.moveTo(-2189, -640);
      a.lineTo(-2280, -539);
      a.lineTo(-2162, -473);
      a.lineTo(-2095, -526);
      a.moveTo(-1176, 260);
      a.lineTo(-1155, 220);
      a.lineTo(-1225, 170);
      a.moveTo(-2122, -450);
      a.lineTo(-2162, -473);
      a.lineTo(-2214, -403);
      a.moveTo(-2175, -857);
      a.lineTo(-1961, -796);
      a.moveTo(-1770, -213);
      a.lineTo(-2028, -391);
      a.moveTo(-2280, -539);
      a.lineTo(-2304, -465);
      a.moveTo(-2484, -639);
      a.lineTo(-2280, -539);
      a.moveTo(-2497, -969);
      a.lineTo(-2282, -894);
      a.moveTo(-1679, -148);
      a.lineTo(-1540, -52);
      a.lineTo(-1477, -115);
      a.moveTo(-1605, -746);
      a.lineTo(-1499, -739);
      a.moveTo(-483, -411);
      a.lineTo(-302, -319);
      a.moveTo(-441, -689);
      a.lineTo(-383, -733);
      a.moveTo(-653, -498);
      a.lineTo(-568, -455);
      a.moveTo(-203, -269);
      a.lineTo(-52, -193);
      a.moveTo(-636, -556);
      a.lineTo(-547, -616);
      a.moveTo(-286, -822);
      a.lineTo(-209, -893);
      a.moveTo(-881, -603);
      a.lineTo(-752, -549);
      a.moveTo(-3291, -1108);
      a.lineTo(-3224, -1104);
      a.moveTo(-130, -967);
      a.lineTo(44, -1121);
      a.moveTo(-1124, 150);
      a.lineTo(-1155, 220);
      a.lineTo(-1064, 285);
      a.lineTo(-1E3, 207);
      a.moveTo(-1058, 378);
      a.lineTo(-1024, 314);
      a.lineTo(-1064, 285);
      a.lineTo(-1085, 326);
      a.moveTo(-1176, 260);
      a.lineTo(-1190, 289);
      a.moveTo(-1092, 346);
      a.lineTo(-1085, 326);
      a.moveTo(-3282, 411);
      a.lineTo(-3392, 434);
      a.moveTo(-954, 242);
      a.lineTo(-1024, 314);
      a.lineTo(-889, 412);
      a.lineTo(-841, 362);
      a.moveTo(-817, 465);
      a.lineTo(-889, 412);
      a.lineTo(-916, 469);
      a.moveTo(-4400, 378);
      a.lineTo(-4410, 380);
      a.moveTo(-3484, 441);
      a.lineTo(-3692, 427);
      a.moveTo(-3808, 405);
      a.lineTo(-3967, 366);
      a.moveTo(-3270, 409);
      a.lineTo(-3282, 411);
      a.moveTo(-4106, 334);
      a.lineTo(-4276, 361);
      a.moveTo(-5101, 576);
      a.lineTo(-5276, 677);
      a.moveTo(-5401, 768);
      a.lineTo(-5586,
        920);
      a.moveTo(-5674, 1001);
      a.lineTo(-5838, 1155);
      a.moveTo(-5957, 1274);
      a.lineTo(-6075, 1388);
      a.moveTo(-4759, 452);
      a.lineTo(-4946, 508);
      a.moveTo(-1339, 92);
      a.quadraticCurveTo(-1439, 20, -1540, -52);
      a.lineTo(-1586, 22)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4570);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(-511, -1436);
      a.quadraticCurveTo(-578, -1436, -653, -1410);
      a.quadraticCurveTo(-750, -1377, -878, -1294);
      a.quadraticCurveTo(-1014, -1205, -1087, -1169);
      a.quadraticCurveTo(-1142, -1141, -1188, -1129);
      a.lineTo(-1195, -1127);
      a.quadraticCurveTo(-1384, -945, -1481, -700);
      a.quadraticCurveTo(-1678, -205, -1473, 277);
      a.quadraticCurveTo(-1521, 322, -1569, 348);
      a.quadraticCurveTo(-1611, 370, -1661, 383);
      a.lineTo(-1745, 466);
      a.lineTo(-1847, 564);
      a.quadraticCurveTo(-2008, 702, -2110, 702);
      a.quadraticCurveTo(-2111, 702, -2111, 702);
      a.lineTo(-2111, 702);
      a.quadraticCurveTo(-2018, 720, -1972, 803);
      a.quadraticCurveTo(-1935, 873, -1962, 1012);
      a.lineTo(-1964, 1023);
      a.lineTo(-1839, 1003);
      a.quadraticCurveTo(-1753, 1003, -1721, 1100);
      a.quadraticCurveTo(-1709, 1136, -1698, 1200);
      a.quadraticCurveTo(-1588,
        1171, -1445, 1052);
      a.quadraticCurveTo(-1315, 943, -1245, 847);
      a.quadraticCurveTo(-1218, 904, -1144, 1132);
      a.quadraticCurveTo(-1102, 1238, -1054, 1316);
      a.quadraticCurveTo(-949, 1384, -836, 1437);
      a.quadraticCurveTo(-716, 1494, -588, 1533);
      a.quadraticCurveTo(-310, 1620, -17, 1628);
      a.quadraticCurveTo(12, 1629, 41, 1629);
      a.quadraticCurveTo(299, 1629, 550, 1566);
      a.lineTo(561, 1563);
      a.quadraticCurveTo(702, 1521, 837, 1461);
      a.quadraticCurveTo(1086, 1133, 1238, 753);
      a.quadraticCurveTo(1389, 372, 1301, -51);
      a.quadraticCurveTo(1213, -476, 873, -608);
      a.quadraticCurveTo(873, -608, 873, -608);
      a.lineTo(873, -608);
      a.lineTo(566, -598);
      a.quadraticCurveTo(453, -589, 340, -589);
      a.quadraticCurveTo(43, -589, -245, -649);
      a.quadraticCurveTo(-664, -735, -809, -1138);
      a.quadraticCurveTo(-695, -1325, -506, -1436);
      a.quadraticCurveTo(-508, -1436, -511, -1436);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4570);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(-1245, 847);
      a.quadraticCurveTo(-1315, 943, -1445, 1052);
      a.quadraticCurveTo(-1588, 1171, -1698, 1200);
      a.lineTo(-1687, 1276);
      a.quadraticCurveTo(-1643,
        1232, -1552, 1204);
      a.lineTo(-1396, 1163);
      a.lineTo(-1343, 1144);
      a.lineTo(-1303, 1122);
      a.quadraticCurveTo(-1213, 1206, -1113, 1275);
      a.lineTo(-1054, 1316);
      a.quadraticCurveTo(-1102, 1238, -1144, 1132);
      a.quadraticCurveTo(-1218, 904, -1245, 847);
      a.closePath();
      a.moveTo(203, -1627);
      a.quadraticCurveTo(-169, -1627, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.quadraticCurveTo(-664, -735, -245, -649);
      a.quadraticCurveTo(44, -589, 340, -589);
      a.quadraticCurveTo(452, -589, 566, -598);
      a.lineTo(873, -608);
      a.quadraticCurveTo(1213, -476, 1301, -51);
      a.quadraticCurveTo(1389, 372, 1238, 753);
      a.quadraticCurveTo(1086, 1133, 837, 1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275, 1221, 1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632, 1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.quadraticCurveTo(2028, 792, 1933, 741);
      a.quadraticCurveTo(2014, 696, 2103, 683);
      a.lineTo(2103, 672);
      a.quadraticCurveTo(1833, 633, 1624, 483);
      a.lineTo(1581, 451);
      a.lineTo(1585,
        439);
      a.quadraticCurveTo(1461, 297, 1434, 244);
      a.lineTo(1432, 240);
      a.quadraticCurveTo(1522, 18, 1560, -281);
      a.quadraticCurveTo(1610, -669, 1341, -1139);
      a.lineTo(1328, -1132);
      a.lineTo(1288, -1126);
      a.quadraticCurveTo(1217, -1126, 1135, -1201);
      a.quadraticCurveTo(1086, -1246, 1043, -1254);
      a.lineTo(1043, -1254);
      a.quadraticCurveTo(1043, -1254, 1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(295, -1627, 203, -1627);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4570);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1585, 439);
      a.lineTo(1624, 483);
      a.moveTo(2096, 874);
      a.lineTo(2111, 876);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(1073, -1208, 1097, -1155);
      a.quadraticCurveTo(1156, -1025, 1034, -893);
      a.moveTo(902, -694);
      a.quadraticCurveTo(924, -747, 959, -798);
      a.moveTo(936, -144);
      a.quadraticCurveTo(910, -212, 893, -271);
      a.moveTo(861, -426);
      a.quadraticCurveTo(856, -473, 859, -512);
      a.quadraticCurveTo(861, -559, 873, -608);
      a.moveTo(-809, -1138);
      a.lineTo(-816, -1126);
      a.quadraticCurveTo(-833, -1073, -838, -1018);
      a.moveTo(1043, -1254);
      a.quadraticCurveTo(845, -1562, 389, -1616);
      a.quadraticCurveTo(-88, -1673, -498, -1441);
      a.lineTo(-506, -1436);
      a.quadraticCurveTo(-695, -1325, -809, -1138);
      a.moveTo(1851, 861);
      a.lineTo(1739, 839);
      a.moveTo(1655, 816);
      a.lineTo(1639, 811);
      a.lineTo(1596, 798);
      a.moveTo(2096, 874);
      a.lineTo(1948, 868);
      a.moveTo(1581, 451);
      a.lineTo(1585, 439);
      a.moveTo(1117, 367);
      a.quadraticCurveTo(1104, 260, 1067, 158);
      a.moveTo(1540,
        828);
      a.lineTo(1545, 810);
      a.lineTo(1552, 783);
      a.lineTo(1574, 664);
      a.moveTo(1581, 451);
      a.lineTo(1581, 557);
      a.moveTo(1047, 885);
      a.quadraticCurveTo(1127, 668, 1124, 467);
      a.moveTo(561, 1563);
      a.lineTo(675, 1471);
      a.moveTo(1433, 1007);
      a.quadraticCurveTo(1485, 954, 1517, 889);
      a.moveTo(930, 1139);
      a.lineTo(1007, 984);
      a.moveTo(773, 1368);
      a.lineTo(858, 1257);
      a.moveTo(1021, 51);
      a.lineTo(974, -51);
      a.moveTo(-811, -775);
      a.lineTo(-831, -855);
      a.moveTo(-730, -579);
      a.quadraticCurveTo(-741, -617, -760, -654);
      a.lineTo(-766, -666);
      a.moveTo(-792, -126);
      a.quadraticCurveTo(-769, -183, -752, -242);
      a.moveTo(-736, -314);
      a.quadraticCurveTo(-725, -372, -720, -431);
      a.moveTo(-926, 49);
      a.lineTo(-903, 76);
      a.lineTo(-839, -27);
      a.moveTo(-982, 129);
      a.lineTo(-962, 156);
      a.lineTo(-940, 126);
      a.lineTo(-903, 76);
      a.lineTo(-897, 85);
      a.lineTo(-854, 145);
      a.moveTo(-962, 156);
      a.lineTo(-951, 168);
      a.lineTo(-894, 217);
      a.moveTo(-1062, 257);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1005, 215, -962, 156);
      a.moveTo(-974, 321);
      a.lineTo(-1022, 288);
      a.lineTo(-1034, 279);
      a.quadraticCurveTo(-1067, 349, -1083, 424);
      a.lineTo(-1077, 424);
      a.lineTo(-998, 425);
      a.moveTo(-1150, 465);
      a.lineTo(-1092, 471);
      a.lineTo(-1083, 424);
      a.lineTo(-1126, 417);
      a.moveTo(-1092, 471);
      a.lineTo(-982, 473);
      a.moveTo(-1385, 901);
      a.lineTo(-1419, 869);
      a.lineTo(-1445, 843);
      a.moveTo(-1517, 769);
      a.lineTo(-1559, 723);
      a.lineTo(-1581, 699);
      a.lineTo(-1592, 687);
      a.moveTo(-1059, 888);
      a.lineTo(-1087, 752);
      a.moveTo(-1092, 471);
      a.quadraticCurveTo(-1105, 553, -1100, 640);
      a.lineTo(-1093, 641);
      a.quadraticCurveTo(-1039, 646, -1014, 641);
      a.moveTo(-1098, 673);
      a.lineTo(-1100, 640);
      a.lineTo(-1150,
        633);
      a.moveTo(-977, 1143);
      a.lineTo(-1024, 1011);
      a.moveTo(-836, 1437);
      a.lineTo(-931, 1253);
      a.moveTo(-1236, 1019);
      a.lineTo(-1326, 952);
      a.moveTo(-1962, 1012);
      a.lineTo(-1801, 916);
      a.lineTo(-1777, 900);
      a.moveTo(-1644, 623);
      a.lineTo(-1697, 548);
      a.moveTo(-1710, 852);
      a.lineTo(-1662, 813);
      a.lineTo(-1595, 756);
      a.moveTo(-1720, 511);
      a.lineTo(-1745, 466)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5460, 4570);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin =
        "round";
      a.beginPath();
      a.moveTo(1333, -1153);
      a.lineTo(1341, -1139);
      a.quadraticCurveTo(1610, -669, 1560, -281);
      a.quadraticCurveTo(1522, 18, 1432, 240);
      a.moveTo(1624, 483);
      a.quadraticCurveTo(1833, 633, 2103, 672);
      a.lineTo(2103, 683);
      a.quadraticCurveTo(2014, 696, 1933, 741);
      a.quadraticCurveTo(2028, 792, 2096, 874);
      a.moveTo(837, 1461);
      a.quadraticCurveTo(941, 1414, 1041, 1357);
      a.quadraticCurveTo(1275, 1221, 1473, 1038);
      a.lineTo(1433, 1007);
      a.lineTo(1354, 938);
      a.moveTo(1473, 1038);
      a.lineTo(1504, 1060);
      a.quadraticCurveTo(1571, 1105, 1632,
        1125);
      a.lineTo(1768, 1171);
      a.quadraticCurveTo(1752, 1058, 1868, 1011);
      a.quadraticCurveTo(1984, 963, 2097, 875);
      a.lineTo(2096, 874);
      a.moveTo(1432, 240);
      a.lineTo(1371, 372);
      a.moveTo(1581, 451);
      a.lineTo(1566, 438);
      a.moveTo(837, 1461);
      a.quadraticCurveTo(702, 1521, 561, 1563);
      a.lineTo(550, 1566);
      a.quadraticCurveTo(270, 1636, -17, 1628);
      a.quadraticCurveTo(-310, 1620, -588, 1533);
      a.quadraticCurveTo(-716, 1494, -836, 1437);
      a.quadraticCurveTo(-949, 1384, -1054, 1316);
      a.lineTo(-1113, 1275);
      a.quadraticCurveTo(-1213, 1206, -1303, 1122);
      a.lineTo(-1343,
        1144);
      a.lineTo(-1396, 1163);
      a.lineTo(-1552, 1204);
      a.quadraticCurveTo(-1643, 1232, -1687, 1276);
      a.lineTo(-1698, 1200);
      a.quadraticCurveTo(-1709, 1136, -1721, 1100);
      a.quadraticCurveTo(-1753, 1003, -1839, 1003);
      a.lineTo(-1964, 1023);
      a.lineTo(-1962, 1012);
      a.quadraticCurveTo(-1935, 873, -1972, 803);
      a.quadraticCurveTo(-2018, 720, -2111, 702);
      a.quadraticCurveTo(-2009, 703, -1847, 564);
      a.lineTo(-1745, 466);
      a.lineTo(-1661, 383);
      a.lineTo(-1630, 353);
      a.moveTo(1624, 483);
      a.lineTo(1581, 451);
      a.moveTo(-1473, 277);
      a.quadraticCurveTo(-1678, -205, -1481, -700);
      a.quadraticCurveTo(-1384, -945, -1195, -1127);
      a.moveTo(-1452, 325);
      a.lineTo(-1473, 277);
      a.moveTo(-1303, 1122);
      a.quadraticCurveTo(-1285, 1110, -1272, 1096);
      a.quadraticCurveTo(-1244, 1065, -1236, 1019);
      a.quadraticCurveTo(-1230, 986, -1235, 946)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = "rgba(0,0,0,1.000)";
      a.beginPath();
      a.moveTo(-1533, -1810);
      a.lineTo(-1556, -1763);
      a.quadraticCurveTo(-1589, -1690, -1604, -1603);
      a.quadraticCurveTo(-1634, -1434, -1628, -1259);
      a.quadraticCurveTo(-1624, -1128, -1578, -1017);
      a.quadraticCurveTo(-1534, -1127, -1506, -1266);
      a.quadraticCurveTo(-1478, -1406, -1483, -1522);
      a.quadraticCurveTo(-1488, -1638, -1501, -1699);
      a.lineTo(-1533, -1810);
      a.closePath();
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1768, -1635, 1734, -1473);
      a.quadraticCurveTo(1699, -1312, 1677, -1133);
      a.quadraticCurveTo(1655, -955, 1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.quadraticCurveTo(1795, -843, 1815, -911);
      a.quadraticCurveTo(1843, -1010, 1858, -1122);
      a.quadraticCurveTo(1871, -1221, 1872, -1344);
      a.lineTo(1869, -1428);
      a.lineTo(1859, -1535);
      a.lineTo(1858, -1547);
      a.lineTo(1851, -1595);
      a.quadraticCurveTo(1846, -1642, 1823, -1690);
      a.lineTo(1821, -1692);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = b;
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(257, -3296);
      a.quadraticCurveTo(234, -3208, 234, -3032);
      a.quadraticCurveTo(234, -2810, 289, -2652);
      a.quadraticCurveTo(314, -2580, 404, -2402);
      a.lineTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(535, -2385);
      a.quadraticCurveTo(904, -2083, 985, -1597);
      a.quadraticCurveTo(1061, -1141, 982, -686);
      a.quadraticCurveTo(907, -252, 649, 108);
      a.quadraticCurveTo(489, 332, 278, 503);
      a.lineTo(294, 494);
      a.quadraticCurveTo(441, 412, 517, 344);
      a.lineTo(607, 265);
      a.lineTo(685, 215);
      a.quadraticCurveTo(760, 167, 902, 100);
      a.lineTo(903, 99);
      a.quadraticCurveTo(1045, 31, 1189, -109);
      a.lineTo(1197, -117);
      a.lineTo(1261, -184);
      a.lineTo(1294, -218);
      a.lineTo(1358, -293);
      a.quadraticCurveTo(1432, -377, 1482, -474);
      a.quadraticCurveTo(1524, -553, 1548, -641);
      a.lineTo(1563, -680);
      a.quadraticCurveTo(1582, -721, 1627, -728);
      a.lineTo(1706, -722);
      a.lineTo(1712, -725);
      a.quadraticCurveTo(1735, -742, 1743, -770);
      a.lineTo(1754, -811);
      a.lineTo(1754, -811);
      a.quadraticCurveTo(1734, -796, 1711, -789);
      a.lineTo(1665, -781);
      a.quadraticCurveTo(1663, -781, 1662, -781);
      a.quadraticCurveTo(1620, -781, 1589, -807);
      a.quadraticCurveTo(1541, -849, 1540, -985);
      a.quadraticCurveTo(1543, -1069, 1560, -1193);
      a.quadraticCurveTo(1577, -1318, 1596, -1408);
      a.lineTo(1616, -1514);
      a.lineTo(1658, -1645);
      a.quadraticCurveTo(1691, -1743, 1747, -1743);
      a.quadraticCurveTo(1752, -1743, 1757, -1742);
      a.quadraticCurveTo(1794, -1729, 1821, -1692);
      a.lineTo(1823, -1690);
      a.quadraticCurveTo(1831, -1776, 1821, -1809);
      a.lineTo(1786, -1888);
      a.quadraticCurveTo(1761, -1934, 1704, -1955);
      a.lineTo(1679, -1963);
      a.lineTo(1618, -1967);
      a.quadraticCurveTo(1492, -1830, 1429, -1653);
      a.lineTo(1402, -1578);
      a.quadraticCurveTo(1357, -1711, 1366, -1853);
      a.quadraticCurveTo(1370, -1912, 1400, -1962);
      a.quadraticCurveTo(1309, -1970, 1252, -2008);
      a.lineTo(1243, -2015);
      a.lineTo(1101, -2129);
      a.lineTo(987, -2219);
      a.quadraticCurveTo(939, -2253, 873, -2287);
      a.lineTo(833, -2328);
      a.quadraticCurveTo(730, -2436, 657, -2562);
      a.lineTo(581, -2696);
      a.quadraticCurveTo(534, -2779, 488, -2893);
      a.quadraticCurveTo(442, -3007, 429, -3077);
      a.lineTo(408, -3192);
      a.lineTo(401, -3237);
      a.quadraticCurveTo(394, -3288, 390, -3338);
      a.lineTo(389, -3343);
      a.lineTo(384, -3402);
      a.lineTo(383, -3430);
      a.lineTo(381, -3453);
      a.lineTo(377, -3479);
      a.lineTo(373, -3506);
      a.lineTo(370, -3529);
      a.lineTo(365, -3555);
      a.lineTo(355, -3594);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = c;
      a.beginPath();
      a.moveTo(1579, -1967);
      a.lineTo(1505, -1963);
      a.lineTo(1497, -1963);
      a.quadraticCurveTo(1467, -1961, 1439, -1961);
      a.quadraticCurveTo(1418, -1961, 1400, -1962);
      a.quadraticCurveTo(1370, -1912, 1366, -1853);
      a.quadraticCurveTo(1357, -1711, 1402, -1578);
      a.lineTo(1429, -1653);
      a.quadraticCurveTo(1492, -1830, 1618, -1967);
      a.closePath();
      a.moveTo(278, -3664);
      a.lineTo(203, -3566);
      a.lineTo(149, -3489);
      a.lineTo(113, -3449);
      a.lineTo(68, -3405);
      a.lineTo(-1, -3314);
      a.lineTo(-2, -3313);
      a.lineTo(-62, -3219);
      a.lineTo(-111, -3132);
      a.lineTo(-158, -3050);
      a.lineTo(-216, -2952);
      a.lineTo(-249, -2898);
      a.lineTo(-284, -2842);
      a.lineTo(-322, -2782);
      a.lineTo(-354, -2731);
      a.lineTo(-388, -2681);
      a.lineTo(-422, -2631);
      a.lineTo(-481, -2551);
      a.lineTo(-535, -2479);
      a.lineTo(-601, -2397);
      a.lineTo(-678, -2306);
      a.lineTo(-721, -2256);
      a.quadraticCurveTo(-894, -2191, -1046, -2105);
      a.quadraticCurveTo(-1199, -2020, -1302, -1940);
      a.lineTo(-1349, -1966);
      a.quadraticCurveTo(-1397, -1994, -1433, -1994);
      a.quadraticCurveTo(-1474, -1994, -1500, -1957);
      a.quadraticCurveTo(-1498, -1920, -1482, -1886);
      a.lineTo(-1457, -1830);
      a.lineTo(-1454, -1823);
      a.lineTo(-1445, -1802);
      a.lineTo(-1440, -1790);
      a.quadraticCurveTo(-1418, -1735, -1406, -1676);
      a.quadraticCurveTo(-1331, -1314, -1496, -1018);
      a.lineTo(-1526, -969);
      a.lineTo(-1542, -945);
      a.lineTo(-1552, -931);
      a.quadraticCurveTo(-1553, -870, -1511, -841);
      a.quadraticCurveTo(-1500, -833, -1485, -833);
      a.quadraticCurveTo(-1465, -833, -1437, -848);
      a.quadraticCurveTo(-1339, -789, -1327, -697);
      a.quadraticCurveTo(-1315, -606, -1307, -485);
      a.quadraticCurveTo(-1299, -364, -1198, -222);
      a.quadraticCurveTo(-1097, -80, -1037, -7);
      a.quadraticCurveTo(-977,
        64, -857, 170);
      a.lineTo(-600, 393);
      a.quadraticCurveTo(-533, 451, -459, 490);
      a.quadraticCurveTo(-383, 529, -301, 548);
      a.quadraticCurveTo(-202, 571, -101, 571);
      a.quadraticCurveTo(-65, 571, -29, 568);
      a.quadraticCurveTo(-13, 569, 3, 569);
      a.quadraticCurveTo(151, 569, 278, 503);
      a.quadraticCurveTo(489, 332, 649, 108);
      a.quadraticCurveTo(907, -252, 982, -686);
      a.quadraticCurveTo(1061, -1141, 985, -1597);
      a.quadraticCurveTo(904, -2083, 535, -2385);
      a.lineTo(531, -2386);
      a.lineTo(404, -2402);
      a.quadraticCurveTo(314, -2580, 289, -2652);
      a.quadraticCurveTo(234, -2810, 234, -3032);
      a.quadraticCurveTo(234, -3208, 257, -3296);
      a.lineTo(355, -3594);
      a.lineTo(351, -3608);
      a.quadraticCurveTo(341, -3646, 278, -3664);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = "rgba(255,255,255,1.000)";
      a.beginPath();
      a.moveTo(-1482, -1886);
      a.quadraticCurveTo(-1511, -1851, -1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.lineTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.closePath();
      a.moveTo(1747, -1743);
      a.quadraticCurveTo(1691, -1743, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318, 1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1620, -781, 1662, -781);
      a.quadraticCurveTo(1664, -781, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1752, -1743, 1747, -1743);
      a.closePath()
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 40;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(355, -3594);
      a.lineTo(365, -3555);
      a.lineTo(370, -3529);
      a.lineTo(373, -3506);
      a.lineTo(377, -3479);
      a.lineTo(381, -3453);
      a.lineTo(383, -3430);
      a.lineTo(384, -3402);
      a.lineTo(389, -3343);
      a.lineTo(390, -3338);
      a.quadraticCurveTo(394, -3288, 401, -3237);
      a.lineTo(408, -3192);
      a.lineTo(429, -3077);
      a.quadraticCurveTo(442, -3007, 488, -2893);
      a.quadraticCurveTo(534, -2779, 581, -2696);
      a.lineTo(657, -2562);
      a.quadraticCurveTo(730, -2436, 833, -2328);
      a.lineTo(873, -2287);
      a.quadraticCurveTo(939, -2253, 987, -2219);
      a.lineTo(1101, -2129);
      a.lineTo(1243, -2015);
      a.lineTo(1252, -2008);
      a.quadraticCurveTo(1309, -1970, 1400, -1962);
      a.quadraticCurveTo(1444, -1959, 1497, -1963);
      a.lineTo(1505, -1963);
      a.lineTo(1579, -1967);
      a.lineTo(1618, -1967);
      a.lineTo(1679, -1963);
      a.lineTo(1704, -1955);
      a.quadraticCurveTo(1761, -1934, 1786, -1888);
      a.lineTo(1821, -1809);
      a.quadraticCurveTo(1831, -1776, 1823, -1690);
      a.quadraticCurveTo(1846, -1642, 1851, -1595);
      a.lineTo(1858, -1547);
      a.lineTo(1859, -1535);
      a.lineTo(1869, -1428);
      a.lineTo(1872, -1344);
      a.quadraticCurveTo(1871, -1221, 1858, -1122);
      a.quadraticCurveTo(1843, -1010, 1815, -911);
      a.quadraticCurveTo(1795, -843, 1754, -811);
      a.lineTo(1743, -770);
      a.quadraticCurveTo(1735, -742, 1712, -725);
      a.lineTo(1706, -722);
      a.lineTo(1627, -728);
      a.quadraticCurveTo(1582, -721, 1563, -680);
      a.lineTo(1548, -641);
      a.quadraticCurveTo(1524, -553, 1482, -474);
      a.quadraticCurveTo(1432, -377, 1358, -293);
      a.lineTo(1294, -218);
      a.lineTo(1261, -184);
      a.lineTo(1197, -117);
      a.lineTo(1189, -109);
      a.quadraticCurveTo(1045, 31, 903, 99);
      a.moveTo(902, 100);
      a.quadraticCurveTo(760, 167, 685, 215);
      a.lineTo(607, 265);
      a.lineTo(517, 344);
      a.quadraticCurveTo(441, 412, 294, 494);
      a.lineTo(278,
        503);
      a.quadraticCurveTo(137, 576, -29, 568);
      a.quadraticCurveTo(-167, 579, -301, 548);
      a.quadraticCurveTo(-383, 529, -459, 490);
      a.quadraticCurveTo(-533, 451, -600, 393);
      a.lineTo(-857, 170);
      a.quadraticCurveTo(-977, 64, -1037, -7);
      a.quadraticCurveTo(-1097, -80, -1198, -222);
      a.quadraticCurveTo(-1299, -364, -1307, -485);
      a.quadraticCurveTo(-1315, -606, -1327, -697);
      a.quadraticCurveTo(-1339, -789, -1437, -848);
      a.quadraticCurveTo(-1485, -823, -1511, -841);
      a.quadraticCurveTo(-1553, -870, -1552, -931);
      a.lineTo(-1542, -945);
      a.lineTo(-1578, -1017);
      a.quadraticCurveTo(-1624, -1128, -1628, -1259);
      a.quadraticCurveTo(-1634, -1434, -1604, -1603);
      a.quadraticCurveTo(-1589, -1690, -1556, -1763);
      a.lineTo(-1533, -1810);
      a.quadraticCurveTo(-1511, -1851, -1482, -1886);
      a.quadraticCurveTo(-1498, -1920, -1500, -1957);
      a.quadraticCurveTo(-1452, -2026, -1349, -1966);
      a.lineTo(-1302, -1940);
      a.quadraticCurveTo(-1199, -2020, -1046, -2105);
      a.quadraticCurveTo(-894, -2191, -721, -2256);
      a.lineTo(-678, -2306);
      a.lineTo(-601, -2397);
      a.lineTo(-535, -2479);
      a.lineTo(-481, -2551);
      a.lineTo(-422, -2631);
      a.lineTo(-388, -2681);
      a.lineTo(-354, -2731);
      a.lineTo(-322, -2782);
      a.lineTo(-284, -2842);
      a.lineTo(-249, -2898);
      a.lineTo(-216, -2952);
      a.lineTo(-158, -3050);
      a.lineTo(-111, -3132);
      a.lineTo(-62, -3219);
      a.lineTo(-2, -3313);
      a.lineTo(-1, -3314);
      a.lineTo(68, -3405);
      a.lineTo(113, -3449);
      a.lineTo(149, -3489);
      a.lineTo(203, -3566);
      a.lineTo(278, -3664);
      a.quadraticCurveTo(341, -3646, 351, -3608);
      a.lineTo(355, -3594);
      a.moveTo(404, -2402);
      a.lineTo(531, -2386);
      a.moveTo(404, -2402);
      a.lineTo(303, -2408);
      a.moveTo(535, -2385);
      a.lineTo(604, -2373);
      a.lineTo(705, -2350);
      a.quadraticCurveTo(788, -2328, 843, -2301);
      a.lineTo(873, -2287);
      a.moveTo(531, -2386);
      a.lineTo(535, -2385);
      a.moveTo(1821, -1692);
      a.quadraticCurveTo(1794, -1729, 1757, -1742);
      a.quadraticCurveTo(1694, -1751, 1658, -1645);
      a.lineTo(1616, -1514);
      a.lineTo(1596, -1408);
      a.quadraticCurveTo(1577, -1318, 1560, -1193);
      a.quadraticCurveTo(1543, -1069, 1540, -985);
      a.quadraticCurveTo(1541, -849, 1589, -807);
      a.quadraticCurveTo(1621, -780, 1665, -781);
      a.quadraticCurveTo(1655, -955, 1677, -1133);
      a.quadraticCurveTo(1699, -1312, 1734, -1473);
      a.quadraticCurveTo(1768, -1635, 1821, -1692);
      a.closePath();
      a.moveTo(1665, -781);
      a.lineTo(1711, -789);
      a.quadraticCurveTo(1734, -796, 1754, -811);
      a.moveTo(-420, -2347);
      a.quadraticCurveTo(-568, -2313, -721, -2256);
      a.moveTo(-420, -2347);
      a.lineTo(-382, -2355);
      a.quadraticCurveTo(-215, -2390, -44, -2398);
      a.moveTo(-1542, -945);
      a.lineTo(-1526, -969);
      a.lineTo(-1496, -1018);
      a.quadraticCurveTo(-1331, -1314, -1406, -1676);
      a.quadraticCurveTo(-1418, -1735, -1440, -1790);
      a.lineTo(-1445, -1802);
      a.lineTo(-1454, -1823);
      a.lineTo(-1457, -1830);
      a.lineTo(-1482, -1886);
      a.moveTo(-1533, -1810);
      a.lineTo(-1501, -1699);
      a.quadraticCurveTo(-1488, -1638, -1483, -1522);
      a.quadraticCurveTo(-1478, -1406, -1506, -1266);
      a.quadraticCurveTo(-1534, -1127, -1578, -1017);
      a.moveTo(-1302, -1940);
      a.quadraticCurveTo(-1237, -1897, -1172, -1831);
      a.moveTo(-1373, -895);
      a.quadraticCurveTo(-1409, -864, -1437, -848)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle = "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 28.57;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(903,
        99);
      a.lineTo(902, 100);
      a.moveTo(531, -2386);
      a.lineTo(530, -2389);
      a.lineTo(488, -2488);
      a.moveTo(390, -3338);
      a.quadraticCurveTo(368, -3290, 354, -3242);
      a.moveTo(33, -3088);
      a.lineTo(33, -3128);
      a.lineTo(30, -3177);
      a.moveTo(335, -3159);
      a.quadraticCurveTo(327, -3115, 326, -3071);
      a.moveTo(424, -2649);
      a.lineTo(452, -2577);
      a.moveTo(363, -2815);
      a.lineTo(370, -2795);
      a.lineTo(393, -2732);
      a.moveTo(705, -2350);
      a.lineTo(790, -2265);
      a.moveTo(856, -2190);
      a.lineTo(898, -2140);
      a.moveTo(328, -2981);
      a.lineTo(341, -2898);
      a.moveTo(11, -2889);
      a.lineTo(29, -3013);
      a.moveTo(1164, -1579);
      a.lineTo(1204, -1591);
      a.lineTo(1208, -1591);
      a.quadraticCurveTo(1158, -1743, 1076, -1882);
      a.lineTo(1068, -1895);
      a.moveTo(1310, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1263, -1363);
      a.lineTo(1280, -1237);
      a.lineTo(1307, -1244);
      a.lineTo(1359, -1258);
      a.moveTo(1211, -1428);
      a.lineTo(1251, -1428);
      a.lineTo(1239, -1483);
      a.lineTo(1218, -1481);
      a.lineTo(1179, -1475);
      a.moveTo(1347, -1087);
      a.lineTo(1290, -1083);
      a.lineTo(1291, -998);
      a.lineTo(1324, -998);
      a.moveTo(1239, -998);
      a.lineTo(1291, -998);
      a.lineTo(1289, -938);
      a.lineTo(1343, -941);
      a.moveTo(1234, -1083);
      a.lineTo(1276, -1083);
      a.lineTo(1290, -1083);
      a.lineTo(1287, -1146);
      a.lineTo(1280, -1237);
      a.lineTo(1229, -1220);
      a.moveTo(1291, -1594);
      a.lineTo(1208, -1591);
      a.lineTo(1239, -1483);
      a.lineTo(1315, -1485);
      a.moveTo(1234, -938);
      a.lineTo(1246, -938);
      a.lineTo(1289, -938);
      a.lineTo(1284, -855);
      a.moveTo(1334, -683);
      a.lineTo(1264, -689);
      a.lineTo(1253, -630);
      a.moveTo(1206, -703);
      a.lineTo(1249, -693);
      a.lineTo(1264, -689);
      a.lineTo(1275, -761);
      a.moveTo(1281, -476);
      a.lineTo(1214, -476);
      a.lineTo(1204, -445);
      a.moveTo(1159, -490);
      a.lineTo(1191, -479);
      a.lineTo(1214, -476);
      a.lineTo(1233, -543);
      a.moveTo(1161, -336);
      a.lineTo(1147, -306);
      a.quadraticCurveTo(1045, -100, 903, 99);
      a.moveTo(958, -2062);
      a.lineTo(1015, -1979);
      a.moveTo(-55, -2701);
      a.lineTo(-33, -2747);
      a.lineTo(-15, -2791);
      a.moveTo(-160, -2552);
      a.quadraticCurveTo(-124, -2592, -95, -2635);
      a.moveTo(-801, -2035);
      a.lineTo(-771, -2068);
      a.lineTo(-710, -2127);
      a.moveTo(-540, -2261);
      a.lineTo(-420, -2347);
      a.moveTo(-653, -2174);
      a.lineTo(-600, -2217);
      a.moveTo(-369, -2375);
      a.lineTo(-316, -2412);
      a.moveTo(-273, -2445);
      a.lineTo(-208, -2502);
      a.moveTo(-1250, -769);
      a.quadraticCurveTo(-1301, -970, -1270, -1196);
      a.quadraticCurveTo(-1251, -1332, -1185, -1487);
      a.lineTo(-1152, -1557);
      a.moveTo(-1082, -1679);
      a.lineTo(-997, -1800);
      a.lineTo(-857, -1972);
      a.moveTo(-1188, -588);
      a.lineTo(-1182, -573);
      a.quadraticCurveTo(-1161, -588, -1140, -590);
      a.moveTo(-1045, -462);
      a.quadraticCurveTo(-1079, -455, -1116, -429);
      a.lineTo(-1117, -428);
      a.lineTo(-1094, -380);
      a.lineTo(-1091, -382);
      a.lineTo(-1031, -415);
      a.moveTo(-1158, -391);
      a.quadraticCurveTo(-1148, -408, -1117, -428);
      a.lineTo(-1139, -474);
      a.lineTo(-1143, -472);
      a.lineTo(-1182, -443);
      a.moveTo(-1067, -328);
      a.lineTo(-1094, -380);
      a.quadraticCurveTo(-1115, -368, -1122, -360);
      a.moveTo(-1182, -573);
      a.lineTo(-1139, -474);
      a.quadraticCurveTo(-1103, -498, -1073, -508);
      a.moveTo(-1182, -573);
      a.lineTo(-1218, -540);
      a.moveTo(-684, 238);
      a.lineTo(-790, 107);
      a.moveTo(-459, 490);
      a.lineTo(-627, 305);
      a.moveTo(21, -3237);
      a.lineTo(-1, -3314);
      a.moveTo(-849, 29);
      a.lineTo(-933, -93)
    }, function(a) {
      a.transform(0.48, 0, 0, 0.48, 5486, 4013);
      a.fillStyle =
        "rgba(0,0,0,0)";
      a.strokeStyle = "rgb(0,0,0)";
      a.strokeStyle = "rgba(0,0,0,1.000)";
      a.lineWidth = 60;
      a.lineCap = "round";
      a.lineJoin = "round";
      a.beginPath();
      a.moveTo(1821, -1692);
      a.lineTo(1823, -1690)
    }]
  }
}
Ptero.vectorPathData.adult_mountain_green_0 = make_adult_0("#24894B", "#24B151");
Ptero.vectorPathData.adult_mountain_green_1 = make_adult_1("#24894B", "#24B151");
Ptero.vectorPathData.adult_mountain_green_2 = make_adult_2("#24894B", "#24B151");
Ptero.vectorPathData.adult_mountain_green_3 = make_adult_3("#24894B", "#24B151");
Ptero.vectorPathData.adult_mountain_green_4 = make_adult_4("#24894B", "#24B151");
Ptero.vectorPathData.adult_mountain_green_5 = make_adult_5("#24894B", "#24B151");
Ptero.vectorPathData.adult_mountain_green_6 = make_adult_6("#24894B", "#24B151");
Ptero.vectorPathData.adult_mountain_green_7 = make_adult_7("#24894B", "#24B151");
Ptero.vectorPathData.adult_mountain_green_8 = make_adult_8("#24894B", "#24B151");
Ptero.vectorPathData.adult_mountain_red_0 = make_adult_0("#892427", "#B12432");
Ptero.vectorPathData.adult_mountain_red_1 = make_adult_1("#892427", "#B12432");
Ptero.vectorPathData.adult_mountain_red_2 = make_adult_2("#892427", "#B12432");
Ptero.vectorPathData.adult_mountain_red_3 = make_adult_3("#892427", "#B12432");
Ptero.vectorPathData.adult_mountain_red_4 = make_adult_4("#892427", "#B12432");
Ptero.vectorPathData.adult_mountain_red_5 = make_adult_5("#892427", "#B12432");
Ptero.vectorPathData.adult_mountain_red_6 = make_adult_6("#892427", "#B12432");
Ptero.vectorPathData.adult_mountain_red_7 = make_adult_7("#892427", "#B12432");
Ptero.vectorPathData.adult_mountain_red_8 = make_adult_8("#892427", "#B12432");
Ptero.vectorPathData.baby_mountain_blue_0 = make_baby_0("#2A6598", "#7EBBED");
Ptero.vectorPathData.baby_mountain_blue_1 = make_baby_1("#2A6598", "#7EBBED");
Ptero.vectorPathData.baby_mountain_blue_2 = make_baby_2("#2A6598", "#7EBBED");
Ptero.vectorPathData.baby_mountain_blue_3 = make_baby_3("#2A6598", "#7EBBED");
Ptero.vectorPathData.baby_mountain_blue_4 = make_baby_4("#2A6598", "#7EBBED");
Ptero.vectorPathData.baby_mountain_blue_5 = make_baby_5("#2A6598", "#7EBBED");
Ptero.vectorPathData.baby_mountain_blue_6 = make_baby_6("#2A6598", "#7EBBED");
Ptero.vectorPathData.baby_mountain_blue_7 = make_baby_7("#2A6598", "#7EBBED");
Ptero.vectorPathData.baby_mountain_blue_8 = make_baby_8("#2A6598", "#7EBBED");
Ptero.vectorPathData.baby_mountain_purple_0 = make_baby_0("#6E179E", "#BF56F6");
Ptero.vectorPathData.baby_mountain_purple_1 = make_baby_1("#6E179E", "#BF56F6");
Ptero.vectorPathData.baby_mountain_purple_2 = make_baby_2("#6E179E", "#BF56F6");
Ptero.vectorPathData.baby_mountain_purple_3 = make_baby_3("#6E179E", "#BF56F6");
Ptero.vectorPathData.baby_mountain_purple_4 = make_baby_4("#6E179E", "#BF56F6");
Ptero.vectorPathData.baby_mountain_purple_5 = make_baby_5("#6E179E", "#BF56F6");
Ptero.vectorPathData.baby_mountain_purple_6 = make_baby_6("#6E179E", "#BF56F6");
Ptero.vectorPathData.baby_mountain_purple_7 = make_baby_7("#6E179E", "#BF56F6");
Ptero.vectorPathData.baby_mountain_purple_8 = make_baby_8("#6E179E", "#BF56F6");
Ptero.jsonData = {
  "bg.jpg.json": {
    scale: 1
  },
  "ptero_paths.json": {
    version: 1,
    models: [{
      index: 1,
      enemyType: "baby_mountain_blue",
      points: [{
        t: 0,
        x: -2.2947884147290414,
        y: 1.193586756835941,
        z: 10.947555555555557,
        angle: 0
      }, {
        t: 0.8549533636407102,
        x: -0.7132114045200353,
        y: 0.8258463645176879,
        z: 6.810387956922131,
        angle: 0
      }, {
        t: 3.836363636363638,
        x: -0.09529382104221854,
        y: -0.077237115561657,
        z: 1.5404444444444463,
        angle: 0
      }]
    }, {
      index: 3,
      enemyType: "baby_mountain_purple",
      points: [{
        t: 0.43636363636363634,
        x: -1.486476870050065,
        y: 2.4712404887478714,
        z: 10.947555555555557,
        angle: 0
      }, {
        t: 1.5822260909134382,
        x: 0.1464900312097089,
        y: 0.9393918371612391,
        z: 6.810387956922131,
        angle: 0
      }, {
        t: 3.43636363636364,
        x: 0.28994963417342046,
        y: 0.07319128123683048,
        z: 1.5404444444444463,
        angle: 0
      }]
    }, {
      index: 4,
      enemyType: "adult_mountain_green",
      points: [{
        t: 0.9818181818181818,
        x: 0.9048733805663175,
        y: 3.5263678554768534,
        z: 10.542222222222223,
        angle: 0
      }, {
        t: 2.9500679090907465,
        x: -0.05284954383132838,
        y: 0.8682151870289996,
        z: 7.254459976645942,
        angle: 0
      }, {
        t: 5.218181818181819,
        x: 0,
        y: 0,
        z: 1.9457777777777796,
        angle: 0
      }]
    }]
  },
  "swf/pteros/baby_mountain_purple/3.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/baby_mountain_purple/7.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/baby_mountain_blue/8.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/adult_mountain_green/8.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/adult_mountain_green/6.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/baby_mountain_purple/2.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/baby_mountain_blue/4.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/baby_mountain_purple/1.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/baby_mountain_blue/6.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/adult_mountain_red/0.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/adult_mountain_red/1.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/adult_mountain_green/3.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/baby_mountain_purple/0.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/adult_mountain_red/3.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/baby_mountain_purple/5.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/adult_mountain_green/5.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/adult_mountain_green/4.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/adult_mountain_red/5.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/adult_mountain_red/8.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/baby_mountain_blue/1.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/baby_mountain_blue/5.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/baby_mountain_blue/0.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/adult_mountain_red/6.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/baby_mountain_blue/3.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/baby_mountain_purple/6.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/baby_mountain_purple/4.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/adult_mountain_green/7.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/adult_mountain_red/4.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/adult_mountain_green/1.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/baby_mountain_purple/8.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/adult_mountain_red/2.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/adult_mountain_green/2.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/baby_mountain_blue/2.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/baby_mountain_blue/7.svg.json": {
    width: 11E3,
    vector: !0,
    scale: 0.09,
    height: 8E3
  },
  "swf/pteros/adult_mountain_red/7.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  },
  "swf/pteros/adult_mountain_green/0.svg.json": {
    width: 3E4,
    vector: !0,
    scale: 0.072,
    height: 2E4
  }
};
Ptero.assets = function() {
  function b(b) {
    var c, h = [],
      g;
    for (c = 0; 9 > c; c++) g = b + "_" + c, h.push(g), a[g] = "swf/pteros/" + b + "/" + c + ".svg";
    d[b] = {
      fps: 12,
      frames: h,
      cached: !1
    };
    c = 1;
    "baby" == b ? c = 1 : b.match(/^baby_/) ? c = 2 : b.match(/^adult/) && (c = 3);
    Ptero.enemyTypes[b] = {
      health: c,
      damage: 1,
      spriteName: b
    }
  }
  var c = {
      bg: "bg.jpg"
    },
    a = {},
    d = {};
  Ptero.enemyTypes = {};
  b("baby_mountain_blue");
  b("baby_mountain_purple");
  b("adult_mountain_red");
  b("adult_mountain_green");
  var h = {
    ptero_paths: "ptero_paths.json"
  };
  (function() {
    for (var b in c) h[b] = c[b] + ".json";
    for (b in a) h[b] = a[b] + ".json"
  })();
  var g = {},
    k = {},
    s = {},
    q = {};
  return {
    json: g,
    load: function(b) {
      function d() {
        t++;
        if (t == p) {
          for (var h in c) {
            var e = h,
              m = g[e];
            q[e] || (console.log("creating sprite", e), q[e] = new Ptero.Sprite(k[e], m))
          }
          for (h in a) e = h, m = g[e], Ptero.vectorPathData[e] || console.error("vector path data not found for", e), m.vectorPathData = Ptero.vectorPathData[e], s[e] = new Ptero.VectorSprite(m);
          b && b()
        }
      }
      var p = 0;
      for (m in c) p++;
      for (m in h) p++;
      var t = 0,
        r, m, u;
      for (m in c) k[m] ? d() : (u = c[m], console.log("image", m, u), r = new Image,
        r.src = u, r.onerror = function(a) {
          return function() {
            console.error("couldn't load image: " + a)
          }
        }(m), r.onload = function(a) {
          return function() {
            console.log("loaded image: " + a);
            d()
          }
        }(m), k[m] = r);
      for (m in h) g[m] || (u = h[m], g[m] = Ptero.jsonData[u], console.log("pre-loaded json: " + m)), d()
    },
    images: k,
    vectorSprites: s,
    sprites: q,
    makeAnimSprite: function(a) {
      a = d[a];
      var b = {};
      a && (b.vectorAnim = a);
      return new Ptero.AnimSprite(b)
    }
  }
}();
Ptero.Billboard = function(b, c, a, d, h) {
  this.setCenter(b, c);
  this.setSize(a, d);
  this.scale = void 0 == h ? 1 : h
};
Ptero.Billboard.prototype = {
  setSize: function(b, c) {
    this.w = b;
    this.h = c
  },
  setCenter: function(b, c) {
    this.centerX = b;
    this.centerY = c
  },
  normalizePos: function(b, c) {
    var a = void 0 == b.z ? "window" : "space";
    if (a == c) return b;
    if ("window" == a && "space" == c) return Ptero.screen.windowToSpace(b);
    if ("space" == a && "window" == c) return Ptero.screen.spaceToWindow(b)
  },
  getTileSpaceRect: function(b, c, a, d, h) {
    b = this.normalizePos(b, "space");
    var g = this.scale / Ptero.frustum.scale;
    d *= g;
    var k = h * g;
    c = b.x - this.centerX * g + c * g;
    a = b.y - this.centerY * g + (this.h -
      (a + h)) * g;
    h = b.z;
    return {
      w: d,
      h: k,
      x: c,
      y: a,
      z: h,
      bl: {
        x: c,
        y: a,
        z: h
      },
      br: {
        x: c + d,
        y: a,
        z: h
      },
      tl: {
        x: c,
        y: a + k,
        z: h
      },
      tr: {
        x: c + d,
        y: a + k,
        z: h
      }
    }
  },
  getSpaceRect: function(b) {
    var c = this.normalizePos(b, "space"),
      a = this.scale / Ptero.frustum.scale;
    b = this.w * a;
    var d = this.h * a,
      h = c.x - this.centerX * a,
      a = c.y - this.centerY * a,
      c = c.z;
    return {
      w: b,
      h: d,
      x: h,
      y: a,
      z: c,
      bl: {
        x: h,
        y: a,
        z: c
      },
      br: {
        x: h + b,
        y: a,
        z: c
      },
      tl: {
        x: h,
        y: a + d,
        z: c
      },
      tr: {
        x: h + b,
        y: a + d,
        z: c
      }
    }
  },
  getNearRect: function(b) {
    var c = this.normalizePos(b, "space");
    b = this.scale / Ptero.frustum.scale / b.z * Ptero.frustum.near;
    return {
      w: this.w * b,
      h: this.h * b,
      x: c.x - this.centerX * b,
      y: c.y - this.centerY * b,
      z: Ptero.frustum.near
    }
  },
  getWindowSize: function() {
    return {
      w: this.w * this.scale,
      h: this.h * this.scale
    }
  },
  getWindowRect: function(b) {
    var c = this.normalizePos(b, "window");
    b = this.normalizePos(b, "space");
    b = this.scale / b.z * Ptero.frustum.near;
    return {
      centerX: c.x,
      centerY: c.y,
      w: this.w * b,
      h: this.h * b,
      x: c.x - this.centerX * b,
      y: c.y - this.centerY * b
    }
  },
  getCanvasRect: function(b) {
    var c = this.normalizePos(b, "window");
    b = this.normalizePos(b, "space");
    c = Ptero.screen.windowToCanvas(c.x,
      c.y);
    b = this.scale / b.z * Ptero.frustum.near * Ptero.screen.getWindowScale();
    return {
      centerX: c.x,
      centerY: c.y,
      w: this.w * b,
      h: this.h * b,
      x: c.x - this.centerX * b,
      y: c.y - this.centerY * b
    }
  },
  getRelativeCursor: function(b, c, a) {
    var d = this.getWindowRect(a),
      h = d.y + d.h / 2;
    b -= d.x + d.w / 2;
    c -= h;
    if (a.angle) {
      var h = Math.cos(-a.angle),
        g = Math.sin(-a.angle);
      a = b * h - c * g;
      b = b * g + c * h
    } else a = b, b = c;
    a += d.w / 2;
    b += d.h / 2;
    return {
      x: a,
      y: b
    }
  },
  isInsideWindowRect: function(b, c, a) {
    var d = this.getWindowRect(a);
    b = this.getRelativeCursor(b, c, a);
    return 0 <= b.x && b.x <=
      d.w && 0 <= b.y && b.y <= d.h ? !0 : !1
  },
  isInsideCanvasRect: function(b, c, a) {
    a = this.getCanvasRect(a);
    return a.x <= b && b <= a.x + a.w && a.y <= c && c <= a.y + a.h
  },
  setBottomSide: function(b, c) {
    var a = this.getWindowRect(c);
    b = Math.max(a.y + 1, b);
    var d = this.centerY / this.h;
    this.h = (b - a.y) / this.scale;
    this.centerY = this.h * d;
    c.y = a.y + this.centerY * this.scale
  },
  setTopSide: function(b, c) {
    var a = this.getWindowRect(c);
    b = Math.min(a.y + a.h - 1, b);
    var d = this.centerY / this.h;
    this.h = (a.y + a.h - b) / this.scale;
    this.centerY = this.h * d;
    c.y = b + this.centerY * this.scale
  },
  setLeftSide: function(b, c) {
    var a = this.getWindowRect(c);
    b = Math.min(a.x + a.w - 1, b);
    var d = this.centerX / this.w;
    this.w = (a.x + a.w - b) / this.scale;
    this.centerX = this.w * d;
    c.x = b + this.centerX * this.scale
  },
  setRightSide: function(b, c) {
    var a = this.getWindowRect(c);
    b = Math.max(a.x + 1, b);
    var d = this.centerX / this.w;
    this.w = (b - a.x) / this.scale;
    this.centerX = this.w * d;
    c.x = a.x + this.centerX * this.scale
  },
  isOverRotationHandle: function(b, c, a) {
    var d = this.getWindowRect(a);
    b = this.getRelativeCursor(b, c, a);
    d = d.w / 2 - b.x;
    b = 0 - b.y;
    return 64 >= d * d +
      b * b
  },
  transform: function(b, c) {
    var a = this.getWindowRect(c);
    b.translate(a.x, a.y);
    a = a.w / this.w;
    b.scale(a, a)
  },
  fill: function(b, c) {
    var a = this.getWindowRect(c);
    b.fillRect(a.x, a.y, a.w, a.h)
  }
};
Ptero.painter = function() {
  function b(b, c, g, k, s) {
    a && (b.strokeStyle = "#F00", b.lineWidth = 2, b.strokeRect(c, g, k, s))
  }

  function c(a, c, g, k, s, q, l, e) {
    var p = e.getWindowRect(g);
    e = p.x;
    var t = p.y,
      r = p.w,
      m = p.h,
      u = p.centerX,
      p = p.centerY;
    (g = g.angle) ? (a.save(), a.translate(u, p), a.rotate(g), e -= u, t -= p, a.drawImage(c, k, s, q, l, e, t, r, m), b(a, e, t, r, m), a.restore()) : (a.drawImage(c, k, s, q, l, e, t, r, m), b(a, e, t, r, m))
  }
  var a = !1;
  return {
    drawImageFrameToSubRegion: function(a, c, g, k, s, q, l, e, p, t) {
      var r = e.getWindowRect(g),
        m = r.x,
        u = r.y,
        v = r.w,
        w = r.h;
      p =
        m + p / e.w * v;
      t = u + t / e.h * w;
      var x = q / e.w * v;
      e = l / e.h * w;
      (g = g.angle) ? (m = r.centerX, r = r.centerY, a.save(), a.translate(m, r), a.rotate(g), p -= m, t -= r, a.drawImage(c, k, s, q, l, p, t, x, e), b(a, p, t, x, e), a.restore()) : (a.drawImage(c, k, s, q, l, p, t, x, e), b(a, p, t, x, e), b(a, m, u, v, w))
    },
    drawImageFrame: c,
    drawImage: function(a, b, g, k) {
      c(a, b, g, 0, 0, b.width, b.height, k)
    },
    drawBorder: function(a, b, c, k, s) {
      var q = k.getWindowRect(b);
      k = q.x;
      var l = q.y,
        e = q.w,
        p = q.h,
        t = q.centerX,
        q = q.centerY;
      if (b = b.angle) a.save(), a.translate(t, q), a.rotate(b), k -= t, l -= q;
      a.strokeStyle =
        c;
      a.lineWidth = 2;
      s ? (a.beginPath(), a.moveTo(k + e / 2 - 4, l), a.lineTo(k, l), a.lineTo(k, l + p), a.lineTo(k + e, l + p), a.lineTo(k + e, l), a.lineTo(k + e / 2 + 4, l), a.arc(k + e / 2, l, 4, 0, 2 * Math.PI), a.stroke()) : a.strokeRect(k, l, e, p);
      b && a.restore()
    },
    moveTo: function(a, b) {
      var c = Ptero.screen.spaceToWindow(b);
      a.moveTo(c.x, c.y)
    },
    lineTo: function(a, b) {
      var c = Ptero.screen.spaceToWindow(b);
      a.lineTo(c.x, c.y)
    },
    setDebugOutline: function(b) {
      a = b
    },
    toggleDebugOutline: function() {
      a = !a
    },
    isDebugOutline: function() {
      return a
    }
  }
}();
Ptero.setScene = function(b) {
  Ptero.scene = b;
  b.init()
};
Ptero.executive = function() {
  function b(h) {
    try {
      var g = void 0 == c ? 0 : Math.min((h - c) / 1E3, 1 / a);
      c = h;
      var k = Ptero.scene;
      d += g;
      k.setTime(d);
      k.draw();
      requestAnimationFrame(b)
    } catch (s) {
      console.error(s.message + "@" + s.sourceURL), console.error(s.stack)
    }
  }
  var c, a = 20,
    d = 0;
  return {
    start: function() {
      requestAnimationFrame(b)
    }
  }
}();
Ptero.screen = function() {
  function b(a) {
    a > 16 / 9 ? (t = 1280, r = t / a) : (r = 720, t = r * a);
    p = a;
    Ptero.frustum = new Ptero.Frustum(1, 20, 30 * Math.PI / 180, 16 / 9);
    Ptero.frustum.scale = r / Ptero.frustum.nearHeight
  }

  function c(a, b) {
    q = a - t / 2 * e;
    l = b - r / 2 * e
  }

  function a() {
    return k / r
  }

  function d(a, d) {
    m.width = g = a;
    m.height = k = d;
    s = a / d;
    b(s);
    e = p > 16 / 9 ? g / t : k / r;
    c(g / 2, k / 2)
  }

  function h(a, b) {
    return {
      x: (a - q) / e,
      y: (b - l) / e
    }
  }
  var g, k, s, q, l, e, p, t, r = 720,
    m, u, v;
  return {
    init: function(a, b, c) {
      m = a;
      u = m.getContext("2d");
      d(b, c)
    },
    getCanvas: function() {
      return m
    },
    getCtx: function() {
      return u
    },
    setBorderSize: function(a) {
      v = a
    },
    getCanvasWidth: function() {
      return g
    },
    getCanvasHeight: function() {
      return k
    },
    getCanvasAspect: function() {
      return s
    },
    getWindowWidth: function() {
      return t
    },
    getWindowHeight: function() {
      return r
    },
    getWindowAspect: function() {
      return p
    },
    spaceToWindow: function(a) {
      a = Ptero.frustum.projectToNear({
        x: a.x,
        y: a.y,
        z: a.z
      });
      return new Ptero.Vector(1280 * (a.x / Ptero.frustum.nearWidth + 0.5) - (1280 - t) / 2, 720 * (-a.y / Ptero.frustum.nearHeight + 0.5))
    },
    windowToSpace: function(a) {
      return new Ptero.Vector((a.x / t -
        0.5) * Ptero.frustum.nearWidth, -(a.y / r - 0.5) * Ptero.frustum.nearHeight, Ptero.frustum.near)
    },
    canvasToWindow: h,
    windowToCanvas: function(a, b) {
      return {
        x: q + a * e,
        y: l + b * e
      }
    },
    resizeCanvas: d,
    getCanvasPos: function() {
      var a = {
        x: 0,
        y: 0
      };
      if (navigator.isCocoonJS) return a;
      var b = m,
        c = b;
      a.x += c.offsetLeft;
      for (a.y += c.offsetTop; b = b.offsetParent;) c = b, a.x += c.offsetLeft, a.y += c.offsetTop;
      v && (a.x += v, a.y += v);
      return a
    },
    transformToWindow: function() {
      u.transform(1, 0, 0, 1, 0, 0);
      u.translate(q, l);
      u.scale(e, e)
    },
    setWindowAspect: b,
    fitWindow: function() {
      e =
        a();
      c(g / 2, k / 2)
    },
    getWindowFitScale: a,
    clipWindow: function() {
      u.beginPath();
      u.rect(0, 0, t, r);
      u.clip()
    },
    centerWindowAtPixel: c,
    zoomWindow: function(a, b, c) {
      var d = h(b, c);
      e = a;
      q = b - d.x * e;
      l = c - d.y * e
    },
    getTopLeftScreenCornerInWindowCoords: function() {
      return {
        x: -q / e,
        y: -l / e
      }
    },
    getWindowPos: function() {
      return {
        x: q,
        y: l
      }
    },
    getWindowScale: function() {
      return e
    },
    setWindowPos: function(a, b) {
      q = a;
      l = b
    },
    setWindowScale: function(a) {
      e = a
    }
  }
}();
Ptero.VectorSprite = function(b) {
  var c = b.vectorPathData;
  this.isShape = c.shapeCompatible;
  this.paths = c.paths;
  if (navigator.isCocoonJS && this.isShape) {
    var a = this.paths.length;
    this.shape = new Shape;
    for (c = 0; c < a; c++) {
      var d = new Path;
      this.paths[c](d);
      d.lineWidth && (d.lineWidth /= 2);
      this.shape.addPath(d)
    }
  }
  this.width = b.width;
  this.height = b.height;
  void 0 == b.centerX && (b.centerX = 0.5);
  void 0 == b.centerY && (b.centerY = 0.5);
  this.billboard = new Ptero.Billboard(this.width * b.centerX, this.height * b.centerY, this.width, this.height,
    b.scale || 1)
};
Ptero.VectorSprite.prototype = {
  isPixelInside: function(b, c, a) {
    if (this.paths) {
      var d = Ptero.screen.getCtx();
      d.save();
      this.billboard.transform(d, b);
      b = !1;
      var h, g = this.paths.length;
      for (h = 0; h < g; h++)
        if (this.paths[h](d), d.isPointInPath(c, a)) {
          b = !0;
          break
        }
      d.restore();
      return b
    }
  },
  draw: function(b, c, a) {
    if (this.sprite) this.redSprite && "red" == a ? this.redSprite.draw(b, c) : this.whiteSprite && "white" == a ? this.whiteSprite.draw(b, c) : this.sprite.draw(b, c);
    else {
      b.save();
      this.billboard.transform(b, c);
      if (this.shape) b.fillShape(this.shape);
      else if (this.paths)
        for (a =
          this.paths.length, c = 0; c < a; c++) b.save(), this.paths[c](b), b.strokeStyle && b.stroke(), b.fill(), b.restore();
      b.restore()
    }
  }
};
Ptero.Sprite = function(b, c) {
  this.img = b;
  void 0 == c.centerX && (c.centerX = 0.5);
  void 0 == c.centerY && (c.centerY = 0.5);
  this.billboard = new Ptero.Billboard(b.width * c.centerX, b.height * c.centerY, b.width, b.height, c.scale || 1)
};
Ptero.Sprite.prototype = {
  draw: function(b, c) {
    Ptero.painter.drawImage(b, this.img, c, this.billboard)
  },
  drawBorder: function(b, c, a, d) {
    Ptero.painter.drawBorder(b, c, a, this.billboard, d)
  }
};
Ptero.AnimSprite = function(b) {
  b.vectorAnim && (this.vectorAnim = b.vectorAnim, this.frameDuration = 1 / this.vectorAnim.fps, this.totalDuration = this.frameDuration * this.vectorAnim.frames.length);
  this.frame = this.time = 0;
  this.repeat = this.animating = !0
};
Ptero.AnimSprite.prototype = {
  isPixelInside: function(b, c, a) {
    return this.vectorAnim ? Ptero.assets.vectorSprites[this.vectorAnim.frames[this.frame]].isPixelInside(b, c, a) : this.getBillboard().isInsideScreenRect(c, a, b)
  },
  shuffleTime: function() {
    this.time = Math.random() * this.totalDuration
  },
  start: function() {
    this.animating = !0
  },
  restart: function() {
    this.reset();
    this.start()
  },
  stop: function() {
    this.animating = !1
  },
  reset: function() {
    this.time = 0
  },
  setRepeat: function(b) {
    this.repeat = b
  },
  setFinishCallback: function(b) {
    this.onFinish =
      b
  },
  isDone: function() {
    return this.time >= this.totalDuration
  },
  setTime: function(b) {
    this.time = b % this.totalDuration;
    this.frame = Math.floor(this.time / this.frameDuration)
  },
  update: function(b) {
    if (this.animating) {
      this.time += b;
      if (this.time >= this.totalDuration && (this.onFinish && this.onFinish(), !this.repeat)) {
        this.stop();
        return
      }
      this.time %= this.totalDuration;
      this.frame = Math.floor(this.time / this.frameDuration)
    }
  },
  draw: function(b, c, a) {
    void 0 == a && (a = this.frame);
    this.table ? this.table.draw(b, c, a) : this.mosaic ? this.mosaic.draw(b,
      c, this.mosaic.frame_names[a]) : this.vectorAnim && Ptero.assets.vectorSprites[this.vectorAnim.frames[a]].draw(b, c)
  },
  drawBorder: function(b, c, a, d) {
    this.table && this.table.drawBorder(b, c, a, d)
  },
  getBillboard: function() {
    if (this.table) return this.table.billboard;
    if (this.mosaic) return this.mosaic.billboard;
    if (this.vectorAnim) return Ptero.assets.vectorSprites[this.vectorAnim.frames[this.frame]].billboard
  }
};
Ptero.deferredSprites = function() {
  var b = [],
    c = 0;
  return {
    clear: function() {
      c = b.length = 0
    },
    defer: function(a, d) {
      b[c++] = {
        draw: a,
        z: d
      }
    },
    finalize: function() {
      b.sort(function(a, b) {
        return b.z - a.z
      })
    },
    draw: function(a) {
      var d;
      for (d = 0; d < c; d++) b[d].draw(a)
    }
  }
}();
Ptero.Enemy = function() {};
Ptero.Enemy.fromState = function(b, c) {
  c = c || 0;
  var a = b.enemyType,
    d = new Ptero.Enemy;
  d.setType(a);
  var a = b.points,
    h = [a[0].t + c],
    g, k = a.length;
  for (g = 1; g < k; g++) h.push(a[g].t - a[g - 1].t);
  d.path = d.attackPath = new Ptero.Path(Ptero.makeHermiteInterpForObjs(a, ["x", "y", "z", "angle"], h));
  return d
};
Ptero.Enemy.prototype = {
  makeAnimSprite: function(b) {
    b = Ptero.assets.makeAnimSprite(b);
    b.shuffleTime();
    this.startTime = b.time;
    return b
  },
  setType: function(b) {
    this.sprite = this.makeAnimSprite(b)
  },
  getPosition: function() {
    return this.path.pos
  },
  getFuturePosition: function(b) {
    return this.path.seek(b)
  },
  getTimeLeftInPath: function() {
    return this.path.totalTime - this.path.time
  },
  getBillboard: function() {
    return this.sprite.getBillboard()
  },
  init: function() {},
  update: function(b) {
    this.path.step(b);
    this.sprite.update(b)
  },
  draw: function(b) {
    var c =
      this.path.pos;
    this.path.isDone() || this.sprite.draw(b, c)
  },
  setTime: function(b) {
    this.path.setTime(b);
    this.sprite.setTime(this.startTime + b)
  }
};
Ptero.Frustum = function(b, c, a, d) {
  this.near = b;
  this.far = c;
  this.fov = a;
  this.aspect = d;
  this.createBoundingBox();
  this.createEdges()
};
Ptero.Frustum.prototype = {
  projectToZ: function(b, c) {
    return new Ptero.Vector(b.x / b.z * c, b.y / b.z * c, c)
  },
  projectToNear: function(b) {
    return this.projectToZ(b, this.near)
  },
  isInside: function(b) {
    var c = this.projectToNear(b);
    return b.z > this.near && Math.abs(c.x) < this.nearRight && Math.abs(c.y) < this.nearTop
  },
  getDepthScale: function(b, c) {
    return c / b * this.near
  },
  createBoundingBox: function() {
    this.nearTop = Math.tan(this.fov / 2) * this.near;
    this.nearRight = this.nearTop * this.aspect;
    this.nearBottom = -this.nearTop;
    this.nearLeft = -this.nearRight;
    this.nearWidth = 2 * this.nearRight;
    this.nearHeight = 2 * this.nearTop;
    this.farTop = Math.tan(this.fov / 2) * this.far;
    this.farRight = this.farTop * this.aspect;
    this.farBottom = -this.farTop;
    this.farLeft = -this.farRight;
    this.farWidth = 2 * this.farRight;
    this.farHeight = 2 * this.farTop;
    this.xmin = this.farLeft;
    this.xmax = this.farRight;
    this.ymin = this.farBottom;
    this.ymax = this.farTop;
    this.zmin = this.near;
    this.zmax = this.far;
    this.xrange = this.xmax - this.xmin;
    this.yrange = this.ymax - this.ymin;
    this.zrange = this.zmax - this.zmin;
    this.xcenter = this.xmin +
      this.xrange / 2;
    this.ycenter = this.ymin + this.yrange / 2;
    this.zcenter = this.zmin + this.zrange / 2
  },
  createEdges: function() {
    n = this.near;
    f = this.far;
    nl = this.nearLeft;
    nr = this.nearRight;
    nt = this.nearTop;
    nb = this.nearBottom;
    fl = this.farLeft;
    fr = this.farRight;
    ft = this.farTop;
    fb = this.farBottom;
    this.edges = [
      [{
        x: nl,
        y: nt,
        z: n
      }, {
        x: nr,
        y: nt,
        z: n
      }, {
        x: nr,
        y: nb,
        z: n
      }, {
        x: nl,
        y: nb,
        z: n
      }],
      [{
        x: fl,
        y: ft,
        z: f
      }, {
        x: fr,
        y: ft,
        z: f
      }, {
        x: fr,
        y: fb,
        z: f
      }, {
        x: fl,
        y: fb,
        z: f
      }],
      [{
        x: nl,
        y: nt,
        z: n
      }, {
        x: fl,
        y: ft,
        z: f
      }],
      [{
        x: nr,
        y: nt,
        z: n
      }, {
        x: fr,
        y: ft,
        z: f
      }],
      [{
        x: nr,
        y: nb,
        z: n
      }, {
        x: fr,
        y: fb,
        z: f
      }],
      [{
        x: nl,
        y: nb,
        z: n
      }, {
        x: fl,
        y: fb,
        z: f
      }]
    ]
  },
  getRandomPoint: function() {
    var b = Math.random() * this.xrange + this.xmin,
      c = Math.random() * this.yrange + this.ymin,
      a = Math.random() * this.zrange + this.zmin;
    return this.projectToZ({
      x: b,
      y: c,
      z: this.far
    }, a)
  }
};
Ptero.InterpDriver = function(b, c) {
  this.interp = b;
  this.startTime = b.startTime;
  this.totalTime = b.totalTime;
  this.loop = c;
  this.reset();
  this.freezeAtEnd = !1
};
Ptero.InterpDriver.prototype = {
  seek: function(b) {
    b = this.time + b;
    this.freezeAtEnd && (b = Math.min(this.totalTime, b));
    return this.interp(b)
  },
  setTime: function(b) {
    this.time = 0;
    this.step(b)
  },
  stepRandom: function() {
    this.step(Math.random() * this.totalTime)
  },
  step: function(b) {
    this.time += b;
    this.loop && (this.time %= this.totalTime);
    this.val = this.seek(0)
  },
  reset: function() {
    this.time = 0;
    this.step(0)
  },
  skipToEnd: function() {
    this.time = this.totalTime;
    this.step(0)
  },
  isDone: function() {
    return !this.loop && !this.freezeAtEnd && this.time >
      this.totalTime
  },
  isPresent: function() {
    return null != this.val
  }
};
Ptero.Path = function(b, c) {
  this.interp = b;
  this.startTime = b.startTime;
  this.totalTime = b.totalTime;
  this.loop = c;
  this.reset();
  this.freezeAtEnd = !1
};
Ptero.Path.prototype = {
  seek: function(b) {
    b = this.time + b;
    this.freezeAtEnd && (b = Math.min(this.totalTime, b));
    b = this.interp(b);
    if (null == b) return null;
    var c = (new Ptero.Vector).set(b);
    c.angle = b.angle;
    return c
  },
  setTime: function(b) {
    this.time = 0;
    this.step(b)
  },
  step: function(b) {
    this.time += b;
    this.loop && (this.time %= this.totalTime);
    this.pos = this.seek(0)
  },
  reset: function() {
    this.time = 0;
    this.step(0)
  },
  isDone: function() {
    return !this.loop && !this.freezeAtEnd && this.time > this.totalTime
  },
  isPresent: function() {
    return null != this.pos
  }
};
Ptero.scene = function() {
  function b(a) {
    Ptero.deferredSprites.clear();
    var b, g = c.length;
    for (b = 0; b < g; b++) {
      c[b].setTime(a);
      var k = c[b].getPosition();
      k && Ptero.deferredSprites.defer(function(a) {
        return function(b) {
          a.draw(b)
        }
      }(c[b]), k.z)
    }
    Ptero.deferredSprites.finalize()
  }
  var c = [],
    a = 0;
  return {
    init: function() {
      var b = Ptero.assets.json.ptero_paths.models,
        h = b.length;
      c.length = 0;
      var g;
      for (g = 0; g < h; g++) {
        var k = Ptero.Enemy.fromState(b[g]);
        c.push(k);
        a = Math.max(a, k.path.totalTime)
      }
    },
    setTime: b,
    setFracTime: function(c) {
      b(c * a)
    },
    draw: function() {
      var a = Ptero.screen.getCtx();
      a.save();
      Ptero.screen.transformToWindow();
      Ptero.assets.sprites.bg.draw(a, {
        x: 0,
        y: 0,
        z: Ptero.frustum.near
      });
      Ptero.deferredSprites.draw(a);
      a.restore()
    }
  }
}();
Ptero.Vector = function(b, c, a) {
  void 0 == a && (a = 0);
  this.x = b;
  this.y = c;
  this.z = a
};
Ptero.Vector.fromXYZ = function(b) {
  return (new Ptero.Vector).set(b)
};
Ptero.Vector.prototype = {
  set: function(b) {
    this.x = b.x;
    this.y = b.y;
    this.z = b.z;
    return this
  },
  copy: function() {
    return (new Ptero.Vector).set(this)
  },
  add: function(b) {
    this.x += b.x;
    this.y += b.y;
    this.z += b.z;
    return this
  },
  sub: function(b) {
    this.x -= b.x;
    this.y -= b.y;
    this.z -= b.z;
    return this
  },
  mul: function(b) {
    this.x *= b;
    this.y *= b;
    this.z *= b;
    return this
  },
  dot: function(b) {
    return this.x * b.x + this.y * b.y + this.z * b.z
  },
  cross: function(b) {
    return new Ptero.Vector(this.y * b.z - this.z * b.y, this.x * b.z - this.z * b.x, this.x * b.y - this.y * b.x)
  },
  dist_sq: function(b) {
    var c =
      this.x - b.x,
      a = this.y - b.y;
    b = this.z - b.z;
    return c * c + a * a + b * b
  },
  dist: function(b) {
    return Math.sqrt(this.dist_sq(b))
  },
  ease_to: function(b, c) {
    this.x += (b.x - this.x) * c;
    this.y += (b.y - this.y) * c;
    this.z += (b.z - this.z) * c
  },
  mag: function() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
  },
  normalize: function() {
    var b = this.mag();
    this.x /= b;
    this.y /= b;
    this.z /= b;
    return this
  },
  angleTo: function(b) {
    return Math.abs(Math.acos(this.dot(b)))
  }
};

function addParallax() {
  function b() {
    Ptero.screen.resizeCanvas(h.width(), h.height());
    var b = a.height(),
      l = d.height(),
      e = h.offset().top,
      p = h.height();
    g = Math.max(0, e - b);
    k = Math.min(l - b, e + p + b);
    s = k - g;
    c()
  }

  function c() {
    var b = a.scrollTop();
    g < b && b < k && (Ptero.scene.setFracTime(0 == s ? 0 : (b - g) / s), Ptero.scene.draw())
  }
  var a = $(window),
    d = $(document),
    h = $("#parallax-ptero"),
    g, k, s;
  a.resize(b);
  a.bind("scroll", c);
  b()
};
window.onload = function() {
  var b = document.getElementById("parallax-ptero");
  console.log("initing screen");
  Ptero.screen.init(b, 500, 281.25);
  Ptero.assets.load(function() {
    console.log("starting scene");
    Ptero.scene.init();
    addParallax()
  })
};